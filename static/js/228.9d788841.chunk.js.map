{"version":3,"file":"static/js/228.9d788841.chunk.js","mappings":"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","sources":["webpack://sky/./src/components/attributes-override/AttributesOverride.module.css?f7c2","components/attributes-override/AttributesOverrideStorage.js","webpack://sky/./src/components/attributes-override/attributes-override-form/AttributesOverrideForm.module.css?31bc","components/attributes-override/AttributesOverrideService.js","webpack://sky/./src/shared/components/lottie-glass-spinner/styles.module.css?1737","shared/components/lottie-glass-spinner/LottieGlassSpinner.jsx","webpack://sky/./src/shared/components/time-input/styles.module.css?7cd2","shared/components/time-input/TimeInput.jsx","components/attributes-override/attributes-override-form/AttributesOverrideFormComponent.jsx","constant/AttributeNameConstant.js","components/attributes-override/AttributesOverrideComponent.jsx","webpack://sky/./src/shared/components/custom-date-input/styles.module.css?09fa","shared/components/custom-date-input/CustomDateInput.jsx","webpack://sky/./src/shared/components/custom-date-range/styles.module.css?2cff","shared/components/custom-date-range/CustomDateRangeInput.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchWrapper\":\"AttributesOverride_searchWrapper__Pekb+\",\"search\":\"AttributesOverride_search__sIbSt\",\"imageDiv\":\"AttributesOverride_imageDiv__OB9tS\",\"timesIcon\":\"AttributesOverride_timesIcon__E4Suc\",\"searchIcon\":\"AttributesOverride_searchIcon__nzqRb\",\"timesIconWrapper\":\"AttributesOverride_timesIconWrapper__0DVt7\",\"searchIconWrapper\":\"AttributesOverride_searchIconWrapper__Qp5nq\",\"toggleAttributesTableIcon\":\"AttributesOverride_toggleAttributesTableIcon__Tz1BA\"};","class AttributesOverrideStorage {\r\n    tableHeadersLibrary = [\r\n        {\r\n            headerId: 1,\r\n            headerName: 'Title Name',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['titleNameFilter', 'titleNameFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 2,\r\n            headerName: 'Genre',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['genreFilter', 'genreFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 3,\r\n            headerName: 'Duration',\r\n            sortable : true,\r\n        },\r\n        {\r\n            headerId: 4,\r\n            headerName: 'Grades',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['gradeFilter', 'gradeFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 5,\r\n            headerName: 'Certificate',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['certificateFilter', 'certificateFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 6,\r\n            headerName: 'Year',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['yearFilter', 'yearFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 99,\r\n            headerName: '‎',\r\n        },\r\n    ];\r\n\r\n    tableHeadersImport = [\r\n        {\r\n            headerId: 1,\r\n            headerName: 'Title Name',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['titleNameFilter', 'titleNameFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 7,\r\n            headerName: 'Studio',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['studioFilter', 'studioFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 8,\r\n            headerName: 'Rating',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['ratingFilter', 'ratingFilterValue'],\r\n            },\r\n            sortable : true,\r\n        },\r\n        {\r\n            headerId: 4,\r\n            headerName: 'Grades',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['gradeFilter', 'gradeFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 9,\r\n            headerName: 'Play Restrictions',\r\n            filter: {\r\n                type: 1,\r\n                queryNames: ['playRestrictionsFilter', 'playRestrictionsFilterValue'],\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            headerId: 99,\r\n            headerName: 'Segments',\r\n        },\r\n    ];\r\n\r\n    attributesOverrideFields = [\r\n        {\r\n            id: 1,\r\n            label: 'EPG Title',\r\n            name: 'title',\r\n            type: 'text',\r\n            placeholder: 'Enter new EPG Title',\r\n            maxLength: '100',\r\n            titleSource: 'Library/Import',\r\n        },\r\n        {\r\n            id: 2,\r\n            label: 'Genre',\r\n            name: 'genre',\r\n            type: 'select',\r\n            placeholder: 'Enter new genre',\r\n            maxLength: '100',\r\n            titleSource: 'Library',\r\n            hasAutoComplete: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            label: 'Grade',\r\n            name: 'grade',\r\n            type: 'select',\r\n            placeholder: 'Enter new grade',\r\n            maxLength: '100',\r\n            titleSource: 'Library/Import',\r\n            hasAutoComplete: true,\r\n        },\r\n        {\r\n            id: 4,\r\n            label: 'Certificate',\r\n            name: 'certificate',\r\n            type: 'select',\r\n            placeholder: 'Enter new certificate',\r\n            maxLength: '100',\r\n            titleSource: 'Library',\r\n        },\r\n        {\r\n            id: 5,\r\n            label: 'Year of Production',\r\n            name: 'yearOfProduction',\r\n            type: 'number',\r\n            placeholder: 'Enter new year of production',\r\n            maxLength: '100',\r\n            titleSource: 'Library',\r\n        },\r\n        {\r\n            id: 6,\r\n            label: 'Duration',\r\n            name: 'duration',\r\n            type: 'time',\r\n            placeholder: '00:00:00',\r\n            maxLength: '100',\r\n            titleSource: 'Library',\r\n        },\r\n        {\r\n            id: 7,\r\n            label: 'Rating',\r\n            name: 'rating',\r\n            type: 'text',\r\n            placeholder: 'Enter new rating',\r\n            maxLength: '100',\r\n            titleSource: 'Import',\r\n        },\r\n        {\r\n            id: 8,\r\n            label1: 'Start',\r\n            label2: 'End',\r\n            name1: 'start',\r\n            name2: 'end',\r\n            type: 'multiple_input',\r\n            placeholder1: 'Enter start date',\r\n            placeholder2: 'Enter end date',\r\n            maxLength: '15',\r\n            titleSource: 'Library/Import',\r\n        },\r\n    ];\r\n};\r\n\r\nconst attributesOverrideStorage = new AttributesOverrideStorage();\r\nexport default attributesOverrideStorage;\r\n  ","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"AttributesOverrideForm_box__Y7I+Q\",\"closeIcon\":\"AttributesOverrideForm_closeIcon__jrL6f\",\"title\":\"AttributesOverrideForm_title__yyX3l\",\"body\":\"AttributesOverrideForm_body__2af0G\",\"details\":\"AttributesOverrideForm_details__7og2X\",\"detailColumn\":\"AttributesOverrideForm_detailColumn__yeJEQ\",\"detailName\":\"AttributesOverrideForm_detailName__LyooD\",\"form\":\"AttributesOverrideForm_form__AKZ6E\",\"formInput\":\"AttributesOverrideForm_formInput__+lUKG\",\"formInputLabel\":\"AttributesOverrideForm_formInputLabel__hK+6v\",\"autoCompleteWrapper\":\"AttributesOverrideForm_autoCompleteWrapper__OH-E9\",\"autoCompleteItemCategoryName\":\"AttributesOverrideForm_autoCompleteItemCategoryName__yXT0U\",\"autoCompleteItemProfileName\":\"AttributesOverrideForm_autoCompleteItemProfileName__ca61h\",\"footer\":\"AttributesOverrideForm_footer__+TeiZ\",\"trashcanIcon\":\"AttributesOverrideForm_trashcanIcon__T8ou5\",\"plusCircleIcon\":\"AttributesOverrideForm_plusCircleIcon__5cHQn\",\"errorText\":\"AttributesOverrideForm_errorText__7UCCs\",\"dateRangePickerLabel\":\"AttributesOverrideForm_dateRangePickerLabel__v5DsD\"};","import axios from 'axios';\r\n\r\nconst hostUrl = process.env.REACT_APP_HOST_URL;\r\n\r\nconst AttributesOverrideService = {\r\n    getCategoryAndProfileLookup() {\r\n        const url = hostUrl + 'AttributesOverride/CategoryAndProfileLookup';\r\n        return axios.get(url);\r\n    },\r\n\r\n    getTitles(parameters) {\r\n        const url = hostUrl + 'AttributesOverride/GetTitles' + parameters;\r\n        return axios.get(url);\r\n    },\r\n\r\n    exporTitles(parameters) {\r\n        const url = hostUrl + 'AttributesOverride/ExportTitles' + parameters;\r\n        return axios.get(url, { responseType: 'arraybuffer' });\r\n    },\r\n\r\n    getTitle(titleId) {\r\n        const url = hostUrl + 'AttributesOverride/GetTitleAttributes?titleId=' + titleId;\r\n        return axios.get(url);\r\n    },\r\n\r\n    saveAttributesOverride(titleId, json) {\r\n        const url = hostUrl + 'AttributesOverride/' + titleId;\r\n        return axios.put(url, json);\r\n    },\r\n\r\n    getCertificateProfileLookup() {\r\n        const url = hostUrl + 'AttributesOverride/GetCertificateProfileLookup';\r\n        return axios.get(url);\r\n    },\r\n\r\n    getGenreProfileLookup() {\r\n        const url = hostUrl + 'AttributesOverride/GetGenreProfileLookup';\r\n        return axios.get(url);\r\n    },\r\n\r\n    getGradeProfileLookup() {\r\n        const url = hostUrl + 'AttributesOverride/GetGradeProfileLookup';\r\n        return axios.get(url);\r\n    },\r\n};\r\n\r\nexport default AttributesOverrideService;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"lottieGlassSpinner\":\"styles_lottieGlassSpinner__TfKU1\"};","import PropTypes from 'prop-types';\r\nimport Lottie from 'react-lottie';\r\nimport hourglassIcon from '../../../assets/lotties/3671-hour-glass-animation';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction LottieGlassSpinner() {\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: hourglassIcon,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            <div className={styles.lottieGlassSpinner}>\r\n                <Lottie options={defaultOptions} height={120} width={120} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLottieGlassSpinner.propTypes = {\r\n    size: PropTypes.string,\r\n};\r\n  \r\nLottieGlassSpinner.defaultProps = {\r\n    size: '40px',\r\n};\r\n\r\nexport default LottieGlassSpinner;","// extracted by mini-css-extract-plugin\nexport default {\"timeInput\":\"styles_timeInput__rm+JN\",\"placeHolderInput\":\"styles_placeHolderInput__bdu-j\",\"smallerWidth\":\"styles_smallerWidth__x7612\",\"largerWidth\":\"styles_largerWidth__LE+5R\",\"input\":\"styles_input__0oS6L\",\"smallSemiColon\":\"styles_smallSemiColon__AsAu-\",\"readonlyInput\":\"styles_readonlyInput__+Otr8\",\"icon\":\"styles_icon__RQCVH\",\"clockIcon\":\"styles_clockIcon__cBUNp\",\"timeDropdown\":\"styles_timeDropdown__iMBfT\",\"hourInput\":\"styles_hourInput__JTZbl\",\"minuteInput\":\"styles_minuteInput__-GiSk\",\"secondInput\":\"styles_secondInput__s4Jbs\",\"semiColon\":\"styles_semiColon__XReZ3\",\"chevGreyIcon\":\"styles_chevGreyIcon__b+5lI\",\"noIcon\":\"styles_noIcon__qsHOr\",\"digitInput\":\"styles_digitInput__IJYT4\"};","import { useEffect, useState, useRef } from 'react';\r\n\r\nimport styles from './styles.module.css'\r\nimport { clockIcon, chevDownGreyIcon, chevUpGreyIcon } from '../../assets';\r\n\r\nconst TimeInput = ({\r\n    value,\r\n    name,\r\n    placeholder,\r\n    onChange,\r\n    format = 'HH:MM:SS',\r\n    width,\r\n    noIcon,\r\n}) => {\r\n    const [renderTimes, setRenderTimes] = useState(0);\r\n    const timeDropdownRef = useRef();\r\n    const hourTextFieldRef = useRef();\r\n    const minuteTextFieldRef = useRef();\r\n    const secondTextFieldRef = useRef();\r\n    const iconRef = useRef();\r\n    const [showTimeDropdown, setShowTimeDropdown] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [changeTimes, setChangeTimes] = useState(0);\r\n    const [showMainTextField, setShowMainTextField] = useState(false);\r\n\r\n    const getNumbersOnly = (string) => {\r\n        const stringArray = string.split('');\r\n        const result = stringArray.filter((char) => (\r\n            !isNaN(char) && !isNaN(parseFloat(char)) || char === ':'\r\n        ));\r\n        return result.join('');\r\n    }\r\n\r\n    const getValue = (time, timeTypeId) => {\r\n        const timeValue = time?.split(':')[timeTypeId];\r\n        if (timeValue && timeValue.length === 3) {\r\n            if (timeValue.substring(0,2) == \"00\") return timeValue.substring(1,3);\r\n            else if (timeValue.substring(0,1) == \"0\") return timeValue.substring(1,3);\r\n        }\r\n        return timeValue || '';\r\n    };\r\n\r\n    const hourValue = (inputValue && getValue(inputValue, 0)) || '00';\r\n    const minuteValue = (inputValue && getValue(inputValue, 1)) || '00';\r\n    const secondValue = (inputValue &&  getValue(inputValue, 2)) || '00';\r\n    \r\n    const changeHour = (action) => {  \r\n        if (action === 'increase') {\r\n            if (hourValue > 23) return false;\r\n            const time = (parseInt(hourValue) + 1)\r\n                + (format.includes('MM') ? ':' + minuteValue : '')\r\n                + (format.includes('MM') && format.includes('SS') ? ':' + secondValue : '');\r\n            setInputValue(time);\r\n        }\r\n        else {\r\n            if (hourValue < 1) return false;\r\n            const time = (parseInt(hourValue) - 1)\r\n                + (format.includes('MM') ? ':' + minuteValue : '')\r\n                + (format.includes('MM') && format.includes('SS') ? ':' + secondValue : '');\r\n            setInputValue(time);\r\n        }\r\n        setChangeTimes(changeTimes + 1);\r\n    };\r\n\r\n    const changeMinute = (action) => {\r\n        if (action === 'increase') {\r\n            if (minuteValue > 58) return false;\r\n            const time = hourValue \r\n                + ':' + (parseInt(minuteValue) + 1)\r\n                + (format.includes('MM') && format.includes('SS') ? ':' + secondValue : '');\r\n            setInputValue(time);\r\n        }\r\n        else {\r\n            if (minuteValue < 1) return false;\r\n            const time = hourValue\r\n                + ':' + (parseInt(minuteValue) - 1)\r\n                + (format.includes('MM') && format.includes('SS') ? ':' + secondValue : '');\r\n            setInputValue(time);\r\n        }\r\n        setChangeTimes(changeTimes + 1);\r\n    };\r\n\r\n    const changeSecond = (action) => {\r\n        if (action === 'increase') {\r\n            if (secondValue > 58) return false;\r\n            const time = hourValue + ':' + minuteValue + ':' + (parseInt(secondValue) + 1);\r\n            setInputValue(time);\r\n        }\r\n        else {\r\n            if (secondValue < 1) return false;\r\n            const time = hourValue + ':' + minuteValue + ':' + (parseInt(secondValue) - 1);\r\n            setInputValue(time);\r\n        }\r\n        setChangeTimes(changeTimes + 1);\r\n    };\r\n\r\n    const onChangeTimeFromDropdown = (timeValue, timeType) => {\r\n        let newTimeValue = timeValue;\r\n\r\n        if (newTimeValue.length === 2) {\r\n            if (timeType === 0) {\r\n                if (newTimeValue > 24) newTimeValue = `0${newTimeValue.substring(1,2)}`\r\n                else newTimeValue = newTimeValue.substring(0,2)\r\n            } else {\r\n                if (newTimeValue > 60) newTimeValue = `0${newTimeValue.substring(1,2)}`\r\n                else newTimeValue = newTimeValue.substring(0,2)\r\n            }\r\n        }\r\n\r\n        if (newTimeValue.length === 3) {\r\n            newTimeValue = newTimeValue.substring(1,3);\r\n            if (newTimeValue > 24 && timeType === 0) newTimeValue = `0${newTimeValue.substring(1,2)}`\r\n            else if (newTimeValue > 60) newTimeValue = `0${newTimeValue.substring(1,2)}`\r\n        }\r\n\r\n        if (newTimeValue.length === 0) newTimeValue = '00';\r\n\r\n        if (newTimeValue.length === 1) newTimeValue = `0${newTimeValue}`;\r\n\r\n        switch(timeType) {\r\n            case 0:\r\n                if (newTimeValue[0] > 3\r\n                    && newTimeValue.length > 1\r\n                    && newTimeValue > 25\r\n                ) newTimeValue = `0${newTimeValue.substring(1,2)}`;\r\n                setInputValue(newTimeValue + ':' + (minuteValue || '00') + ':' + (secondValue || '00'));\r\n                break;\r\n            case 1:\r\n                if (newTimeValue[1] > 5\r\n                    && newTimeValue.length > 1\r\n                    && newTimeValue > 60\r\n                ) newTimeValue = `0${newTimeValue.substring(1,2)}`;\r\n                setInputValue((hourValue || '00') + ':' + newTimeValue + ':' + (secondValue || '00'));\r\n                break;\r\n            case 2:\r\n                if (newTimeValue[2] > 5\r\n                    && newTimeValue.length > 1\r\n                    && newTimeValue > 60\r\n                ) newTimeValue = `0${newTimeValue.substring(1,2)}`;\r\n                setInputValue((hourValue || '00') + ':' + (minuteValue || '00') + ':' + newTimeValue);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n\r\n        setChangeTimes(changeTimes + 1);\r\n    };\r\n\r\n    const openTimeDropdown = () => setShowTimeDropdown(true);\r\n\r\n    const backdropClickedCloseDropdown = (e) => {\r\n        if (timeDropdownRef.current && !timeDropdownRef.current.contains(e.target)) {\r\n            setShowTimeDropdown(false);\r\n        }\r\n    };\r\n\r\n    const addZeroAtTheEndOfMinute = (minute) => {\r\n        const isTwoDigit = minute.length === 2;\r\n        const isOneDigit = minute.length === 1;\r\n        const isFirstDigitEqualsToSix = minute[0] === '6';\r\n        const isFirstDigitGreaterThanSix = parseInt(minute[0]) > 6;\r\n\r\n        if (isFirstDigitEqualsToSix) return '06';\r\n        if (isFirstDigitGreaterThanSix) return '0' + minute[0];\r\n\r\n        return isTwoDigit ? minute\r\n            : isOneDigit && '0' + minute\r\n            || '00';\r\n    };\r\n\r\n    const onBlurTimeInput = (e) => {\r\n        const value = hourValue\r\n        + (format.includes('MM')\r\n        ? ':'\r\n        + addZeroAtTheEndOfMinute(minuteValue)\r\n        : '')\r\n        + (format.includes('MM') && format.includes('SS')\r\n        ? ':'\r\n        + addZeroAtTheEndOfMinute(secondValue)\r\n        : '');\r\n        setInputValue(value);\r\n\r\n        if (value === '00:00:00') {\r\n            if ((hourTextFieldRef.current?.contains(e.target)\r\n                || minuteTextFieldRef.current?.contains(e.target)\r\n                || secondTextFieldRef.current?.contains(e.target)\r\n                || iconRef.current?.contains(e.target)\r\n                || timeDropdownRef.current?.contains(e.target))) return;\r\n            setShowMainTextField(false);\r\n        }\r\n    };\r\n\r\n    const setFocusToHourTextField = (e) => {\r\n        if (minuteTextFieldRef.current?.contains(e.target)\r\n            || secondTextFieldRef.current?.contains(e.target)\r\n            || iconRef.current?.contains(e.target)\r\n            || timeDropdownRef.current?.contains(e.target)\r\n        ) {\r\n            return;\r\n        }\r\n        setShowMainTextField(true);\r\n        hourTextFieldRef.current?.focus();\r\n    };\r\n\r\n    const onChangeFocus = (e, timeDigit) => {\r\n        const hour = 0;\r\n        const minute = 1;\r\n        const second = 2;\r\n        const key = e.key;\r\n\r\n        if (timeDigit === hour\r\n            && format.includes('MM')\r\n            && key === 'ArrowRight'\r\n        ) { \r\n            minuteTextFieldRef.current?.focus();\r\n        }\r\n\r\n        if (timeDigit === minute\r\n            && key === 'ArrowLeft'\r\n        ) {\r\n            hourTextFieldRef.current?.focus();\r\n        }\r\n\r\n        if (timeDigit === minute\r\n            && format.includes('SS')\r\n            && key === 'ArrowRight'\r\n        ) {\r\n            secondTextFieldRef.current?.focus();\r\n        }\r\n\r\n        if (timeDigit === second\r\n            && key === 'ArrowLeft'\r\n            && format.includes('MM')\r\n        ) {\r\n            minuteTextFieldRef.current?.focus();\r\n        }\r\n    };\r\n\r\n    const onFocusPlaceholderInput = () => {\r\n        setShowMainTextField(true);\r\n    };\r\n\r\n    const onFocusTextField = (e) => {\r\n        e.target.setSelectionRange(e.target.value.length, e.target.value.length)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (renderTimes === 0) setInputValue(value);\r\n        setRenderTimes(renderTimes + 1);\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (renderTimes > 0) onChange(inputValue === '00:00:00' ? '' : inputValue, name);\r\n    }, [inputValue, renderTimes]);\r\n\r\n    useEffect(() => {\r\n        if (showMainTextField) hourTextFieldRef.current?.focus();\r\n    }, [showMainTextField]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mouseup', onBlurTimeInput);\r\n        return () => document.removeEventListener('mouseup', onBlurTimeInput);\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', backdropClickedCloseDropdown);\r\n        return () => document.removeEventListener('mousedown', backdropClickedCloseDropdown);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={styles.timeInput}\r\n            style={{ width: width }}\r\n            onClick={setFocusToHourTextField}\r\n        >\r\n            {showMainTextField\r\n                || (inputValue && inputValue !== '00:00:00') ? (\r\n                <>\r\n                    <div className={styles.digitInput}>\r\n                    <input\r\n                        ref={hourTextFieldRef}\r\n                        className={`${styles.input}\r\n                            ${getValue(inputValue, 0).includes('1')\r\n                            ? styles.smallerWidth : styles.largerWidth}\r\n                        `}\r\n                        value={getValue(inputValue, 0)}\r\n                        placeholder={placeholder}\r\n                        onBlur={onBlurTimeInput}\r\n                        onFocus={onFocusTextField}\r\n                        onChange={(e) => (\r\n                            onChangeTimeFromDropdown(\r\n                                getNumbersOnly(e.target.value),\r\n                                0,\r\n                            )\r\n                        )}\r\n                        onKeyDown={(e) => onChangeFocus(e, 0)}\r\n                    />\r\n                </div>\r\n                <div className={styles.smallSemiColon}>:</div>\r\n                <div className={styles.digitInput}>\r\n                    <input\r\n                        ref={minuteTextFieldRef}\r\n                        className={`${styles.input}\r\n                            ${getValue(inputValue, 1).includes('1')\r\n                            ? styles.smallerWidth : styles.largerWidth}\r\n                        `}\r\n                        value={format.includes('MM') ? getValue(inputValue, 1) : '00'}\r\n                        placeholder={placeholder}\r\n                        onBlur={onBlurTimeInput}\r\n                        onFocus={onFocusTextField}\r\n                        onChange={(e) => (\r\n                            format.includes('MM')\r\n                            && onChangeTimeFromDropdown(\r\n                                getNumbersOnly(e.target.value),\r\n                                1,\r\n                            )\r\n                        )}\r\n                        onKeyDown={(e) => onChangeFocus(e, 1)}\r\n                    />\r\n                </div>\r\n                {format.includes('SS') && (\r\n                    <>\r\n                        <div className={styles.smallSemiColon}>:</div>\r\n                        <div className={styles.digitInput}>\r\n                            <input\r\n                                ref={secondTextFieldRef}\r\n                                className={`${styles.input}\r\n                                    ${getValue(inputValue, 2).includes('1')\r\n                                    ? styles.smallerWidth : styles.largerWidth}\r\n                                `}\r\n                                value={getValue(inputValue, 2)}\r\n                                placeholder={placeholder}\r\n                                onBlur={onBlurTimeInput}\r\n                                onFocus={onFocusTextField}\r\n                                onChange={(e) => (\r\n                                    onChangeTimeFromDropdown(\r\n                                        getNumbersOnly(e.target.value),\r\n                                        2,\r\n                                    )\r\n                                )}\r\n                                onKeyDown={(e) => onChangeFocus(e, 2)}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                </>\r\n            ) : (\r\n                <input\r\n                    className={styles.placeHolderInput}\r\n                    placeholder={placeholder}\r\n                    onFocus={() => onFocusPlaceholderInput}\r\n                />\r\n            )}\r\n\r\n            <div ref={iconRef} className={styles.icon} onClick={openTimeDropdown} hidden={noIcon}>\r\n                <img className={styles.clockIcon} src={clockIcon} />\r\n\r\n                {showTimeDropdown && (\r\n                    <div ref={timeDropdownRef} className={styles.timeDropdown}>\r\n                        <div className={styles.hour}>\r\n                            <img\r\n                                className={styles.chevGreyIcon}\r\n                                src={chevUpGreyIcon}\r\n                                alt=\"\"\r\n                                onClick={() => changeHour('increase')}\r\n                            />\r\n                            <input\r\n                                className={styles.hourInput}\r\n                                value={getValue(inputValue, 0)}\r\n                                placeholder=\"00\"\r\n                                onFocus={onFocusTextField}\r\n                                onChange={(e) => (\r\n                                    onChangeTimeFromDropdown(\r\n                                        getNumbersOnly(e.target.value),\r\n                                        0,\r\n                                    )\r\n                                )}\r\n                            />\r\n                            <img\r\n                                className={styles.chevGreyIcon}\r\n                                src={chevDownGreyIcon}\r\n                                alt=\"\"\r\n                                onClick={() => changeHour('decrease')}\r\n                            />\r\n                        </div>\r\n\r\n                        {format.includes('MM') && (\r\n                            <>\r\n                                <div className={styles.semiColon}>:</div>\r\n\r\n                                <div className={styles.minute}>\r\n                                    <img\r\n                                        className={styles.chevGreyIcon}\r\n                                        src={chevUpGreyIcon}\r\n                                        alt=\"\"\r\n                                        onClick={() => changeMinute('increase')}\r\n                                    />\r\n                                    <input\r\n                                        className={styles.minuteInput}\r\n                                        value={getValue(inputValue, 1)}\r\n                                        placeholder=\"00\"\r\n                                        onFocus={onFocusTextField}\r\n                                        onChange={(e) => (\r\n                                            onChangeTimeFromDropdown(\r\n                                                getNumbersOnly(e.target.value),\r\n                                                1,\r\n                                            )\r\n                                        )}\r\n                                    />\r\n                                    <img\r\n                                        className={styles.chevGreyIcon}\r\n                                        src={chevDownGreyIcon}\r\n                                        alt=\"\"\r\n                                        onClick={() => changeMinute('decrease')}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        {format.includes('MM') && format.includes('SS') && (\r\n                            <>\r\n                                <div className={styles.semiColon}>:</div>\r\n\r\n                                <div className={styles.second}>\r\n                                    <img\r\n                                        className={styles.chevGreyIcon}\r\n                                        src={chevUpGreyIcon}\r\n                                        alt=\"\"\r\n                                        onClick={() => changeSecond('increase')}\r\n                                    />\r\n                                    <input\r\n                                        className={styles.secondInput}\r\n                                        value={getValue(inputValue, 2)}\r\n                                        placeholder=\"00\"\r\n                                        onFocus={onFocusTextField}\r\n                                        onChange={(e) => (\r\n                                            onChangeTimeFromDropdown(\r\n                                                getNumbersOnly(e.target.value),\r\n                                                2,\r\n                                            )\r\n                                        )}\r\n                                    />\r\n                                    <img\r\n                                        className={styles.chevGreyIcon}\r\n                                        src={chevDownGreyIcon}\r\n                                        alt=\"\"\r\n                                        onClick={() => changeSecond('decrease')}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeInput;","import React, { useState, useEffect, useRef } from 'react';\r\nimport moment from 'moment';\r\nimport styles from './AttributesOverrideForm.module.css';\r\nimport { success } from '../../../shared/elements/notification/NotifyComponent';\r\nimport { closeIcon, saveIcon, closeCircleIcon, trashCanSmIcon, plusCircleIcon  } from '../../../assets';\r\nimport Input from '../../../shared/components/input/Input';\r\nimport AttributesOverrideStorage from '../AttributesOverrideStorage';\r\nimport AttributesOverrideService from '../AttributesOverrideService';\r\nimport LottieGlassSpinner from '../../../shared/components/lottie-glass-spinner/LottieGlassSpinner';\r\nimport TimeInput from '../../../shared/components/time-input/TimeInput';\r\nimport CustomDateRangeInput from '../../../shared/components/custom-date-range/CustomDateRangeInput';\r\nimport SelectComponent from '../../../shared/elements/select/select.component';\r\nimport { Certificate, Genre, Grade  } from '../../../constant/AttributeNameConstant';\r\n\r\nconst AttributesOverrideFormComponent = ({ isFetching, data, getTitles, getTitleAttributes, onHide, titleSource }) => {\r\n    \r\n    const { attributesOverrideFields } = AttributesOverrideStorage;\r\n    const inputRef = useRef();\r\n    const [inputRefName, setInputRefName] = useState('');\r\n    const [isSaving, setIsSaving] = useState(false);\r\n    const [parameters, setParameters] = useState({});\r\n    const [startRangeIsRequiredMessage, setStartRangeIsRequiredMessage] = useState('');\r\n    const [invalidDateRanges, setInvalidDateRanges] = useState([]);\r\n    const [overlappingDates, setOverlappingDates] = useState([]);\r\n    const [lessThanTodayDates, setLessThanTodayDates] = useState([]);\r\n    const dateTodayWithoutTimeStamp = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\r\n    const [maxId, setMaxId] = useState(0);\r\n    const [certificateProfileLookup, setCertificateProfileLookup] = useState([]);\r\n    const [genreProfileLookup, setGenreProfileLookup] = useState([]);\r\n    const [gradeProfileLookup, setGradeProfileLookup] = useState([]);\r\n    const [disabledLookups, setDisabledLookups] = useState({});\r\n    const [isGettingCertificateLookup, setIsGettingCertificateLookup] = useState(true);\r\n    const [isGettingGenreLookup, setIsGettingGenreLookup] = useState(true);\r\n    const [isGettingGradeLookup, setIsGettingGradeLookup] = useState(true);\r\n\r\n    const onChangeSetParameters = (e, label, type, isStartHistorical, isEndHistorical, id) => {      \r\n        let value = e.target.value;\r\n        if (type === 'number') {\r\n            value = value.replace(/[^0-9]/g, \"\");\r\n        }\r\n        if(type === 'number' && value.length > 4) {\r\n            return false\r\n        }\r\n        if(type === 'start_end_date'){\r\n            const newParameters = {...parameters};\r\n            let index = parseInt(label.split(\"-\")[2]);\r\n            let start = value.start ? moment(value.start).format(\"DD/MM/YYYY\") : '';\r\n            let end = value.end ? moment(value.end).format(\"DD/MM/YYYY\") : '';\r\n            newParameters.startEndDate[index].value = `${start},${end},${isStartHistorical || ''},${isEndHistorical || ''},${id || ''}`;\r\n            newParameters.startEndDate[index].dayStart = e.target.value.dayStart;\r\n            newParameters.startEndDate[index].dayEnd = e.target.value.dayEnd;\r\n            newParameters.startEndDate[index].monthStart = e.target.value.monthStart;\r\n            newParameters.startEndDate[index].monthEnd = e.target.value.monthEnd;\r\n            newParameters.startEndDate[index].yearStart = e.target.value.yearStart;\r\n            newParameters.startEndDate[index].yearEnd = e.target.value.yearEnd;\r\n            setParameters(newParameters);\r\n            return;\r\n        }\r\n\r\n        setParameters({ ...parameters, [e.target.name]: value });\r\n    };\r\n    \r\n    const onChangeTimeInputSetParameters = (value, key) => {\r\n        setParameters({ ...parameters, [key]: value });\r\n    };\r\n\r\n    const checkTitleSource = (source) => {\r\n        const titleSourceText = titleSource ? 'Library' : 'Import'\r\n        return source.includes(titleSourceText);\r\n    };\r\n\r\n    const hasParameters = () => {\r\n        const result = Object.keys(parameters)\r\n            .filter(key => key !== \"startEndDate\"\r\n            && (parameters[key]\r\n            && (parameters[key] !== '' || parameters[key] !== '00:00:00'))).length > 0;\r\n\r\n        return result;\r\n    }\r\n\r\n    const checkDateRangeIfValid = () => {\r\n        const invalidDates = [];\r\n        parameters.startEndDate.map((date) => {\r\n            const start = moment(date.value?.split(',')[0], 'DD/MM/YYYY');\r\n            const end = moment(date.value?.split(',')[1], 'DD/MM/YYYY');\r\n            if (end && start.isAfter(end)) invalidDates.push(date?.split(',')[4]);\r\n        });\r\n        setInvalidDateRanges(invalidDates);\r\n        return invalidDates.filter((o) => o).length > 0;\r\n    };\r\n\r\n    const dateRangeOverlaps = (a_start, a_end, b_start, b_end) => {\r\n        const aStart = a_start && new Date(a_start);\r\n        const aEnd = a_end && new Date(a_end);\r\n        const bStart = b_start && new Date(b_start);\r\n        const bEnd = b_end && new Date(b_end);\r\n\r\n        if (aStart && bStart && !aEnd && !bEnd) return (aStart >= bStart) || (bStart >= aStart); // date range overlap but no end dates\r\n        if (aStart && bStart && !aEnd) return (bStart <= aStart && bEnd >= aStart) || (aStart <= bStart && aStart <= bEnd); // date range overlap but no aEnd\r\n        if (aStart && bStart && !bEnd) return (aStart <= bStart && aEnd >= bStart) || (bStart <= aStart && bStart <= aEnd); // date range overlap but no bEnd\r\n        if (aStart && bStart) return (aStart >= bStart && aStart <= bEnd) || (bStart >= aStart && bStart <= aEnd); // date range overlap\r\n    };\r\n\r\n    const checkDateRanges = () => {\r\n        var i, j;\r\n        let overlappedDates = [];\r\n        let datesLessThanToday = [];\r\n\r\n        for (i = 0; i < parameters.startEndDate.length ; i++) {\r\n          for (j = 0; j < parameters.startEndDate.length; j++) {\r\n            const fieldStart = parameters.startEndDate[i].value?.split(',')[0]\r\n                && parameters.startEndDate[i].value?.split(',')[0] !== 'Invalid date'\r\n                ? moment(parameters.startEndDate[i].value?.split(',')[0], 'DD/MM/YYYY') : '';\r\n            const fieldEnd = parameters.startEndDate[i].value?.split(',')[1]\r\n                && parameters.startEndDate[i].value?.split(',')[1] !== 'Invalid date'\r\n                ? moment(parameters.startEndDate[i].value?.split(',')[1], 'DD/MM/YYYY') : '';\r\n            const otherFieldStart = parameters.startEndDate[j].value?.split(',')[0]\r\n                && parameters.startEndDate[j].value?.split(',')[0] !== 'Invalid date'\r\n                ? moment(parameters.startEndDate[j].value?.split(',')[0], 'DD/MM/YYYY') : '';\r\n            const otherFieldEnd = parameters.startEndDate[j].value?.split(',')[1]\r\n                && parameters.startEndDate[j].value?.split(',')[1] !== 'Invalid date'\r\n                ? moment(parameters.startEndDate[j].value?.split(',')[1], 'DD/MM/YYYY') : '';\r\n            const isFieldStartHistorical = (parameters.startEndDate[i].value?.split(',')[2] && parameters.startEndDate[i].value?.split(',')[2] === 'true');\r\n            const isFieldEndHistorical = (parameters.startEndDate[i].value?.split(',')[3] && parameters.startEndDate[i].value?.split(',')[3] === 'true');\r\n            const isDateOverlapping = dateRangeOverlaps(fieldStart, fieldEnd, otherFieldStart, otherFieldEnd) && i !== j;\r\n            const isDateLessThanToday = fieldStart && moment(fieldStart).isBefore(moment(dateTodayWithoutTimeStamp, 'DD/MM/YYYY'));\r\n\r\n            if (isDateOverlapping && (!isFieldStartHistorical || !isFieldEndHistorical)) overlappedDates.push(parameters.startEndDate[i].value?.split(',')[4]);\r\n            if (isDateLessThanToday && !isFieldStartHistorical) datesLessThanToday.push(parameters.startEndDate[i].value?.split(',')[4]);\r\n          }\r\n        }\r\n        setOverlappingDates(overlappedDates);\r\n        setLessThanTodayDates(datesLessThanToday);\r\n        return overlappedDates.length > 0 || datesLessThanToday.length > 0;\r\n    };\r\n    const handleSubmit = () => {\r\n        const hasInvalidDates = checkDateRangeIfValid();\r\n        const hasWrongDates = checkDateRanges();\r\n        setIsSaving(true);\r\n        if (hasParameters()\r\n            && parameters.startEndDate && parameters.startEndDate.every(o => !o.value?.split(',')[0])\r\n        ) {\r\n            setIsSaving(false);\r\n            setStartRangeIsRequiredMessage('Start date is required');\r\n            return;\r\n        } else {\r\n            setStartRangeIsRequiredMessage('');\r\n        }\r\n\r\n        if (hasParameters() && (hasWrongDates || hasInvalidDates)) {\r\n            setIsSaving(false);\r\n            return;\r\n        }\r\n\r\n        parameters.startEndDate = parameters.startEndDate.filter((o) => o.value?.split(',')[0]);\r\n        parameters.startEndDate = parameters.startEndDate.map((date) => `${date.value.split(',')[0]},${date.value.split(',')[1]}`);\r\n\r\n        parameters.duration = parameters.duration ? parameters.duration + ':00' : '';\r\n\r\n        if (!hasParameters()) {\r\n            parameters.startEndDate = [''];\r\n        }\r\n        \r\n        AttributesOverrideService.saveAttributesOverride(data.titleId, parameters)\r\n        .then(() => {\r\n            success('Attributes override successfully updated');\r\n            getTitles();\r\n            getTitleAttributes();\r\n            setParameters({});\r\n        })\r\n        .finally(() => setIsSaving(false));\r\n    };\r\n\r\n    const convertToLocalTimeWithoutTime = (localDate) => {\r\n        const day = localDate.split('/')[0];\r\n        const monthIndex = localDate.split('/')[1] - 1;\r\n        const year = localDate.split('/')[2];\r\n        const timeWithoutTime = new Date(parseInt(year), parseInt(monthIndex), parseInt(day));\r\n        timeWithoutTime.setHours(0, 0, 0, 0);\r\n        return timeWithoutTime;\r\n    };\r\n\r\n    const checkIfHistoricalDate = (date) => {\r\n        const dateWithoutTime = convertToLocalTimeWithoutTime(date);\r\n        const dateTodayWithoutTime = new Date();\r\n        dateTodayWithoutTime.setHours(0, 0, 0, 0);\r\n        const isHistorical = dateWithoutTime < dateTodayWithoutTime;\r\n        return isHistorical;\r\n    };\r\n\r\n    const constructLookup = (data) => {\r\n        return data.map((item, i) => ({\r\n            id: i,\r\n            name: item.name,\r\n        }));\r\n    };\r\n\r\n    const getCertificateProfileLookup = () => {\r\n        setIsGettingCertificateLookup(true);\r\n        AttributesOverrideService.getCertificateProfileLookup()\r\n        .then((response) => {\r\n            const result = constructLookup(response.data);\r\n            setCertificateProfileLookup(result);\r\n        })\r\n        .finally(() => setIsGettingCertificateLookup(false));\r\n    };\r\n\r\n    const getGenreProfileLookup = () => {\r\n        setIsGettingGenreLookup(true);\r\n        AttributesOverrideService.getGenreProfileLookup()\r\n        .then((response) => {\r\n            const result = constructLookup(response.data);\r\n            setGenreProfileLookup(result);\r\n        })\r\n        .finally(() => setIsGettingGenreLookup(false));\r\n    };\r\n\r\n    const getGradeProfileLookup = () => {\r\n        setIsGettingGradeLookup(true);\r\n        AttributesOverrideService.getGradeProfileLookup()\r\n        .then((response) => {\r\n            const result = constructLookup(response.data);\r\n            setGradeProfileLookup(result);\r\n        })\r\n        .finally(() => setIsGettingGradeLookup(false));\r\n    };\r\n\r\n    const getList = (label) => {\r\n        if (label.toLowerCase() === Certificate.toLowerCase()) return certificateProfileLookup;\r\n        if (label.toLowerCase() === Genre.toLowerCase()) return genreProfileLookup;\r\n        if (label.toLowerCase() === Grade.toLowerCase()) return gradeProfileLookup;\r\n    };\r\n\r\n    const onSelectAttribute = (data, name) => {\r\n        setParameters({ ...parameters, [name]: data.name });\r\n    };\r\n\r\n    const handleSetDisabledLookups = () => {\r\n        setDisabledLookups({\r\n            certificate: certificateProfileLookup.length === 0,\r\n            genre: genreProfileLookup.length === 0,\r\n            grade: gradeProfileLookup.length === 0,\r\n        });\r\n    };\r\n\r\n    const isDateRangeDisabled = () => {\r\n        return !parameters.genre && !parameters.grade && !parameters.certificate && !parameters.title && !parameters.yearOfProduction && !parameters.duration\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCertificateProfileLookup();\r\n        getGenreProfileLookup();\r\n        getGradeProfileLookup();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleSetDisabledLookups();\r\n    }, [certificateProfileLookup, genreProfileLookup, gradeProfileLookup]);\r\n\r\n    useEffect(() => {\r\n        if (data && !isGettingCertificateLookup && !isGettingGenreLookup && !isGettingGradeLookup) {\r\n            setParameters({\r\n                title: data.overrideValues.title,\r\n                genre: data.overrideValues.genre,\r\n                grade: data.overrideValues.grade,\r\n                certificate: data.overrideValues.certificate,\r\n                yearOfProduction: data.overrideValues.yearOfProduction,\r\n                duration: data.overrideValues.duration,\r\n                rating: data.overrideValues.rating,\r\n                startEndDate: data.overrideValues.startEndDate?.length > 0\r\n                ? data.overrideValues.startEndDate\r\n                    .sort()\r\n                    .filter((o) => o.split(',')[0] || o.split(',')[1])\r\n                    .map((o, i) => {\r\n                        const historicalStartDate = o?.split(',')[0] && checkIfHistoricalDate(o?.split(',')[0]);\r\n                        const historicalEndDate = o?.split(',')[1] && checkIfHistoricalDate(o?.split(',')[1]);\r\n                        const id = i + 1;\r\n\r\n                        return {\r\n                            id,\r\n                            value: `${o?.split(',')[0]},${o?.split(',')[1]},${historicalStartDate},${historicalEndDate},${i}`,\r\n                            dayStart: null, dayEnd: null, monthStart: null, monthEnd: null, yearStart: null, yearEnd: null \r\n                        };\r\n                    })\r\n                : [{ id: 0, value: ',,false,false,0', dayStart: null, dayEnd: null, monthStart: null, monthEnd: null, yearStart: null, yearEnd: null }],\r\n                });\r\n        } else {\r\n            setParameters({});\r\n        }\r\n        setStartRangeIsRequiredMessage('');\r\n        setInvalidDateRanges([]);\r\n        setOverlappingDates([]);\r\n    }, [data, isGettingCertificateLookup, isGettingGenreLookup, isGettingGradeLookup]);\r\n\r\n    return (\r\n        <div className={styles.box}>\r\n            {isFetching || isSaving ? (\r\n                <LottieGlassSpinner />\r\n            ) : (\r\n                <>\r\n                    <div className=\"position-relative\">\r\n                        <i>\r\n                            <img\r\n                                className={styles.closeIcon}\r\n                                src={closeIcon}\r\n                                alt=\"\"\r\n                                onClick={onHide}\r\n                                onKeyDown={onHide}\r\n                                role=\"presentation\"\r\n                            />\r\n                        </i>\r\n                    </div>\r\n\r\n                    <div className={styles.title} title={data.title}>{data.title}</div>\r\n\r\n                    <div className={styles.body}>\r\n                        <div className={styles.details}>\r\n                            <div className={styles.detailColumn}>\r\n                                <div title={data.referenceNo} className={styles.detailName}>\r\n                                    <span>Title ID:</span> {data.referenceNo}\r\n                                </div>\r\n                                {data.library == true &&\r\n                                <>\r\n                                    <div title={data.dealCode} className={styles.detailName}>\r\n                                        <span>Deal Code:</span> {data.dealCode}\r\n                                    </div>\r\n                                    <div title={data.dealName} className={styles.detailName}>\r\n                                        <span>Deal Name:</span> {data.dealName}\r\n                                    </div>\r\n                                </>\r\n                                }\r\n                                {data.library == false &&\r\n                                <>\r\n                                    <div title={data.studio} className={styles.detailName}>\r\n                                        <span>Studio:</span> {data.studio}\r\n                                    </div>\r\n                                    <div title={data.playRestriction} className={styles.detailName}>\r\n                                        <span>Play Restriction:</span> {data.playRestriction}\r\n                                    </div>\r\n                                </>\r\n                                }\r\n\r\n                            </div>\r\n                            {data.library == true &&\r\n                                <>\r\n                            <div className={styles.detailColumn}>\r\n                                <div title={data.dayType} className={styles.detailName}>\r\n                                    <span>Day Type:</span> {data.dayType}\r\n                                </div>\r\n                                <div title={data.dayPeriod} className={styles.detailName}>\r\n                                    <span>Day Period:</span> {data.dayPeriod}\r\n                                </div>\r\n                                <div title={data.exhibPlays} className={styles.detailName}>\r\n                                    <span>Exhib Plays:</span> {data.exhibPlays}\r\n                                </div>\r\n                            </div>\r\n                                </>\r\n                                }\r\n\r\n                        </div>\r\n\r\n                        <div className={styles.form}>\r\n                            {attributesOverrideFields.map((item) => (\r\n                                <>\r\n                                    {checkTitleSource(item.titleSource) && (\r\n                                        <div className={styles.formInput}>\r\n                                            { item.type !== 'multiple_input' ? (\r\n                                                <>\r\n                                                    <label className={styles.formInputLabel} title={data[item.name]}>\r\n                                                        <span>{item.label}:</span> {data[item.name]}\r\n                                                    </label>\r\n                                                    \r\n                                                    <div ref={item.label === inputRefName ? inputRef : null}>\r\n                                                        {item.type === 'time' ? (\r\n                                                            <TimeInput\r\n                                                                noIcon\r\n                                                                value={parameters[item.name]}\r\n                                                                name={item.name}\r\n                                                                placeholder={item.placeholder}\r\n                                                                onChange={onChangeTimeInputSetParameters}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <>\r\n                                                                {item.type === 'select' ? (\r\n                                                                    <SelectComponent\r\n                                                                        list={() => getList(item.label)}\r\n                                                                        text={parameters[item.name] || 'Please select an override value'}\r\n                                                                        onSelect={(data) => onSelectAttribute(data, item.name)}\r\n                                                                        disabled={disabledLookups[item.name]}\r\n                                                                        withSearch\r\n                                                                        width=\"100%\"\r\n                                                                    />\r\n                                                                ) : (\r\n                                                                    <Input\r\n                                                                        value={parameters[item.name]}\r\n                                                                        name={item.name}\r\n                                                                        placeHolder={item.placeholder}\r\n                                                                        maxLength={item.maxLength}\r\n                                                                        onChange={(e) => onChangeSetParameters(e, item.label, item.type)}\r\n                                                                    />\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </>\r\n                                            ) : parameters.startEndDate?.length > 0 && (\r\n                                                <>\r\n                                                    {parameters.startEndDate.map((x, index) => (\r\n                                                        <div className=\"w-100\" key={index}>\r\n                                                            {index === 0  && (\r\n                                                                <div className=\"d-flex\">\r\n                                                                    <div className={styles.dateRangePickerLabel}>Start:</div>\r\n                                                                    <div className={styles.dateRangePickerLabel}>End:</div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                            <div className=\"d-flex w-100\">\r\n                                                                <div className=\"w-100 mb-1\">\r\n                                                                    <CustomDateRangeInput\r\n                                                                        key={x.id}\r\n                                                                        min={new Date()}\r\n                                                                        onChange={(e) => onChangeSetParameters({\r\n                                                                            target: { value: e }}, `${'start-end'}-${index}`, 'start_end_date', x.value?.split(',')[2], x.value?.split(',')[3], x.value?.split(',')[4]\r\n                                                                        )}\r\n                                                                        startSettings={{\r\n                                                                            value: !(x.value?.split(\",\")[0]) || x.value?.split(\",\")[0] === \"\"? null : moment(x.value?.split(\",\")[0], \"DD/MM/YYYY\").toDate(),\r\n                                                                            label: null,\r\n                                                                            disabled: x.value?.split(',')[2] === 'true' || isDateRangeDisabled(),\r\n                                                                            dayStart: x.dayStart,\r\n                                                                            monthStart: x.monthStart,\r\n                                                                            yearStart: x.yearStart,\r\n                                                                        }}\r\n                                                                        endSettings={{\r\n                                                                            value: !(x.value?.split(\",\")[1]) || x.value?.split(\",\")[1] === \"\"? null :moment(x.value?.split(\",\")[1], \"DD/MM/YYYY\").toDate(),\r\n                                                                            label: null,\r\n                                                                            disabled: x.value?.split(',')[3] === 'true' || isDateRangeDisabled(),\r\n                                                                            dayEnd: x.dayEnd,\r\n                                                                            monthEnd: x.monthEnd,\r\n                                                                            yearEnd: x.yearEnd,\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    {index === 0 ?  (\r\n                                                                        <i className={styles.plusBoxIcon} title=\"Add Date\">\r\n                                                                            <img\r\n                                                                                className={styles.plusCircleIcon}\r\n                                                                                src={plusCircleIcon}\r\n                                                                                alt=\"\"\r\n                                                                                role=\"presentation\"\r\n                                                                                onClick={() => {\r\n                                                                                    if(!isDateRangeDisabled()) {\r\n                                                                                        setParameters({\r\n                                                                                            ...parameters,\r\n                                                                                            startEndDate: [ ...parameters.startEndDate,{id: parameters.startEndDate.length > 0\r\n                                                                                                ? (maxId === 0 ? parameters.startEndDate.length : 0) + maxId + 1 : 1 ,value: `,,false,false,${parameters.startEndDate.length > 0\r\n                                                                                                ? (maxId === 0 ? parameters.startEndDate.length : 0) + maxId + 1 : 1}`, dayStart: null, dayEnd: null, monthStart: null, monthEnd: null, yearStart: null, yearEnd: null }],\r\n                                                                                        })\r\n                                                                                        if (maxId === 0) setMaxId(parameters.startEndDate.length + 1)\r\n                                                                                        else setMaxId(maxId + 1);\r\n                                                                                    }\r\n                                                                                }}\r\n                                                                            />\r\n                                                                        </i>\r\n                                                                    ) : (\r\n                                                                        <i className={styles.trashCanSmIcon} title=\"Remove Dates\">\r\n                                                                            <img\r\n                                                                                className={styles.trashcanIcon}\r\n                                                                                src={trashCanSmIcon}\r\n                                                                                alt=\"\"\r\n                                                                                role=\"presentation\"\r\n                                                                                onClick={() => {\r\n                                                                                    if(!isDateRangeDisabled()){\r\n                                                                                        parameters.startEndDate.splice(index, 1); \r\n                                                                                        setParameters({ ...parameters, startEndDate: parameters.startEndDate })\r\n                                                                                    }\r\n                                                                                }}\r\n                                                                            />\r\n                                                                        </i>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {startRangeIsRequiredMessage && index === 0 && (\r\n                                                                <div className={styles.errorText}>{startRangeIsRequiredMessage}</div>\r\n                                                            )}\r\n                                                            {overlappingDates.includes(x.value?.split(\",\")[4]) && (\r\n                                                                <div className={styles.errorText}>Overlapping date range is not allowed</div>\r\n                                                            )}\r\n                                                            {invalidDateRanges.includes(x.value?.split(\",\")[4]) && (\r\n                                                                <div className={styles.errorText}>Date range is invalid</div>\r\n                                                            )}\r\n                                                            {lessThanTodayDates.includes(x.value?.split(\",\")[4]) && (\r\n                                                                <div className={styles.errorText}>Start should not be earlier than the current date</div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className={styles.details}>\r\n                            <div className={styles.detailColumn}>\r\n                                <div className={styles.detailName}>\r\n                                    <span>Channel</span>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ width: '80x', minWidth: '80px', overflowX: 'hidden', marginRight: '10px' }}>\r\n                                <div className={styles.detailName}>\r\n                                    <span>Window Start</span>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ width: '80x', minWidth: '80px', overflowX: 'hidden' }}>\r\n                                <div className={styles.detailName}>\r\n                                    <span>Window End</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {data.channels && data.channels.map((channel, index) => (\r\n                            <div\r\n                                key={`${index}:${channel.name}`}\r\n                                className={styles.details}\r\n                            >\r\n                                <div className={styles.detailColumn}>\r\n                                    <div className={styles.detailName} title={channel.name}>\r\n                                        {channel.name}\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ width: '80x', minWidth: '80px', overflowX: 'hidden', marginRight: '10px' }}>\r\n                                    <div className={styles.detailName} title={channel.windowsStartDate}>\r\n                                        {channel.windowsStartDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ width: '80x', minWidth: '80px', overflowX: 'hidden' }}>\r\n                                    <div className={styles.detailName} title={channel.windowsEndDate}>\r\n                                        {channel.windowsEndDate}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className={styles.footer}>\r\n                        <i className={styles.saveIcon} title=\"Update title\">\r\n                            <img\r\n                                src={saveIcon}\r\n                                style={{ pointerEvents: isSaving && 'none' }}\r\n                                alt=\"\"\r\n                                onClick={handleSubmit}\r\n                                onKeyDown={handleSubmit}\r\n                                role=\"presentation\"\r\n                            />\r\n                        </i>\r\n                        <i className={styles.closeCircleIcon} title=\"Cancel\">\r\n                            <img\r\n                                src={closeCircleIcon}\r\n                                alt=\"\"\r\n                                onClick={onHide}\r\n                                onKeyDown={onHide}\r\n                                role=\"presentation\"\r\n                            />\r\n                        </i>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AttributesOverrideFormComponent;","const Certificate = 'certificate';\r\nconst Genre = 'genre';\r\nconst Grade = 'grade';\r\n\r\nexport {\r\n    Certificate,\r\n    Genre,\r\n    Grade,\r\n};","import React, { useEffect, useState, useRef } from 'react';\r\n\r\nimport styles from './AttributesOverride.module.css';\r\nimport {\r\n  eyeIcon,\r\n  eyeSlashIcon,\r\n  attributesOverrideGreenIcon,\r\n  attributesOverrideGreenToggledIcon,\r\n} from '../../assets';\r\n\r\nimport Table from \"../../shared/components/table/Table\";\r\nimport BannerComponent from '../_reusable/banner/BannerComponent';\r\nimport attributesOverrideStorage from \"./AttributesOverrideStorage\";\r\nimport AttributesOverrideFormComponent from './attributes-override-form/AttributesOverrideFormComponent';\r\nimport AttributesOverrideService from './AttributesOverrideService';\r\nimport DateService from '../../core/date.service';\r\nimport AuthService from '../../core/auth.service';\r\n\r\nconst AttributesOverrideComponent = ({}) => {\r\n  const searchRef = useRef();\r\n  const { organisationName } = AuthService.getUserIdentity();\r\n  const { tableHeadersLibrary, tableHeadersImport } = attributesOverrideStorage;\r\n  const [renderTimes, setRenderTimes] = useState(0);\r\n  const [isFetchingAttributes, setIsFetchingAttributes] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n  const [titleSource, setTitleSource] = useState(true);\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const [searchKeyHistory, setSearchKeyHistory] = useState('');\r\n  const [queryParameters, setQueryParameters] = useState({ sortOrder: 1, sortBy: 1 });\r\n  const [sortParameters, setSortParameters] = useState({ order: 1, sort: 1 });\r\n  const [tableParameters, setTableParameters] = useState({});\r\n  const [paginationParameters, setPaginationParameters] = useState({});\r\n  const [data, setData] = useState([]);\r\n  const [tableHeaders, setTableHeaders] = useState([]);\r\n  const [selectedTitle, setSelectedTitle] = useState();\r\n  const [isTableToggled, setIsTableToggled] = useState(false);\r\n\r\n  const constructQueryString = (parameters) => {\r\n    const pagination = `?page=${\r\n      parameters.pageNumber ? parameters.pageNumber : 1\r\n    }&size=${parameters.pageSize ? parameters.pageSize : 50}`;\r\n\r\n    const titleName = parameters.titleNameFilter && parameters.titleNameFilterValue\r\n      ? `&titleNameFilter=${parameters.titleNameFilter}&titleNameFilterValue=${parameters.titleNameFilterValue}`\r\n      : '';\r\n\r\n    const genre = parameters.genreFilter && parameters.genreFilterValue\r\n      ? `&genreFilter=${parameters.genreFilter}&genreFilterValue=${parameters.genreFilterValue}`\r\n      : '';\r\n\r\n    const grade = parameters.gradeFilter && parameters.gradeFilterValue\r\n      ? `&gradeFilter=${parameters.gradeFilter}&gradeFilterValue=${parameters.gradeFilterValue}`\r\n      : '';\r\n\r\n    const certificate = parameters.certificateFilter && parameters.certificateFilterValue\r\n      ? `&certificateFilter=${parameters.certificateFilter}&certificateFilterValue=${parameters.certificateFilterValue}`\r\n      : '';\r\n\r\n    const year = parameters.yearFilter && parameters.yearFilterValue\r\n      ? `&yearFilter=${parameters.yearFilter}&yearFilterValue=${parameters.yearFilterValue}`\r\n      : '';\r\n    \r\n    const studio = parameters.studioFilter && parameters.studioFilterValue\r\n      ? `&studioFilter=${parameters.studioFilter}&studioFilterValue=${parameters.studioFilterValue}`\r\n      : '';\r\n\r\n    const rating = parameters.ratingFilter && parameters.ratingFilterValue\r\n      ? `&ratingFilter=${parameters.ratingFilter}&ratingFilterValue=${parameters.ratingFilterValue}`\r\n      : '';\r\n\r\n    const playRestrictions = parameters.playRestrictionsFilter && parameters.playRestrictionsFilterValue\r\n      ? `&playRestrictionsFilter=${parameters.playRestrictionsFilter}&playRestrictionsFilterValue=${parameters.playRestrictionsFilterValue}`\r\n      : '';\r\n\r\n    const searchKey = parameters.searchKey\r\n      ? `&searchKey=${parameters.searchKey}`\r\n      : '';\r\n\r\n    const sort = parameters.sortOrder && parameters.sortBy\r\n      ? `&columnSort=${parameters.sortBy}&sortBy=${parameters.sortOrder}`\r\n      : '';\r\n\r\n    const isOverrode = parameters.isOverrode\r\n      ? `&isOverrode=${parameters.isOverrode}`\r\n      : '';\r\n\r\n    let queryString = pagination\r\n      + titleName\r\n      + genre\r\n      + grade\r\n      + certificate\r\n      + year\r\n      + studio\r\n      + rating\r\n      + playRestrictions\r\n      + searchKey\r\n      + sort\r\n      + isOverrode;\r\n\r\n    if (queryString.includes('+')) {\r\n      queryString = queryString.replace('+', '%2B');\r\n    }\r\n\r\n    return queryString;\r\n  };\r\n\r\n  const toggleTableData = () => {\r\n    if (!isLoading) {\r\n      setIsTableToggled(!isTableToggled);\r\n      setQueryParameters({ ...queryParameters, isOverrode: !isTableToggled });\r\n    }\r\n  };\r\n\r\n  const constructData = (data, titleSource) => {\r\n    let list = [];\r\n\r\n    if (titleSource) {\r\n      list = data.map((item) => ({\r\n        titleId: item.titleId,\r\n        title: item.title,\r\n        genre: item.overrodeValues.genre || item.genre,\r\n        duration: item.overrodeValues.duration || item.duration,\r\n        grade: item.overrodeValues.grade || item.grade,\r\n        certificate: item.overrodeValues.certificate || item.certificate,\r\n        year: item.overrodeValues.year || item.year,\r\n        action: {\r\n          id: item.titleId,\r\n          icon: selectedTitle?.titleId === item.titleId ? eyeSlashIcon : eyeIcon,\r\n          toolTip: 'View title details',\r\n          actionName: 'viewTitleDetails',\r\n        },\r\n        isHighlighted: item.overrode,\r\n      }));\r\n\r\n      setTableHeaders(tableHeadersLibrary);\r\n    } else {\r\n      list = data.map((item) => ({\r\n        titleId: item.titleId,\r\n        title: item.title,\r\n        studio: item.studio,\r\n        rating: item.overrodeValues.rating || item.rating,\r\n        grade: item.overrodeValues.grade || item.grade,\r\n        playRestrictions: item.playRestrictions,\r\n        action: {\r\n          id: item.titleId,\r\n          icon: selectedTitle?.titleId === item.titleId ? eyeSlashIcon : eyeIcon,\r\n          toolTip: 'View title details',\r\n          actionName: 'viewTitleDetails',\r\n        },\r\n        isHighlighted: item.overrode,\r\n      }));\r\n\r\n      setTableHeaders(tableHeadersImport);\r\n    }\r\n\r\n    return list;\r\n  };\r\n\r\n  const handleSetTableParameters = (parameters) => {\r\n    setTableParameters({\r\n      titleNameFilter: parameters.titleNameFilter,\r\n      titleNameFilterValue: parameters.titleNameFilterValue,\r\n      genreFilter: parameters.genreFilter,\r\n      genreFilterValue: parameters.genreFilterValue,\r\n      gradeFilter: parameters.gradeFilter,\r\n      gradeFilterValue: parameters.gradeFilterValue,\r\n      certificateFilter: parameters.certificateFilter,\r\n      certificateFilterValue: parameters.certificateFilterValue,\r\n      yearFilter: parameters.yearFilter,\r\n      yearFilterValue: parameters.yearFilterValue,\r\n      studioFilter: parameters.studioFilter,\r\n      studioFilterValue: parameters.studioFilterValue,\r\n      ratingFilter: parameters.ratingFilter,\r\n      ratingFilterValue: parameters.ratingFilterValue,\r\n      playRestrictionsFilter: parameters.playRestrictionsFilter,\r\n      playRestrictionsFilterValue: parameters.playRestrictionsFilterValue,\r\n    });\r\n  };\r\n\r\n  const onChangeSetSearchKey = (e) => {\r\n    setSearchKey(e.target.value);\r\n  };\r\n\r\n  const handleGetTitles = () => {\r\n    setIsLoading(true);\r\n\r\n    AttributesOverrideService.getTitles(constructQueryString(queryParameters))\r\n    .then((response) => {\r\n      setData(constructData(response.data.assets, response.data.library));\r\n      setTitleSource(response.data.library);\r\n      setRenderTimes(renderTimes + 1);\r\n\r\n      setPaginationParameters({\r\n        totalCount: response.data.totalData,\r\n        pageSize: response.data.size,\r\n        currentPage: response.data.page,\r\n        totalPages: response.data.totalPages,\r\n      });\r\n    })\r\n    .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const handleOnSearch = () => {\r\n    setQueryParameters({ ...queryParameters, searchKey, pageNumber: 1 })\r\n    setSearchKeyHistory(searchKey);\r\n    setHasSearched(true);\r\n  };\r\n\r\n  const onKeyDownTriggerSearch = (e) => {\r\n    if (e.key === 'Enter') handleOnSearch();\r\n  };\r\n\r\n  const handleOnClearSearch = () => {\r\n    setSearchKey('');\r\n    setSearchKeyHistory('');\r\n    setQueryParameters({ ...queryParameters, searchKey: '', pageNumber: 1 })\r\n    setHasSearched(false);\r\n  };\r\n\r\n  const handleOnFilter = (data) => {\r\n    setQueryParameters({ ...queryParameters, ...data, pageNumber: 1 })\r\n  };\r\n\r\n  const handleOnClearFilter = () => {\r\n    setQueryParameters({\r\n      searchKey,\r\n      sortBy: queryParameters.sortBy,\r\n      sortOrder: queryParameters.sortOrder,\r\n    });\r\n  };\r\n\r\n  const handleOnSort = ({ sortBy, sortOrder }) => {\r\n    setSortParameters({ order: sortOrder, sort: sortBy });\r\n    setQueryParameters({ ...queryParameters, sortBy, sortOrder, pageNumber: 1 });\r\n  };\r\n\r\n  const handleOnPaginate = (pageNumber, pageSize  ) => {\r\n    setQueryParameters({ ...queryParameters, pageNumber, pageSize });\r\n  };\r\n\r\n  const handleOnExport = () => {\r\n    setIsExporting(true);\r\n\r\n    AttributesOverrideService.exporTitles(constructQueryString(queryParameters))\r\n      .then((response) => {\r\n        const blob = new Blob([response.data], {\r\n          type:\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        });\r\n        saveAs(\r\n          blob,\r\n          `${organisationName}_op2mise_attributes_override_data_export_${DateService.toExportFormat(\r\n            new Date(),\r\n          )}.xlsx`,\r\n        );\r\n      })\r\n      .finally(() => setIsExporting(false));\r\n\r\n  };\r\n\r\n  const constructItemsToDefault = (items) => {\r\n    let data = items;\r\n    data = data.map((item) => (\r\n      { ...item, action: { ...item.action, icon: eyeIcon } }\r\n    ));\r\n\r\n    return data;\r\n  };\r\n\r\n  const constructItemsAfterViewing = (items, selectedId) => {\r\n    let data = items;\r\n    data = data.map((item) => (\r\n      item.titleId === selectedId\r\n        ? { ...item, action: { ...item.action, icon: eyeSlashIcon } }\r\n        : { ...item, action: { ...item.action, icon: eyeIcon } }\r\n    ));\r\n\r\n    return data;\r\n  };\r\n\r\n  const handleGetTitle = (titleId) => {\r\n    setIsFetchingAttributes(true);\r\n\r\n    AttributesOverrideService.getTitle(titleId)\r\n    .then((response) => {\r\n      setSelectedTitle(response.data)\r\n    })\r\n    .finally(() => setIsFetchingAttributes(false));\r\n  };\r\n\r\n  const handleOnAction = (_, selectedId) => {\r\n    const id = selectedTitle && selectedTitle.titleId === selectedId ? null : selectedId;\r\n    if (id) {\r\n      handleGetTitle(id);\r\n      setData(constructItemsAfterViewing(data, id));\r\n    } else {\r\n      onHideFormPanel();\r\n    }\r\n  };\r\n\r\n  const onHideFormPanel = () => {\r\n    setSelectedTitle();\r\n    setData(constructItemsToDefault(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSetTableParameters(queryParameters);\r\n    handleGetTitles();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryParameters]);\r\n\r\n  useEffect(() => {\r\n    const backdropClicked = (e) => {\r\n      if (searchRef.current && !searchRef.current.contains(e.target)) {\r\n        setSearchKey(searchKeyHistory);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  });\r\n\r\n    return (\r\n      <>\r\n        <BannerComponent componentName='Attributes Override' isSearchHidden />\r\n\r\n        <hr style={{ borderTop: '1px  solid #b1b1b1', marginBottom: '8px' }} />\r\n    \r\n        <div className='d-flex'>\r\n          <div>\r\n            <div className='d-flex'>\r\n              <div ref={searchRef} className={styles.searchWrapper}>\r\n                <div className={styles.imageDiv}>\r\n                  <img\r\n                    className={styles.toggleAttributesTableIcon}\r\n                    src={isTableToggled ? attributesOverrideGreenToggledIcon : attributesOverrideGreenIcon}\r\n                    title={isTableToggled ? 'Show all titles' : 'Show titles with attributes override'}\r\n                    alt=\"\"\r\n                    onClick={toggleTableData}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          <Table\r\n            noDataVerbiage=\"No programme titles found\"\r\n            tableHeight=\"281px\"\r\n            list={data}\r\n            headers={tableHeaders}\r\n            isExporting={isExporting}\r\n            isFetchingData={isLoading}\r\n            queryParameters={tableParameters}\r\n            paginationParameters={paginationParameters}\r\n            sortParameters={sortParameters}\r\n            onFilter={handleOnFilter}\r\n            onClearFilters={handleOnClearFilter}\r\n            onSort={handleOnSort}\r\n            onPaginate={handleOnPaginate}\r\n            onExport={handleOnExport}\r\n            onAction={handleOnAction}\r\n          />\r\n        </div>\r\n\r\n          {(selectedTitle || isFetchingAttributes) && (\r\n            <AttributesOverrideFormComponent\r\n              isFetching={isFetchingAttributes}\r\n              data={selectedTitle}\r\n              getTitles={handleGetTitles}\r\n              getTitleAttributes={() => handleGetTitle(selectedTitle.titleId)}\r\n              onHide={onHideFormPanel}\r\n              titleSource={titleSource}\r\n            />\r\n          )}\r\n      </div>\r\n    </>   \r\n  );\r\n};\r\n\r\nexport default AttributesOverrideComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dateInput\":\"styles_dateInput__T4igz\",\"dateInputWrapper\":\"styles_dateInputWrapper__JFOLF\",\"dayInput\":\"styles_dayInput__kWYrH\",\"monthInput\":\"styles_monthInput__CpknJ\",\"yearInput\":\"styles_yearInput__2I+id\",\"inputDivider\":\"styles_inputDivider__E1qa5\",\"invalidInput\":\"styles_invalidInput__jRCSu\",\"errorMessage\":\"styles_errorMessage__TNcHK\",\"disabledInput\":\"styles_disabledInput__w4mu9\"};","import { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport moment from 'moment';\r\nimport styles from './styles.module.css';\r\n\r\nconst CustomDateInput = forwardRef(({\r\n    value,\r\n    dayStart,\r\n    monthStart,\r\n    yearStart,\r\n    dayEnd,\r\n    monthEnd,\r\n    yearEnd,\r\n    onChange,\r\n    disabled,\r\n    validate,\r\n    onValidate,\r\n    requiredDateMessage,\r\n    exceededDateMessage,\r\n    min,\r\n    max,\r\n    autoFocus,\r\n    width,\r\n}, ref) => {\r\n    const dayInputRef = useRef();\r\n    const monthInputRef = useRef();\r\n    const yearInputRef = useRef();\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    const [day, setDay] = useState('');\r\n    const [month, setMonth] = useState('');\r\n    const [year, setYear] = useState('');\r\n    const [changeTimes, setChangeTimes] = useState(0);\r\n    const [isDateInvalid, setIsDateInvalid] = useState(false);\r\n    const shouldValidate = typeof onValidate === 'function' && validate;\r\n\r\n    // Restricting characters that is not convertable to number\r\n    const getNumbersOnly = (string) => {\r\n        const stringArray = string.split('');\r\n        const result = stringArray.filter((char) => (\r\n            !isNaN(char) && !isNaN(parseFloat(char))\r\n        ));\r\n        return result.join('');\r\n    }\r\n\r\n    // Change cursor\r\n    const focusToDay = () => {\r\n        setTimeout(() => {\r\n            dayInputRef.current.focus();\r\n            dayInputRef.current.select();\r\n        }, 0);\r\n    };\r\n\r\n    const focusToMonth = () => {\r\n        setTimeout(() => {\r\n            monthInputRef.current.focus();\r\n            monthInputRef.current.select();\r\n        }, 0);\r\n    };\r\n\r\n    const focusToYear = () => {\r\n        setTimeout(() => {\r\n            yearInputRef.current.focus();\r\n            yearInputRef.current.select();\r\n        }, 0);\r\n    };\r\n\r\n    const handleOnFocus = (e) => e.target.select();\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        const name = e.target.name;\r\n        if (name === 'day') focusToDay();\r\n        if (name === 'month') focusToMonth();\r\n        if (name === 'year') focusToYear();\r\n    }\r\n\r\n    const handleOnBlur = (e) => \r\n    {\r\n        if(e.target.name === \"year\")\r\n        {\r\n            if(!isLeapYear(e.target.value) && month === \"02\")\r\n            {\r\n                const lastDayOfTheMonth = getLastDayOfTheMonth(parseInt(\"02\"));\r\n            if (day > lastDayOfTheMonth) setDay(lastDayOfTheMonth);\r\n            }\r\n            if(isLeapYear(e.target.value) && month === \"02\"){\r\n               if(parseInt(day) > 29)\r\n               {\r\n                setDay(\"29\");\r\n               }\r\n            }\r\n\r\n            if(month !== \"02\")\r\n            {\r\n                const lastDayOfTheMonth = getLastDayOfTheMonth(month);\r\n                if (day > lastDayOfTheMonth) setDay(lastDayOfTheMonth);\r\n            }\r\n        }\r\n\r\n        setChangeTimes(0);\r\n    }\r\n\r\n    // Checking and setting values\r\n    const isTwoDigit = (value) => value.length === 3;\r\n\r\n    const isFourDigit = (value) => value.length === 5;\r\n\r\n    const getLastDayOfTheMonth = (monthIndex) => {\r\n        const dateToday = new Date(new Date().getFullYear(), monthIndex, 0);\r\n        return dateToday.getDate();\r\n    };\r\n\r\n    const padDayMonth = (value) => {\r\n        if (value.toString().length === 1) return `0${value}`;\r\n        else if (value[0] === '0') return value.substring(1, 3);\r\n        else return value;\r\n    };\r\n\r\n    const padYear = (value) => {\r\n        if (value.length === 1) return `000${value}`;\r\n        else if (value.length === 2) return `00${value}`;\r\n        else if (value.length === 3) return `0${value}`;\r\n        else if (value.length === 5 && value[0] === '0') return value.substring(1, 5);\r\n        else return value;\r\n    };\r\n\r\n    const isLeapYear = (year) => {\r\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n      }\r\n      \r\n    const isValueValid = (value, inputName) => {\r\n        const number = parseInt(value);\r\n        if (inputName === 'day') {\r\n            let lastDay = month ? getLastDayOfTheMonth(parseInt(month)) : 31;\r\n\r\n            if(parseInt(month) === 2 && isLeapYear(year))\r\n            {\r\n                lastDay = lastDay + 1;\r\n            }\r\n            return number <= lastDay;\r\n        }\r\n        if (inputName === 'month') return number <= 12;\r\n        return true;\r\n    };\r\n\r\n    const handleOnChange = (e) => {        \r\n        const name = e.target.name;\r\n        const isNotYear = ['day', 'month'].includes(name);\r\n        let value = getNumbersOnly(e.target.value);\r\n        if (isNotYear) value = padDayMonth(value);\r\n        else value = padYear(value);\r\n        const isFirstDigitZero = value[0] === '0';\r\n        const isNotValid = value && !isValueValid(value, name);\r\n\r\n        if ((changeTimes === 1 || value.length === 3) && (value.length === 2 || isNotValid)) {\r\n            if (name === 'day') focusToMonth();\r\n            else focusToYear();\r\n        }\r\n        \r\n        if (isNotYear) {\r\n            if (!isFirstDigitZero && (isTwoDigit(value) || isNotValid)) return false;\r\n        } else {\r\n            if (!isFirstDigitZero && (isFourDigit(value) || isNotValid)) return false;\r\n        }\r\n\r\n        if (name === 'day') {\r\n            setDay(value);\r\n        } else if (name === 'month') {\r\n            setMonth(value);\r\n        } else {\r\n            setYear(value);\r\n        }\r\n        setChangeTimes(changeTimes + 1);\r\n        setIsChanged(true);\r\n    };\r\n\r\n    const constructDate = (value) => {\r\n        const date = new Date(value);\r\n        const dateValue = date.getDate();\r\n        const monthValue = date.getMonth() + 1;\r\n        const yearValue = date.getFullYear();\r\n        const padDateValue = padDayMonth(dateValue);\r\n        const padMonthValue = padDayMonth(monthValue);\r\n        const padYearValue = padYear(yearValue);\r\n        setDay(padDateValue);\r\n        setMonth(padMonthValue);\r\n        setYear(padYearValue);\r\n    };\r\n\r\n    const checkIfBeforeMin = (date) => {\r\n        const minDate = new Date(min);\r\n        minDate.setHours(0);\r\n        minDate.setMinutes(0);\r\n        minDate.setSeconds(0);\r\n        minDate.setMilliseconds(0);\r\n        return date < minDate;\r\n    }\r\n\r\n    const checkIfAfterMax = (date) => {\r\n        const maxDate = new Date(max);\r\n        maxDate.setHours(0);\r\n        maxDate.setMinutes(0);\r\n        maxDate.setSeconds(0);\r\n        maxDate.setMilliseconds(0);\r\n        return date > maxDate;\r\n    }\r\n\r\n    const checkPeriod = (date) => {\r\n        const isBeforeMin = min && checkIfBeforeMin(date);\r\n        const isAfterMax = max && checkIfAfterMax(date);\r\n        return isBeforeMin || isAfterMax;\r\n    };\r\n\r\n    // Keyboard arrow navigations\r\n    const onKeyDownDay = (e) => {\r\n        if (e.key === 'ArrowRight') focusToMonth();\r\n        if (e.key === 'ArrowUp') {\r\n            let incremented = parseInt(day) + 1;\r\n            if (incremented <= getLastDayOfTheMonth(month)) setDay(padDayMonth(incremented.toString()));\r\n        }\r\n        if (e.key === 'ArrowDown') {\r\n            let decremented = parseInt(day) - 1;\r\n            if (decremented >= 1) setDay(padDayMonth(decremented.toString()));\r\n        }\r\n        if (e.key === 'Backspace') {\r\n            setDay('');\r\n            setChangeTimes(0);\r\n            setIsChanged(true);\r\n        }\r\n    };\r\n\r\n    const onKeyDownMonth = (e) => {\r\n        if (e.key === 'ArrowRight') focusToYear();\r\n        if (e.key === 'ArrowLeft') focusToDay();\r\n        if (e.key === 'ArrowUp') {\r\n            let incremented = parseInt(month) + 1;\r\n            if (incremented <= 12) setMonth(padDayMonth(incremented.toString()));\r\n        }\r\n        if (e.key === 'ArrowDown') {\r\n            let decremented = parseInt(month) - 1;\r\n            const lastDayOfTheMonth = getLastDayOfTheMonth(decremented);\r\n            if (decremented >= 1) setMonth(padDayMonth(decremented.toString()));\r\n            if (day > lastDayOfTheMonth) setDay(lastDayOfTheMonth);\r\n        }\r\n        if (e.key === 'Backspace') {\r\n            setMonth('');\r\n            setChangeTimes(0);\r\n            setIsChanged(true);\r\n        }\r\n    };\r\n\r\n    const onKeyDownYear = (e) => {\r\n        if (e.key === 'ArrowLeft') focusToMonth();\r\n        if (e.key === 'ArrowUp') {\r\n            let incremented = parseInt(year) + 1;\r\n            if (incremented <= 9999) setYear(padYear(incremented.toString()));\r\n        }\r\n        if (e.key === 'ArrowDown') {\r\n            let decremented = parseInt(year) - 1;\r\n            if (decremented >= 0) setYear(padYear(decremented.toString()));\r\n        }\r\n        if (e.key === 'Backspace') {\r\n            setYear('');\r\n            setIsChanged(true);\r\n        }\r\n    };\r\n\r\n    const getMonthInputWidth = (month) => {\r\n        const value = month.toString();\r\n        if (value === '11') return '10px';\r\n        if (['01', '10'].includes(value)) return '13px';\r\n        if (value === '07') return '16px';\r\n        if (value.includes('0')) return '17px';\r\n        if (value === '12') return '13px';\r\n        return '19px';\r\n    };\r\n\r\n    useEffect(() => {\r\n        if ((value && !isChanged) || !day || !month || !year) {\r\n            const isValidDate = value && moment(value).isValid();\r\n            if (isValidDate)\r\n            {\r\n                constructDate(value);\r\n            } \r\n            else {\r\n                dayStart && setDay(dayStart);\r\n                dayEnd && setDay(dayEnd);\r\n                monthStart && setMonth(monthStart);\r\n                monthEnd && setMonth(monthEnd);\r\n                yearStart && setYear(yearStart);\r\n                yearEnd && setYear(yearEnd);\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (isChanged) {\r\n            if (day && month && year && day !== '00' && month !== '00' && year !== '0000') {\r\n                const date = new Date(\r\n                    parseInt(year),\r\n                    parseInt(month) - 1,\r\n                    parseInt(day),\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    0,\r\n                );\r\n                if (typeof onChange === 'function') \r\n                {\r\n                    onChange(date);\r\n                }\r\n                const state = checkPeriod(date);\r\n                setIsDateInvalid(state);\r\n                if (typeof onValidate === 'function') onValidate(state);\r\n            } else {\r\n                if (typeof onChange === 'function')\r\n                {\r\n                    onChange(null, day, month, year);\r\n                } \r\n            }\r\n        }\r\n    }, [day, month, year]);\r\n\r\n    useEffect(() => {\r\n        if (autoFocus) focusToDay();\r\n    }, [autoFocus]);\r\n\r\n    return (\r\n        <div className={styles.dateInput} style={{ width }}>\r\n            <div\r\n                ref={ref}\r\n                className={`${styles.dateInputWrapper} ${(shouldValidate && (!value || isDateInvalid)) && !disabled ? styles.invalidInput : ''} ${disabled ? styles.disabledInput : ''}`}\r\n                style={{ width }}\r\n                onClick={focusToDay}\r\n            >\r\n                <input\r\n                    ref={dayInputRef}\r\n                    className={styles.dayInput}\r\n                    style={{ marginLeft: day && '-5px' }}\r\n                    value={day}\r\n                    name=\"day\"\r\n                    type=\"text\"\r\n                    placeholder=\"DD\"\r\n                    onChange={handleOnChange}\r\n                    onKeyDown={onKeyDownDay}\r\n                    onFocus={handleOnFocus}\r\n                    onClick={handleOnClick}\r\n                    onBlur={handleOnBlur}\r\n                    disabled={disabled}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <span className={styles.inputDivider}>/</span>\r\n                <input\r\n                    ref={monthInputRef}\r\n                    className={styles.monthInput}\r\n                    value={month}\r\n                    name=\"month\"\r\n                    type=\"text\"\r\n                    placeholder=\"MM\"\r\n                    onChange={handleOnChange}\r\n                    onKeyDown={onKeyDownMonth}\r\n                    onFocus={handleOnFocus}\r\n                    onClick={handleOnClick}\r\n                    onBlur={handleOnBlur}\r\n                    disabled={disabled}\r\n                    autoComplete=\"off\"\r\n                    style={{ width: getMonthInputWidth(month)}}\r\n                />\r\n                <span className={styles.inputDivider}>/</span>\r\n                <input\r\n                    ref={yearInputRef}\r\n                    className={styles.yearInput}\r\n                    value={year}\r\n                    name=\"year\"\r\n                    type=\"text\"\r\n                    placeholder=\"YYYY\"\r\n                    onChange={handleOnChange}\r\n                    onKeyDown={onKeyDownYear}\r\n                    onFocus={handleOnFocus}\r\n                    onClick={handleOnClick}\r\n                    onBlur={handleOnBlur}\r\n                    disabled={disabled}\r\n                    autoComplete=\"off\"\r\n                />\r\n            </div>\r\n            {!value && !disabled && shouldValidate && (\r\n                <span className={styles.errorMessage}>{requiredDateMessage || 'Date is required'}</span>\r\n            )}\r\n            {isDateInvalid && value && !disabled && shouldValidate && (\r\n                <span className={styles.errorMessage}>{exceededDateMessage || 'Date exceeded date period'}</span>\r\n            )}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default CustomDateInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dateRange\":\"styles_dateRange__0PJkz\",\"dateInput\":\"styles_dateInput__HjJbJ\",\"startDateWrapper\":\"styles_startDateWrapper__5WQVY\",\"endDateWrapper\":\"styles_endDateWrapper__d6kO1\",\"dateRangeWrapper\":\"styles_dateRangeWrapper__BlW6u\",\"label\":\"styles_label__JA+3W\",\"errorMessage\":\"styles_errorMessage__A6htc\",\"labelLeft\":\"styles_labelLeft__BqCFV\",\"spaceBetween\":\"styles_spaceBetween__AfqRa\"};","import { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport CustomDateInput from '../custom-date-input/CustomDateInput';\r\nimport styles from './styles.module.css';\r\nimport { NavItem } from 'react-bootstrap';\r\n\r\nconst CustomDateRangeInput = forwardRef(({\r\n    startSettings = {\r\n        value: null,\r\n        label: '',\r\n        labelLeft: false,\r\n        disabled: false,\r\n        required: false,\r\n        width: null,\r\n    },\r\n    endSettings = {\r\n        value: null,\r\n        label: '',\r\n        labelLeft: false,\r\n        disabled: false,\r\n        required: false,\r\n        width: null,\r\n    },\r\n    min,\r\n    max,\r\n    validate,\r\n    onValidate,\r\n    onChange,\r\n    invalidDateMessage,\r\n}, ref) => {\r\n    const startRef = useRef();\r\n    const endRef = useRef();\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [dayStart, setDayStart] = useState(null);\r\n    const [dayEnd, setDayEnd] = useState(null);\r\n    const [monthStart, setMonthStart] = useState(null);\r\n    const [monthEnd, setMonthEnd] = useState(null);\r\n    const [yearStart, setYearStart] = useState(null);\r\n    const [yearEnd, setYearEnd] = useState(null);\r\n    const [isDateInvalid, setIsDateInvalid] = useState(false);\r\n    const shouldValidate = typeof onValidate === 'function' && validate;\r\n    const invalidDateRange = isDateInvalid && !startSettings.disabled && !endSettings.disabled && shouldValidate;\r\n    const invalidStartDate = !startSettings.disabled && !startDate && startSettings.required && shouldValidate;\r\n    const invalidEndDate = !endSettings.disabled && !endDate && endSettings.required && shouldValidate;\r\n\r\n    // Setting values\r\n    const handleOnChange = (name, value, day, month, year) => {\r\n        if (name === 'start') setStartDate(value);\r\n        else setEndDate(value);\r\n\r\n        if (typeof onChange === 'function') {\r\n            onChange({\r\n                start: name === 'start' ? value : startDate,\r\n                end: name === 'end' ? value : endDate,\r\n                dayStart: name === 'start' ? day : dayStart,\r\n                monthStart: name === 'start' ? month : monthStart,\r\n                yearStart: name === 'start' ? year : yearStart,\r\n                end: name === 'end' ? value : endDate,\r\n                dayEnd: name === 'end' ? day : dayEnd,\r\n                monthEnd: name === 'end' ? month : monthEnd,\r\n                yearEnd: name === 'end' ? year : yearEnd,\r\n            })\r\n        }\r\n    };\r\n\r\n    // Check dates\r\n    const isDateRangeInvalid = () => {\r\n        return (startDate && ((min && startDate < min) || (max && startDate > max))) // compare start to min and max\r\n            || (startDate && endDate && startDate > endDate) // compare start to end\r\n            || (endDate && max && (endDate < min || endDate > max)); // compare end to min and max\r\n    };\r\n\r\n    useEffect(() => {\r\n        const isInvalid = isDateRangeInvalid();\r\n        setIsDateInvalid(isInvalid);\r\n        if (shouldValidate) onValidate(isInvalid);\r\n    }, [startDate, endDate]);\r\n\r\n    useEffect(() => {\r\n        setStartDate(startSettings.value);\r\n        setEndDate(endSettings.value);\r\n        setDayStart(startSettings.dayStart);\r\n        setDayEnd(endSettings.dayEnd);\r\n        setMonthStart(startSettings.monthStart);\r\n        setMonthEnd(endSettings.monthEnd);\r\n        setYearStart(startSettings.yearStart);\r\n        setYearEnd(endSettings.yearEnd);\r\n    }, [startSettings, endSettings]);\r\n\r\n    return (\r\n        <div className={styles.dateRange}>\r\n            <div ref={ref} className={styles.dateRangeWrapper}>\r\n                <div\r\n                    className={`${styles.startDateWrapper} ${startSettings.labelLeft && styles.labelLeft}`}\r\n                >\r\n                    {startSettings.label !== null && (\r\n                        <span className={styles.label}>{startSettings.label || 'Start'}</span>\r\n                    )}\r\n                    <div className={styles.dateInput}>\r\n                        <CustomDateInput\r\n                            ref={startRef}\r\n                            value={startSettings.value}\r\n                            dayStart={startSettings.dayStart}\r\n                            monthStart={startSettings.monthStart}\r\n                            yearStart={startSettings.yearStart}\r\n                            min={min}\r\n                            max={endDate}\r\n                            onChange={(value, day, month, year) => handleOnChange('start', value, day, month, year)}\r\n                            validate={invalidStartDate}\r\n                            disabled={startSettings.disabled}\r\n                            width={startSettings.width}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {!endSettings.labelLeft && (\r\n                    <div className={styles.spaceBetween}></div>\r\n                )}\r\n                <div\r\n                    className={`${styles.endDateWrapper} ${endSettings.labelLeft && styles.labelLeft}`}\r\n                >\r\n                    {endSettings.label !== null && (\r\n                        <span className={styles.label}>{endSettings.label || 'End'}</span>\r\n                    )}\r\n                    <div className={styles.dateInput}>\r\n                        <CustomDateInput\r\n                            ref={endRef}\r\n                            value={endSettings.value}\r\n                            dayEnd={endSettings.dayEnd}\r\n                            monthEnd={endSettings.monthEnd}\r\n                            yearEnd={endSettings.yearEnd}\r\n                            min={startDate}\r\n                            max={max}\r\n                            onChange={(value, day, month, year) => handleOnChange('end', value, day, month, year)}\r\n                            validate={invalidEndDate}\r\n                            disabled={endSettings.disabled}\r\n                            width={endSettings.width}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {invalidStartDate && !invalidEndDate && (\r\n                <span className={styles.errorMessage}>Start date is required</span>\r\n            )}\r\n            {invalidEndDate && !invalidStartDate && (\r\n                <span className={styles.errorMessage}>End date is required</span>\r\n            )}\r\n            {invalidStartDate && invalidEndDate && (\r\n                <span className={styles.errorMessage}>Start date and End date are required</span>\r\n            )}\r\n            {invalidDateRange && (\r\n                <span className={styles.errorMessage}>{invalidDateMessage || 'Date range is invalid'}</span>\r\n            )}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default CustomDateRangeInput;"],"names":["AttributesOverrideStorage","tableHeadersLibrary","headerId","headerName","filter","type","queryNames","sortable","tableHeadersImport","attributesOverrideFields","id","label","name","placeholder","maxLength","titleSource","hasAutoComplete","label1","label2","name1","name2","placeholder1","placeholder2","hostUrl","process","getCategoryAndProfileLookup","axios","getTitles","parameters","url","exporTitles","responseType","getTitle","titleId","saveAttributesOverride","json","getCertificateProfileLookup","getGenreProfileLookup","getGradeProfileLookup","LottieGlassSpinner","defaultOptions","loop","autoplay","animationData","hourglassIcon","rendererSettings","preserveAspectRatio","style","width","height","position","className","styles","options","defaultProps","size","value","onChange","format","noIcon","useState","renderTimes","setRenderTimes","timeDropdownRef","useRef","hourTextFieldRef","minuteTextFieldRef","secondTextFieldRef","iconRef","showTimeDropdown","setShowTimeDropdown","inputValue","setInputValue","changeTimes","setChangeTimes","showMainTextField","setShowMainTextField","getNumbersOnly","string","split","char","isNaN","parseFloat","join","getValue","time","timeTypeId","timeValue","length","substring","hourValue","minuteValue","secondValue","changeHour","action","parseInt","includes","changeMinute","changeSecond","onChangeTimeFromDropdown","timeType","newTimeValue","backdropClickedCloseDropdown","e","current","contains","target","addZeroAtTheEndOfMinute","minute","isTwoDigit","isOneDigit","isFirstDigitEqualsToSix","isFirstDigitGreaterThanSix","onBlurTimeInput","onChangeFocus","timeDigit","key","focus","onFocusPlaceholderInput","onFocusTextField","setSelectionRange","useEffect","document","addEventListener","removeEventListener","onClick","ref","onBlur","onFocus","onKeyDown","hidden","src","clockIcon","chevUpGreyIcon","alt","chevDownGreyIcon","isFetching","data","getTitleAttributes","onHide","inputRef","inputRefName","isSaving","setIsSaving","setParameters","startRangeIsRequiredMessage","setStartRangeIsRequiredMessage","invalidDateRanges","setInvalidDateRanges","overlappingDates","setOverlappingDates","lessThanTodayDates","setLessThanTodayDates","dateTodayWithoutTimeStamp","Date","getFullYear","getMonth","getDate","maxId","setMaxId","certificateProfileLookup","setCertificateProfileLookup","genreProfileLookup","setGenreProfileLookup","gradeProfileLookup","setGradeProfileLookup","disabledLookups","setDisabledLookups","isGettingCertificateLookup","setIsGettingCertificateLookup","isGettingGenreLookup","setIsGettingGenreLookup","isGettingGradeLookup","setIsGettingGradeLookup","onChangeSetParameters","isStartHistorical","isEndHistorical","replace","newParameters","index","start","moment","end","startEndDate","dayStart","dayEnd","monthStart","monthEnd","yearStart","yearEnd","onChangeTimeInputSetParameters","checkTitleSource","source","titleSourceText","hasParameters","Object","keys","dateRangeOverlaps","a_start","a_end","b_start","b_end","aStart","aEnd","bStart","bEnd","handleSubmit","hasInvalidDates","invalidDates","map","date","isAfter","push","o","checkDateRangeIfValid","hasWrongDates","i","j","overlappedDates","datesLessThanToday","fieldStart","fieldEnd","otherFieldStart","otherFieldEnd","isFieldStartHistorical","isFieldEndHistorical","isDateOverlapping","isDateLessThanToday","isBefore","checkDateRanges","every","duration","AttributesOverrideService","then","success","finally","checkIfHistoricalDate","dateWithoutTime","localDate","day","monthIndex","year","timeWithoutTime","setHours","convertToLocalTimeWithoutTime","dateTodayWithoutTime","constructLookup","item","isDateRangeDisabled","genre","grade","certificate","title","yearOfProduction","response","result","overrideValues","rating","sort","historicalStartDate","historicalEndDate","closeIcon","role","referenceNo","library","dealCode","dealName","studio","playRestriction","dayType","dayPeriod","exhibPlays","list","toLowerCase","text","onSelect","onSelectAttribute","disabled","withSearch","Input","placeHolder","x","CustomDateRangeInput","min","startSettings","toDate","endSettings","plusCircleIcon","trashCanSmIcon","splice","minWidth","overflowX","marginRight","channels","channel","windowsStartDate","windowsEndDate","saveIcon","pointerEvents","closeCircleIcon","searchRef","organisationName","AuthService","attributesOverrideStorage","isFetchingAttributes","setIsFetchingAttributes","isLoading","setIsLoading","isExporting","setIsExporting","setTitleSource","searchKey","setSearchKey","searchKeyHistory","sortOrder","sortBy","queryParameters","setQueryParameters","order","sortParameters","setSortParameters","tableParameters","setTableParameters","paginationParameters","setPaginationParameters","setData","tableHeaders","setTableHeaders","selectedTitle","setSelectedTitle","isTableToggled","setIsTableToggled","constructQueryString","queryString","pageNumber","pageSize","titleNameFilter","titleNameFilterValue","genreFilter","genreFilterValue","gradeFilter","gradeFilterValue","certificateFilter","certificateFilterValue","yearFilter","yearFilterValue","studioFilter","studioFilterValue","ratingFilter","ratingFilterValue","playRestrictionsFilter","playRestrictionsFilterValue","isOverrode","handleGetTitles","overrodeValues","icon","eyeSlashIcon","eyeIcon","toolTip","actionName","isHighlighted","overrode","playRestrictions","constructData","assets","totalCount","totalData","currentPage","page","totalPages","handleGetTitle","onHideFormPanel","items","backdropClicked","BannerComponent","componentName","isSearchHidden","borderTop","marginBottom","attributesOverrideGreenToggledIcon","attributesOverrideGreenIcon","Table","noDataVerbiage","tableHeight","headers","isFetchingData","onFilter","onClearFilters","onSort","onPaginate","onExport","blob","Blob","saveAs","DateService","onAction","_","selectedId","constructItemsAfterViewing","forwardRef","validate","onValidate","requiredDateMessage","exceededDateMessage","max","autoFocus","dayInputRef","monthInputRef","yearInputRef","isChanged","setIsChanged","setDay","month","setMonth","setYear","isDateInvalid","setIsDateInvalid","shouldValidate","focusToDay","setTimeout","select","focusToMonth","focusToYear","handleOnFocus","handleOnClick","stopPropagation","handleOnBlur","isLeapYear","lastDayOfTheMonth","getLastDayOfTheMonth","padDayMonth","toString","padYear","handleOnChange","isNotYear","isFirstDigitZero","isNotValid","inputName","number","lastDay","isValueValid","isFourDigit","checkPeriod","isBeforeMin","minDate","setMinutes","setSeconds","setMilliseconds","checkIfBeforeMin","isAfterMax","maxDate","checkIfAfterMax","isValid","dateValue","monthValue","yearValue","padDateValue","padMonthValue","padYearValue","constructDate","state","marginLeft","incremented","decremented","autoComplete","getMonthInputWidth","labelLeft","required","invalidDateMessage","startRef","endRef","startDate","setStartDate","endDate","setEndDate","setDayStart","setDayEnd","setMonthStart","setMonthEnd","setYearStart","setYearEnd","invalidDateRange","invalidStartDate","invalidEndDate","isInvalid","CustomDateInput"],"sourceRoot":""}
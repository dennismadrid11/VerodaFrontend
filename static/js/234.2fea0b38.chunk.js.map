{"version":3,"file":"static/js/234.2fea0b38.chunk.js","mappings":"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","sources":["assets/icons/Close-Circle.svg","assets/icons/Close.svg","assets/icons/Save.svg","components/_reusable/loading/LoadingComponent.jsx","components/_reusable/uploader/ImageUploaderComponent.jsx","webpack://sky/./src/components/organisation/Organisation.module.css?cfef","components/organisation/OrganisationService.js","components/organisation/OrganisationStorage.js","components/organisation/add-organisation/AddOrganisationComponent.jsx","webpack://sky/./src/components/organisation/edit-delete-organisation/EditDeleteOrganisation.module.css?ff14","components/organisation/edit-delete-organisation/EditDeleteOrganisationComponent.jsx","components/organisation/OrganisationComponent.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseCircle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 34,\n    height: 34,\n    viewBox: \"0 0 34 34\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.9997 33.6667C7.79468 33.6667 0.333008 26.205 0.333008 17C0.333008 7.79504 7.79468 0.333374 16.9997 0.333374C26.2047 0.333374 33.6663 7.79504 33.6663 17C33.6663 26.205 26.2047 33.6667 16.9997 33.6667ZM16.9997 30.3334C20.5359 30.3334 23.9273 28.9286 26.4278 26.4281C28.9283 23.9276 30.333 20.5363 30.333 17C30.333 13.4638 28.9283 10.0724 26.4278 7.57195C23.9273 5.07147 20.5359 3.66671 16.9997 3.66671C13.4635 3.66671 10.0721 5.07147 7.57158 7.57195C5.0711 10.0724 3.66634 13.4638 3.66634 17C3.66634 20.5363 5.0711 23.9276 7.57158 26.4281C10.0721 28.9286 13.4635 30.3334 16.9997 30.3334ZM16.9997 14.6434L21.713 9.92837L24.0713 12.2867L19.3563 17L24.0713 21.7134L21.713 24.0717L16.9997 19.3567L12.2863 24.0717L9.92801 21.7134L14.643 17L9.92801 12.2867L12.2863 9.92837L16.9997 14.6434Z\",\n    fill: \"#008662\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseCircle);\nexport default __webpack_public_path__ + \"static/media/Close-Circle.7a7a1a424d9ec65d0f871c8fe4d681db.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.99999 5.586L11.95 0.636002L13.364 2.05L8.41399 7L13.364 11.95L11.95 13.364L6.99999 8.414L2.04999 13.364L0.635986 11.95L5.58599 7L0.635986 2.05L2.04999 0.636002L6.99999 5.586Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/Close.3f774f39f509e2991969e30956372ea9.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSave(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.66667 26.6667V16.6667H23.3333V26.6667H26.6667V8.04667L21.9533 3.33333H3.33333V26.6667H6.66667ZM1.66667 0H23.3333L30 6.66667V28.3333C30 28.7754 29.8244 29.1993 29.5118 29.5118C29.1993 29.8244 28.7754 30 28.3333 30H1.66667C1.22464 30 0.800716 29.8244 0.488155 29.5118C0.175595 29.1993 0 28.7754 0 28.3333V1.66667C0 1.22464 0.175595 0.800716 0.488155 0.488155C0.800716 0.175595 1.22464 0 1.66667 0ZM10 20V26.6667H20V20H10Z\",\n    fill: \"#008662\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/Save.cc88813719a90f1fa67bcd8401f1cbf5.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport hourglassIcon from '../../../assets/lotties/3671-hour-glass-animation';\r\n\r\nfunction LoadingComponent() {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: hourglassIcon,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n    <Lottie options={defaultOptions} height={120} width={120} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingComponent;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { danger } from '../../../shared/elements/notification/NotifyComponent';\r\n\r\nfunction ImageUploaderComponent({ imageSource, callbackChangeImage, styles }) {\r\n  const uploadNameRef = useRef(null);\r\n\r\n  const handleUploadButton = () => {\r\n    uploadNameRef.current.click();\r\n  };\r\n\r\n  const getBase64 = (file) => new Promise((resolve) => {\r\n    let baseURL = '';\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      baseURL = reader.result;\r\n      resolve(baseURL);\r\n    };\r\n  });\r\n\r\n  const onFileChangeCapture = (e) => {\r\n    let { file } = '';\r\n    // eslint-disable-next-line\r\n    file = e.target.files[0];\r\n    const fileExtension = file.name.split('.').pop();\r\n\r\n    if (\r\n      fileExtension === 'tif'\r\n      || fileExtension === 'pjp'\r\n      || fileExtension === 'xbm'\r\n      || fileExtension === 'jxl'\r\n      || fileExtension === 'svgz'\r\n      || fileExtension === 'jpg'\r\n      || fileExtension === 'jpeg'\r\n      || fileExtension === 'ico'\r\n      || fileExtension === 'tiff'\r\n      || fileExtension === 'gif'\r\n      || fileExtension === 'svg'\r\n      || fileExtension === 'jfif'\r\n      || fileExtension === 'webp'\r\n      || fileExtension === 'png'\r\n      || fileExtension === 'bmp'\r\n      || fileExtension === 'pjep'\r\n      || fileExtension === 'avif'\r\n    ) {\r\n      getBase64(file)\r\n        .then((result) => {\r\n          file.base64 = result;\r\n          callbackChangeImage(result, fileExtension, file.size);\r\n        })\r\n        .catch((err) => {\r\n          danger(err);\r\n        });\r\n    } else {\r\n      danger(\r\n        'Uploaded file type is not supported. Please use files in image format (jpg, png)',\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <i>\r\n        <img className={styles.userPhoto} src={imageSource} alt=\"\" />\r\n      </i>\r\n      <button\r\n        className={styles.uploadPhotoButton}\r\n        onClick={handleUploadButton}\r\n        type=\"button\"\r\n        aria-label=\"upload photo\"\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        style={{ display: 'none' }}\r\n        ref={uploadNameRef}\r\n        onChange={onFileChangeCapture}\r\n      />\r\n    </>\r\n  );\r\n}\r\nImageUploaderComponent.propTypes = {\r\n  imageSource: PropTypes.string,\r\n  callbackChangeImage: PropTypes.func.isRequired,\r\n  styles: PropTypes.shape.isRequired,\r\n};\r\nImageUploaderComponent.defaultProps = {\r\n  imageSource: null,\r\n};\r\nexport default ImageUploaderComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Organisation_box__LqWMD\",\"closeIcon\":\"Organisation_closeIcon__O8Mly\",\"headerText\":\"Organisation_headerText__iK1iK\",\"userPhoto\":\"Organisation_userPhoto__RQBHE\",\"uploadPhotoButton\":\"Organisation_uploadPhotoButton__R-AHk\",\"formLabel\":\"Organisation_formLabel__PgIZ7\",\"formInput\":\"Organisation_formInput__bnr7X\",\"roleButton\":\"Organisation_roleButton__z6Ddf\",\"saveIcon\":\"Organisation_saveIcon__1ghwU\",\"trashcanIcon\":\"Organisation_trashcanIcon__WvVOY\",\"closeCircleIcon\":\"Organisation_closeCircleIcon__HfBJl\",\"hasError\":\"Organisation_hasError__f1+HU\",\"required\":\"Organisation_required__rKrvA\",\"loadingHeight\":\"Organisation_loadingHeight__K99K-\",\"formCheck\":\"Organisation_formCheck__KoRdN\",\"formWrapper\":\"Organisation_formWrapper__2iskK\"};","import axios from 'axios';\r\n\r\nconst OrganisationService = {\r\n  addOrganisation(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/AddOrganisation`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  updateOrganisation(ID, json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/${ID}`;\r\n    return axios.put(url, json);\r\n  },\r\n\r\n  deleteOrganisation(Id) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}organisation/${Id}`;\r\n    return axios.delete(url);\r\n  },\r\n\r\n  getOrganisations(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/${parameters}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getOrganisation(ID) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/${ID}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  exportOrganisations(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/export${parameters}`;\r\n    return axios.get(url, { responseType: 'arraybuffer' });\r\n  },\r\n};\r\n\r\n// const organisationService = new OrganisationService();\r\nexport default OrganisationService;\r\n","const OrganisationStorage = {\r\n  headers: [\r\n    {\r\n      headerId: 1,\r\n      headerName: 'Name',\r\n      filter: {\r\n        type: 1,\r\n        queryNames: ['nameFilter', 'nameFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 6,\r\n      headerName: 'Title Source',\r\n      filter: {\r\n        type: 4,\r\n        queryNames: ['titleSource'],\r\n        list: [\r\n          { id: 1, name: 'Library' },\r\n          { id: 2, name: 'Import' },\r\n        ],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 7,\r\n      headerName: 'Clock Type',\r\n      filter: {\r\n        type: 4,\r\n        queryNames: ['clockType'],\r\n        list: [\r\n          { id: 1, name: 'Standard' },\r\n          { id: 2, name: 'Broadcast' },\r\n        ],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 2,\r\n      headerName: 'License Expiry Date',\r\n      filter: {\r\n        type: 3,\r\n        queryNames: [\r\n          'validityDateFilter',\r\n          'validityDateFilterStartRange',\r\n          'validityDateFilterEndRange',\r\n        ],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 3,\r\n      headerName: 'Account Limit',\r\n      filter: {\r\n        type: 5,\r\n        queryNames: ['accountLimitFilter', 'accountLimitFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 4,\r\n      headerName: 'Used Accounts',\r\n      filter: {\r\n        type: 5,\r\n        queryNames: ['usedAccountsFilter', 'usedAccountsFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 5,\r\n      headerName: 'Date Created',\r\n      filter: {\r\n        type: 3,\r\n        queryNames: [\r\n          'dateCreatedFilter',\r\n          'dateCreatedFilterStartRange',\r\n          'dateCreatedFilterEndRange',\r\n        ],\r\n      },\r\n      sortable: true,\r\n    },\r\n  ],\r\n\r\n  formFields: [\r\n    {\r\n      name: 'Organisation Name',\r\n      parameterName: 'name',\r\n      type: 'text',\r\n      placeHolder: 'Enter the organisation name',\r\n      isRequired: true,\r\n      maxLength: 99,\r\n    },\r\n    {\r\n      name: 'Account Limit',\r\n      parameterName: 'accountLimit',\r\n      type: 'number',\r\n      placeHolder: 'Enter the account limit',\r\n      isRequired: true,\r\n      maxLength: 7,\r\n    },\r\n    {\r\n      name: 'License Expiry Date',\r\n      parameterName: 'validityDate',\r\n      type: 'text',\r\n      placeHolder: 'dd/mm/yyyy',\r\n      isRequired: true,\r\n      maxLength: 99,\r\n    },\r\n    {\r\n      name: 'Scheduling Clock Type',\r\n      parameterName: 'clockType',\r\n      type: 'text',\r\n      placeHolder: 'clocktypes',\r\n      isRequired: true,\r\n      maxLength: 99,\r\n    },\r\n  ],\r\n\r\n  modalCloudportFields: [\r\n    {\r\n      id: 1,\r\n      label: 'Email',\r\n      name: 'email',\r\n      placeHolder: 'Enter the email for authentication',\r\n      errorMesssage: 'Email is required',\r\n      isRequired: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Password',\r\n      name: 'password',\r\n      placeHolder: 'Enter the password',\r\n      isRequired: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      label: 'Base Url',\r\n      name: 'baseUrl',\r\n      placeHolder: 'https://organisation.amagi.tv/v1/api',\r\n      errorMesssage: 'Base Url is required',\r\n      isRequired: true,\r\n    },\r\n  ],\r\n\r\n  modalAnalyticsFields: [\r\n    {\r\n      id: 4,\r\n      label: 'Personal Access Token',\r\n      name: 'personalAccessToken',\r\n      placeHolder: 'Enter your personal access token email for authentication',\r\n      errorMesssage: 'Personal Access Token is required',\r\n      maxLength: '100',\r\n      isRequired: true,\r\n    },\r\n    {\r\n      id: 5,\r\n      label: 'Schedule Report ID',\r\n      name: 'scheduleReportId',\r\n      placeHolder: `Enter the target schedule report's ID`,\r\n      errorMesssage: 'Schedule Report ID is required',\r\n      maxLength: '100',\r\n      isRequired: true,\r\n    },\r\n    {\r\n      id: 6,\r\n      label: 'V1 URL (Schedule Reports)',\r\n      name: 'v1Url',\r\n      placeHolder: 'https://api-analytics.amagi.tv/api/v1/download-reports',\r\n      errorMesssage: 'V1 Url is required',\r\n      isRequired: true,\r\n    },\r\n    {\r\n      id: 7,\r\n      label: 'V2 URL',\r\n      name: 'v2Url',\r\n      placeHolder: 'https://api-analytics.amagi.tv/api/v2',\r\n      isRequired: true,\r\n    },\r\n  ],\r\n\r\n  mediaLibraryPlayoutList: [\r\n    { id: 1, name: 'Amagi' },\r\n    { id: 2, name: 'Client' },\r\n  ],\r\n\r\n  frequencyList: [\r\n    { id: 1, name: 'Daily' },\r\n    { id: 2, name: 'Every Monday' },\r\n    { id: 3, name: 'Every 1st day of the Month' },\r\n  ],\r\n\r\n  checkString(text) {\r\n    return text !== '' && text !== null && text !== undefined;\r\n  },\r\n  minDate() {\r\n    const now = new Date();\r\n    const day = `0${now.getDate()}`.slice(-2);\r\n    const month = `0${now.getMonth() + 1}`.slice(-2);\r\n    const today = `${now.getFullYear()}-${month}-${day}`;\r\n    return today;\r\n  },\r\n\r\n  attributeList: [\r\n    'Data ID',\r\n    'Studio',\r\n    'Rating',\r\n    'Grade',\r\n    'Play Restrictions',\r\n    'Window Start',\r\n    'Window End',\r\n    'Play Before',\r\n    'Play After',\r\n    'Type',\r\n    'Status',\r\n    'Duration',\r\n    'Priority',\r\n    'TC-IN',\r\n    'Creation Time',\r\n    'Update Time',\r\n    'Error',\r\n  ]\r\n};\r\n\r\nexport default OrganisationStorage;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DateService from '../../../core/date.service';\r\nimport Styles from '../Organisation.module.css';\r\nimport closeIcon from '../../../assets/icons/Close.svg';\r\nimport saveIcon from '../../../assets/icons/Save.svg';\r\nimport closeCircleIcon from '../../../assets/icons/Close-Circle.svg';\r\nimport defaultAvatar from '../../../assets/icons/OrganisationLogo.png';\r\n\r\nimport ImageUploaderComponent from '../../_reusable/uploader/ImageUploaderComponent';\r\nimport OrganisationService from '../OrganisationService';\r\nimport OrganisationStorage from '../OrganisationStorage';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../../shared/elements/notification/NotifyComponent';\r\nimport LoadingComponent from '../../_reusable/loading/LoadingComponent';\r\n\r\nfunction AddOrganisationComponent({\r\n  callbackClosePanel,\r\n  callbackGetOrganisations,\r\n  organisations,\r\n}) {\r\n  const { formFields } = OrganisationStorage;\r\n  const { checkString } = OrganisationStorage;\r\n  const minDate = OrganisationStorage.minDate();\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [organisationParameters, setOrganisationParameters] = useState({\r\n    name: '',\r\n    accountLimit: '',\r\n    validityDate: minDate,\r\n    validityDateString: DateService.toFilterByLastSeen(new Date()),\r\n    titleSource: 1,\r\n    clockType: 1,\r\n  });\r\n  const [organisationImage, setOrganisationImage] = useState(defaultAvatar);\r\n  const [imageFileSize, setImageFileSize] = useState(0);\r\n  const [organisationValidation, setOrganisationValidation] = useState({\r\n    name: false,\r\n    accountLimit: false,\r\n    validity: false,\r\n    image: false,\r\n    clockType: false,\r\n  });\r\n  const [nameErrorText, setNameErrorText] = useState('');\r\n  const [accountLimitErrorText, setAccountLimitErrorText] = useState('');\r\n  const [validityErrorText, setValidityErrorText] = useState('');\r\n\r\n  const onChangeOrganisationParameters = (e) => {\r\n    setOrganisationParameters((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleCheck = (value) =>\r\n    organisations.some(\r\n      (organisation) =>\r\n        organisation.name.toLowerCase() === value.trim().toLowerCase()\r\n    );\r\n\r\n  const validateOrganisationDetails = () => {\r\n    let valid = true;\r\n    setOrganisationValidation({\r\n      name: false,\r\n      accountLimit: false,\r\n      validity: false,\r\n      image: false,\r\n      clockType: false,\r\n    });\r\n\r\n    setNameErrorText('');\r\n    setAccountLimitErrorText('');\r\n    setValidityErrorText('');\r\n\r\n    if (!checkString(organisationParameters.name)) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        name: true,\r\n      }));\r\n      setNameErrorText('Organisation Name is Required');\r\n    } else if (handleCheck(organisationParameters.name)) {\r\n      valid = false;\r\n      setNameErrorText('Organisation Name is used');\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        name: true,\r\n      }));\r\n    }\r\n    if (!checkString(organisationParameters.accountLimit)) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        accountLimit: true,\r\n      }));\r\n      setAccountLimitErrorText('Account Limit is Required');\r\n    } else if (organisationParameters.accountLimit % 1 !== 0) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        accountLimit: true,\r\n      }));\r\n      setAccountLimitErrorText('Account Limit is Invalid');\r\n    } else if (organisationParameters.accountLimit < 1) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        accountLimit: true,\r\n      }));\r\n      setAccountLimitErrorText('Account Limit is Invalid');\r\n    }\r\n    if (!checkString(organisationParameters.validityDate)) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        validity: true,\r\n      }));\r\n      setValidityErrorText('License Expiry Date is Required');\r\n    } else if (\r\n      organisationParameters.validityDate.split('-')[0].toString().length > 4\r\n    ) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        validity: true,\r\n      }));\r\n      setValidityErrorText('License Expiry Year is Invalid');\r\n    } else {\r\n      const varDate = new Date(organisationParameters.validityDate); // dd-mm-YYYY\r\n      const today = new Date();\r\n      varDate.setHours(0, 0, 0, 0);\r\n      today.setHours(0, 0, 0, 0);\r\n      if (varDate < today) {\r\n        valid = false;\r\n        setOrganisationValidation((prevState) => ({\r\n          ...prevState,\r\n          validity: true,\r\n        }));\r\n        setValidityErrorText('License Expiry Date is Invalid');\r\n      }\r\n    }\r\n    if (imageFileSize > 2) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        image: true,\r\n      }));\r\n    }\r\n    if (organisationParameters.clockType == 1) {\r\n      valid = false;\r\n      setOrganisationValidation((prevState) => ({\r\n        ...prevState,\r\n        clockType: true,\r\n      }));\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setErrorMessage('');\r\n\r\n    setIsSubmitting(true);\r\n    if (!isSubmitting) {\r\n      if (validateOrganisationDetails()) {\r\n        OrganisationService.addOrganisation(organisationParameters)\r\n          .then(() => {\r\n            callbackClosePanel();\r\n            callbackGetOrganisations();\r\n            success('Organisation created successfully');\r\n          })\r\n          .catch((error) => {\r\n            const responseMessage = error.response.data.message;\r\n            danger(responseMessage);\r\n            // setErrorMessage(error.response.data.message);\r\n          })\r\n          .finally(() => {\r\n            setIsSubmitting(false);\r\n          });\r\n      } else {\r\n        setIsSubmitting(false);\r\n        danger('Please check required fields');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setOrganisationParameters((prevState) => ({\r\n      ...prevState,\r\n      validityDate: e.target.value, // DateService.toIsoFormat(e),\r\n      validityDateString: new Date(e.target.value).toDateString(),\r\n    }));\r\n  };\r\n\r\n  const onChangeImage = (file, fileExtension, size) => {\r\n    const extension = fileExtension === 'svg' ? 'svg+xml' : fileExtension;\r\n\r\n    setOrganisationParameters((prevState) => ({\r\n      ...prevState,\r\n      base64ProfileImage: file.split(',')[1],\r\n      fileExtension,\r\n      base64Logo: `data:image/${extension};base64,${file.split(',')[1]}`,\r\n    }));\r\n    setOrganisationImage(file);\r\n    setImageFileSize(size / (1024 * 1024).toFixed(2));\r\n  };\r\n\r\n  const changeTitleSource = (value) => {\r\n    setOrganisationParameters({\r\n      ...organisationParameters,\r\n      titleSource: value,\r\n    });\r\n  };\r\n\r\n  const changeClockType = (value) => {\r\n    setOrganisationParameters({ ...organisationParameters, clockType: value });\r\n  };\r\n\r\n  const spanErrorText = (field) => {\r\n    if (field.parameterName === 'name') return nameErrorText;\r\n    if (field.parameterName === 'accountLimit') return accountLimitErrorText;\r\n    if (field.parameterName === 'validityDate') return validityErrorText;\r\n    return '';\r\n  };\r\n\r\n  const showHasError = (field) => {\r\n    if (field.parameterName === 'name') return organisationValidation.name;\r\n    if (field.parameterName === 'accountLimit')\r\n      return organisationValidation.accountLimit;\r\n    if (field.parameterName === 'validityDate')\r\n      return organisationValidation.validity;\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className={Styles.box}>\r\n      <div className=\"position-relative\">\r\n        <i>\r\n          <img\r\n            className={Styles.closeIcon}\r\n            src={closeIcon}\r\n            alt=\"\"\r\n            onClick={() => callbackClosePanel()}\r\n            onKeyDown={() => callbackClosePanel()}\r\n            role=\"presentation\"\r\n          />\r\n        </i>\r\n      </div>\r\n\r\n      {isSubmitting ? (\r\n        <div\r\n          className=\"d-flex position-relative\"\r\n          style={{ width: '100%', top: '30%' }}\r\n        >\r\n          <LoadingComponent />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={Styles.formWrapper}>\r\n            <div className=\"d-flex position-relative\">\r\n              <p className={Styles.headerText}>New Organisation</p>\r\n              <ImageUploaderComponent\r\n                imageSource={organisationImage}\r\n                callbackChangeImage={onChangeImage}\r\n                styles={Styles}\r\n              />\r\n            </div>\r\n            {organisationValidation.image && (\r\n              <span className={Styles.hasError}>\r\n                {' '}\r\n                Image file size exceeds 2MB{' '}\r\n              </span>\r\n            )}\r\n            <form>\r\n              {formFields.map((field) => (\r\n                <div key={field.id}>\r\n                  <div className={Styles.formLabel}>\r\n                    {field.name}{' '}\r\n                    {field.isRequired ? (\r\n                      <span className={Styles.required}>*</span>\r\n                    ) : (\r\n                      undefined\r\n                    )}\r\n                  </div>\r\n\r\n                  <div>\r\n                    {field.parameterName === 'validityDate' ? (\r\n                      // <DatePicker\r\n                      //   className={Styles.formInput}\r\n                      //   selected={organisationParameters.validityDate}\r\n                      //   minDate={new Date()}\r\n                      //   // onSelect={handleDateSelect} //when day is clicked\r\n                      //   onChange={handleDateChange} // only when value has changed\r\n                      //   dateFormat=\"dd/MM/yyyy\"\r\n                      //   // onKeyDown={(e) => {\r\n                      //   //   e.preventDefault();\r\n                      //   // }}\r\n                      // />\r\n                      <input\r\n                        type=\"date\"\r\n                        className={Styles.formInput}\r\n                        min={minDate}\r\n                        onChange={handleDateChange}\r\n                        value={organisationParameters.validityDate}\r\n                        required\r\n                      />\r\n                    ) : (\r\n                      <div>\r\n                        {field.parameterName === 'clockType' && (\r\n                          <>\r\n                            <div\r\n                              className=\"form-check\"\r\n                              style={{ width: '50%', display: 'inline-block' }}\r\n                            >\r\n                              <input\r\n                                className={`${Styles.formCheck} form-check-input`}\r\n                                type=\"radio\"\r\n                                name={field.parameterName}\r\n                                id=\"flexRadioDefault2\"\r\n                                checked={\r\n                                  organisationParameters.clockType ===\r\n                                  'Standard'\r\n                                }\r\n                                onChange={() => changeClockType('Standard')}\r\n                              />\r\n                              <div\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"flexRadioDefault2\"\r\n                              >\r\n                                Standard\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"form-check\"\r\n                              style={{ width: '50%', display: 'inline-block' }}\r\n                            >\r\n                              <input\r\n                                className={`${Styles.formCheck} form-check-input`}\r\n                                type=\"radio\"\r\n                                name={field.parameterName}\r\n                                checked={\r\n                                  organisationParameters.clockType ===\r\n                                  'Broadcast'\r\n                                }\r\n                                onChange={() => changeClockType('Broadcast')}\r\n                                id=\"flexRadioDefault1\"\r\n                              />\r\n                              <div\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"flexRadioDefault1\"\r\n                              >\r\n                                Broadcast\r\n                              </div>\r\n                            </div>\r\n                            {organisationValidation.clockType && (\r\n                              <span className={Styles.hasError}>\r\n                                Select Clock Type\r\n                              </span>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        {field.parameterName === 'titleSource' && (\r\n                          <>\r\n                            <div\r\n                              className=\"form-check\"\r\n                              style={{ width: '50%', display: 'inline-block' }}\r\n                            >\r\n                              <input\r\n                                className={`${Styles.formCheck} form-check-input`}\r\n                                type=\"radio\"\r\n                                name={field.parameterName}\r\n                                id=\"flexRadioDefault2\"\r\n                                checked={\r\n                                  organisationParameters.titleSource === 1\r\n                                }\r\n                                onChange={() => changeTitleSource(1)}\r\n                              />\r\n                              <div\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"flexRadioDefault2\"\r\n                              >\r\n                                Library\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"form-check\"\r\n                              style={{ width: '50%', display: 'inline-block' }}\r\n                            >\r\n                              <input\r\n                                className={`${Styles.formCheck} form-check-input`}\r\n                                type=\"radio\"\r\n                                name={field.parameterName}\r\n                                checked={\r\n                                  organisationParameters.titleSource === 2\r\n                                }\r\n                                onChange={() => changeTitleSource(2)}\r\n                                id=\"flexRadioDefault1\"\r\n                              />\r\n                              <div\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"flexRadioDefault1\"\r\n                              >\r\n                                Import\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n\r\n                        {!['titleSource', 'clockType'].includes(\r\n                          field.parameterName\r\n                        ) && (\r\n                          <input\r\n                            className={Styles.formInput}\r\n                            name={field.parameterName && field.parameterName}\r\n                            type={field.type}\r\n                            placeholder={field.placeHolder}\r\n                            onChange={onChangeOrganisationParameters}\r\n                            maxLength={field.maxLength}\r\n                            onKeyDown={(evt) =>\r\n                              evt.target.maxLength <= evt.target.value.length &&\r\n                              evt.key !== 'Backspace' &&\r\n                              evt.preventDefault()\r\n                            }\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    {showHasError(field) && (\r\n                      <span className={Styles.hasError}>\r\n                        {spanErrorText(field)}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </form>\r\n          </div>\r\n\r\n          <div\r\n            className=\"position-absolute start-0 bottom-0 text-center\"\r\n            style={{\r\n              width: '100%',\r\n              height: '45px',\r\n              marginBottom: '10px',\r\n            }}\r\n          >\r\n            <i\r\n              className={Styles.saveIcon}\r\n              style={{ pointerEvent: isSubmitting && 'none' }}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Save new organisation\"\r\n            >\r\n              <img\r\n                src={saveIcon}\r\n                alt=\"\"\r\n                onClick={handleSubmit}\r\n                onKeyDown={handleSubmit}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n            <i\r\n              className={Styles.closeCircleIcon}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Cancel\"\r\n            >\r\n              <img\r\n                src={closeCircleIcon}\r\n                alt=\"\"\r\n                onClick={() => callbackClosePanel()}\r\n                onKeyDown={() => callbackClosePanel()}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n            {errorMessage !== '' && errorMessage}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nAddOrganisationComponent.propTypes = {\r\n  callbackClosePanel: PropTypes.func.isRequired,\r\n  callbackGetOrganisations: PropTypes.func.isRequired,\r\n  organisations: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\nAddOrganisationComponent.defaultProps = {\r\n  organisations: null,\r\n};\r\nexport default AddOrganisationComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"EditDeleteOrganisation_userPhoto__eQrHP\",\"uploadPhotoButton\":\"EditDeleteOrganisation_uploadPhotoButton__AhPO0\",\"userInfo\":\"EditDeleteOrganisation_userInfo__fNjL1\",\"deleteButton\":\"EditDeleteOrganisation_deleteButton__D8Ske\",\"cancelButton\":\"EditDeleteOrganisation_cancelButton__oy6D8\",\"divLoadingPanel\":\"EditDeleteOrganisation_divLoadingPanel__O1Jh6\",\"formCheck\":\"EditDeleteOrganisation_formCheck__p75pw\"};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal } from 'react-bootstrap';\r\nimport LoadingComponent from '../../_reusable/loading/LoadingComponent';\r\nimport DateService from '../../../core/date.service';\r\nimport Styles from './EditDeleteOrganisation.module.css';\r\nimport UserStyles from '../Organisation.module.css';\r\nimport closeCircleIcon from '../../../assets/icons/Close-Circle.svg';\r\nimport closeIcon from '../../../assets/icons/Close.svg';\r\nimport saveIcon from '../../../assets/icons/Save.svg';\r\nimport defaultAvatar from '../../../assets/icons/OrganisationLogo.png';\r\n\r\nimport ImageUploaderComponent from '../../_reusable/uploader/ImageUploaderComponent';\r\nimport OrganisationService from '../OrganisationService';\r\nimport OrganisationStorage from '../OrganisationStorage';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../../shared/elements/notification/NotifyComponent';\r\n\r\nfunction EditDeleteOrganisationComponent({\r\n  selectedOrganisation,\r\n  callbackClosePanel,\r\n  callbackGetOrganisation,\r\n  organisations,\r\n}) {\r\n  const { formFields } = OrganisationStorage;\r\n  const { checkString } = OrganisationStorage;\r\n  const minDate = OrganisationStorage.minDate();\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [parameters, setParameters] = useState({\r\n    id: '',\r\n    name: '',\r\n    validityDate: '',\r\n    accountLimit: '',\r\n    base64ProfileImage: '',\r\n    validityDateString: '',\r\n    titleSource: '',\r\n    clockType: 1,\r\n  });\r\n  const [validation, setValidation] = useState({\r\n    name: false,\r\n    accountLimit: false,\r\n    validityDate: false,\r\n    image: false,\r\n  });\r\n  const [nameErrorText, setNameErrorText] = useState();\r\n  const [validityErrorText, setValidityErrorText] = useState();\r\n  const [accountLimitErrorText, setAccountLimitErrorText] = useState();\r\n\r\n  const [organisationInfo, setOrganisationInfo] = useState({});\r\n  const [organisationImage, setOrganisationImage] = useState(defaultAvatar);\r\n  const [imageFileSize, setImageFileSize] = useState(0);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChangeorganisationParameters = (e) => {\r\n    setParameters((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleCheck = (value) => organisations.some(\r\n    (organisation) => organisation.name.toLowerCase() === value.trim().toLowerCase()\r\n        && organisation.organisationID !== selectedOrganisation.organisationID,\r\n  );\r\n\r\n  const validateOrganisationDetails = () => {\r\n    let valid = true;\r\n    setValidation({\r\n      name: false,\r\n      accountLimit: false,\r\n      validity: false,\r\n      image: false,\r\n    });\r\n\r\n    setNameErrorText('');\r\n    setAccountLimitErrorText('');\r\n    setValidityErrorText('');\r\n\r\n    if (!checkString(parameters.name)) {\r\n      valid = false;\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        name: true,\r\n      }));\r\n      setNameErrorText('Organisation Name is Required');\r\n    } else if (handleCheck(parameters.name)) {\r\n      setNameErrorText('Organisation Name is used');\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        name: true,\r\n      }));\r\n    }\r\n    if (!checkString(parameters.accountLimit)) {\r\n      valid = false;\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        accountLimit: true,\r\n      }));\r\n      setAccountLimitErrorText('Account Limit is Required');\r\n    } else if (parameters.accountLimit < 1) {\r\n      valid = false;\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        accountLimit: true,\r\n      }));\r\n      setAccountLimitErrorText('Account Limit is Invalid');\r\n    } else if (parameters.accountLimit % 1 !== 0) {\r\n      valid = false;\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        accountLimit: true,\r\n      }));\r\n      setAccountLimitErrorText('Account Limit is Invalid');\r\n    }\r\n\r\n    if (!checkString(parameters.validityDate)) {\r\n      valid = false;\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        validity: true,\r\n      }));\r\n      setValidityErrorText('License Expiry Date is Required');\r\n    } else if (parameters.validityDate.split('-')[0].toString().length > 4) {\r\n      valid = false;\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        validity: true,\r\n      }));\r\n      setValidityErrorText('License Expiry Year is Invalid');\r\n    } else {\r\n      const varDate = new Date(parameters.validityDate); // dd-mm-YYYY\r\n      const today = new Date();\r\n      varDate.setHours(0, 0, 0, 0);\r\n      today.setHours(0, 0, 0, 0);\r\n      if (varDate < today) {\r\n        valid = false;\r\n        setValidation((prevState) => ({\r\n          ...prevState,\r\n          validity: true,\r\n        }));\r\n        setValidityErrorText('License Expiry Date is Invalid');\r\n      }\r\n    }\r\n    if (imageFileSize > 2) {\r\n      valid = false;\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        image: true,\r\n      }));\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleEditSubmit = () => {\r\n    setErrorMessage('');\r\n    setIsSubmitting(true);\r\n    if (!isSubmitting) {\r\n      if (!validateOrganisationDetails()) {\r\n        danger('Please check required fields');\r\n        setIsSubmitting(false);\r\n      } else {\r\n        OrganisationService.updateOrganisation(\r\n          selectedOrganisation.id,\r\n          parameters,\r\n        )\r\n          .then(() => {\r\n            callbackClosePanel();\r\n            callbackGetOrganisation();\r\n            success('Organisation updated successfully');\r\n          })\r\n          .catch((error) => {\r\n            const responseMessage = error.response.data.message;\r\n            danger(responseMessage);\r\n          })\r\n          .finally(() => {\r\n            setIsSubmitting(false);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteSubmit = () => {\r\n    setErrorMessage('');\r\n    setIsSubmitting(true);\r\n    if (!isSubmitting) {\r\n      OrganisationService.deleteOrganisation(selectedOrganisation.id)\r\n        .then(() => {\r\n          callbackClosePanel();\r\n          callbackGetOrganisation();\r\n          success('Organisation deleted successfully');\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.response.data.message);\r\n        })\r\n        .finally(() => {\r\n          setIsSubmitting(false);\r\n          setModalShow(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setParameters((prevState) => ({\r\n      ...prevState,\r\n      validityDate: e.target.value,\r\n      validityDateString: new Date(e.target.value).toDateString(),\r\n    }));\r\n  };\r\n\r\n  const onChangeImage = (file, fileExtension, size) => {\r\n    const extension = fileExtension === 'svg' ? 'svg+xml' : fileExtension;\r\n    setParameters((prevState) => ({\r\n      ...prevState,\r\n      base64ProfileImage: file.split(',')[1],\r\n      fileExtension,\r\n      base64Logo: `data:image/${extension};base64,${file.split(',')[1]}`,\r\n    }));\r\n    setOrganisationImage(file);\r\n    setImageFileSize(size / (1024 * 1024).toFixed(2));\r\n  };\r\n\r\n  const changeClockType = (value) => {\r\n    setParameters({ ...parameters, clockType: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    OrganisationService.getOrganisation(selectedOrganisation.id).then(\r\n      (response) => {\r\n        setParameters({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          validityDate: DateService.toInputDateFormat(\r\n            response.data.validityDate,\r\n          ),\r\n          accountLimit: response.data.accountLimit,\r\n          base64Logo: response.data.base64Logo,\r\n          validityDateString: DateService.toFilterByLastSeen(\r\n            response.data.validityDate,\r\n          ),\r\n          titleSource: response.data.titleSource,\r\n          clockType: response.data.clockType,\r\n        });\r\n        setOrganisationInfo({\r\n          dateCreated: DateService.toLocalFormat(response.data.dateCreated),\r\n        });\r\n        setOrganisationImage(\r\n          response.data.base64Logo !== null && response.data.base64Logo !== ''\r\n            ? response.data.base64Logo\r\n            : defaultAvatar,\r\n        );\r\n        setValidation({\r\n          name: false,\r\n          accountLimit: false,\r\n          validity: false,\r\n          image: false,\r\n        });\r\n        setImageFileSize(0);\r\n        setIsLoading(false);\r\n      },\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedOrganisation.id]);\r\n\r\n  const spanErrorText = (field) => {\r\n    if (field.parameterName === 'name') return nameErrorText;\r\n    if (field.parameterName === 'accountLimit') return accountLimitErrorText;\r\n    if (field.parameterName === 'validityDate') return validityErrorText;\r\n    return '';\r\n  };\r\n\r\n  const spanHasError = (field) => {\r\n    if (field.parameterName === 'name') return validation.name;\r\n    if (field.parameterName === 'accountLimit') return validation.accountLimit;\r\n    if (field.parameterName === 'validityDate') return validation.validity;\r\n    return false;\r\n  };\r\n\r\n  const inputFieldValue = (field) => {\r\n    if (field.parameterName === 'name') return parameters.name;\r\n    if (field.parameterName === 'accountLimit') return parameters.accountLimit;\r\n    if (field.parameterName === 'validityDate') return parameters.validityDate;\r\n    return '';\r\n  };\r\n\r\n  const inputFieldClass = (field) => {\r\n    if (field.parameterName === 'name') return validation.name;\r\n    if (field.parameterName === 'accountLimit') return validation.accountLimit;\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className={UserStyles.box}>\r\n      <div className=\"position-relative\">\r\n        <i>\r\n          <img\r\n            className={UserStyles.closeIcon}\r\n            src={closeIcon}\r\n            alt=\"\"\r\n            onClick={() => callbackClosePanel()}\r\n            onKeyDown={() => callbackClosePanel()}\r\n            role=\"presentation\"\r\n          />\r\n        </i>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div\r\n          className={`${Styles.divLoadingPanel}`}\r\n          style={{ fontSize: '28px' }}\r\n        >\r\n          <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n            <div>\r\n              <LoadingComponent />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={UserStyles.formWrapper}>\r\n            <div\r\n              className=\"d-flex position-relative\"\r\n              style={{ height: '113px' }}\r\n            >\r\n              <ImageUploaderComponent\r\n                imageSource={organisationImage}\r\n                callbackChangeImage={onChangeImage}\r\n                styles={Styles}\r\n              />\r\n            </div>\r\n            {validation.image && (\r\n              <span className={UserStyles.hasError}>\r\n                {' '}\r\n                Image file size exceeds 2MB\r\n                {' '}\r\n              </span>\r\n            )}\r\n\r\n            <form>\r\n              {formFields.map((field) => (\r\n                <div key={field.id}>\r\n                  <div className={UserStyles.formLabel}>\r\n                    {field.name}\r\n                    {' '}\r\n                    {field.isRequired ? (\r\n                      <span className={UserStyles.required}>*</span>\r\n                    ) : (\r\n                      undefined\r\n                    )}\r\n                  </div>\r\n\r\n                  {field.parameterName === 'validityDate' ? (\r\n                    // <DatePicker\r\n                    //   className={UserStyles.formInput}\r\n                    //   selected={parameters.validityDate}\r\n                    //   minDate={new Date()}\r\n                    //   // onSelect={handleDateSelect} //when day is clicked\r\n                    //   onChange={handleDateChange} // only when value has changed\r\n                    //   dateFormat=\"dd/MM/yyyy\"\r\n                    //   // onKeyDown={(evt) => evt.preventDefault()}\r\n                    // />\r\n                    <input\r\n                      type=\"date\"\r\n                      className={UserStyles.formInput}\r\n                      min={minDate}\r\n                      onChange={handleDateChange}\r\n                      value={parameters.validityDate}\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {field.parameterName === 'clockType' && (\r\n                        <>\r\n                          <div\r\n                            className=\"form-check\"\r\n                            style={{ width: '50%', display: 'inline-block' }}\r\n                          >\r\n                            <input\r\n                              className={`${Styles.formCheck} form-check-input`}\r\n                              type=\"radio\"\r\n                              name={field.parameterName}\r\n                              id=\"flexRadioDefault2\"\r\n                              checked={parameters.clockType === 'Standard'}\r\n                              onChange={() => changeClockType('Standard')}\r\n                            />\r\n                              <div\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"flexRadioDefault2\"\r\n                              >\r\n                                Standard\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div\r\n                            className=\"form-check\"\r\n                            style={{ width: '50%', display: 'inline-block' }}\r\n                          >\r\n                            <input\r\n                              className={`${Styles.formCheck} form-check-input`}\r\n                              type=\"radio\"\r\n                              name={field.parameterName}\r\n                              checked={parameters.clockType === 'Broadcast'}\r\n                              onChange={() => changeClockType('Broadcast')}\r\n                              id=\"flexRadioDefault1\"\r\n                            />\r\n                              <div\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"flexRadioDefault1\"\r\n                              >\r\n                                Broadcast\r\n                              </div>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                      \r\n                      {field.parameterName === 'titleSource' && (\r\n                        <>\r\n                          <div\r\n                            className=\"form-check\"\r\n                            style={{ width: '50%', display: 'inline-block' }}\r\n                          >\r\n                            <input\r\n                              className={`${Styles.formCheck} form-check-input`}\r\n                              type=\"radio\"\r\n                              name={field.parameterName}\r\n                              id=\"flexRadioDefault2\"\r\n                              checked={parameters.titleSource === 1}\r\n                            />\r\n                            <div\r\n                              className=\"form-check-label\"\r\n                              htmlFor=\"flexRadioDefault2\"\r\n                            >\r\n                              Library\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div\r\n                            className=\"form-check\"\r\n                            style={{ width: '50%', display: 'inline-block' }}\r\n                          >\r\n                            <input\r\n                              className={`${Styles.formCheck} form-check-input`}\r\n                              type=\"radio\"\r\n                              name={field.parameterName}\r\n                              checked={parameters.titleSource === 2}\r\n                              id=\"flexRadioDefault1\"\r\n                            />\r\n                            <div\r\n                              className=\"form-check-label\"\r\n                              htmlFor=\"flexRadioDefault1\"\r\n                            >\r\n                              Import\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n\r\n                      {!['titleSource', 'clockType'].includes(field.parameterName) && (\r\n                        <input\r\n                          className={`${UserStyles.formInput} ${inputFieldClass(\r\n                            field,\r\n                          )}`}\r\n                          name={field.parameterName && field.parameterName}\r\n                          value={inputFieldValue(field)}\r\n                          type={field.type}\r\n                          placeholder={field.placeHolder}\r\n                          onChange={onChangeorganisationParameters}\r\n                          maxLength={field.maxLength}\r\n                          onKeyDown={(evt) => evt.target.maxLength <= evt.target.value.length\r\n                            && evt.key !== 'Backspace'\r\n                            && evt.preventDefault()}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {spanHasError(field) && (\r\n                    <span className={UserStyles.hasError}>\r\n                      {spanErrorText(field)}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </form>\r\n            <div className={`${Styles.userInfo} d-flex`}>\r\n              <div>\r\n                <p>\r\n                  Date Created\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  <span>{organisationInfo.dateCreated}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"position-absolute start-0 bottom-0 text-center\"\r\n            style={{\r\n              width: '100%',\r\n              height: '45px',\r\n              marginBottom: '10px',\r\n            }}\r\n          >\r\n            <i\r\n              className={UserStyles.saveIcon}\r\n              style={{ pointerEvent: isSubmitting && 'none' }}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Update organisation details\"\r\n            >\r\n              <img\r\n                src={saveIcon}\r\n                alt=\"\"\r\n                onClick={handleEditSubmit}\r\n                onKeyDown={handleEditSubmit}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n            {/* <i\r\n              className={UserStyles.trashcanIcon}\r\n              style={{ pointerEvent: isSubmitting && 'none' }}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Delete organisation\"\r\n            >\r\n              <img\r\n                src={trashcanIcon}\r\n                alt=\"\"\r\n                onClick={() => setModalShow(true)}\r\n              />\r\n            </i> */}\r\n            <i className={UserStyles.closeCircleIcon}>\r\n              <img\r\n                src={closeCircleIcon}\r\n                alt=\"\"\r\n                onClick={() => callbackClosePanel()}\r\n                onKeyDown={() => callbackClosePanel()}\r\n                role=\"presentation\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Cancel\"\r\n              />\r\n            </i>\r\n            {errorMessage !== '' && errorMessage}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <Modal\r\n        size=\"md\"\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        {/* <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Delete Organisation\r\n          </Modal.Title>\r\n        </Modal.Header> */}\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            You are permanently deleting this organisation\r\n          </div>\r\n          <div style={{ textAlign: 'center', fontSize: '20px' }}>\r\n            Are you sure you want to proceed?\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.cancelButton}\r\n              onClick={() => setModalShow(false)}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className={Styles.deleteButton}\r\n              onClick={handleDeleteSubmit}\r\n              type=\"button\"\r\n            >\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* <Modal\r\n        size=\"md\"\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            You are permanently deleting this user\r\n          </div>\r\n          <div style={{ textAlign: 'center', fontSize: '20px' }}>\r\n            Are you sure you want to proceed?\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.cancelButton}\r\n              onClick={() => setModalShow(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className={Styles.deleteButton}\r\n              onClick={handleDeleteSubmit}\r\n            >\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n}\r\nEditDeleteOrganisationComponent.propTypes = {\r\n  selectedOrganisation: PropTypes.shape.isRequired,\r\n  callbackClosePanel: PropTypes.func.isRequired,\r\n  callbackGetOrganisation: PropTypes.func.isRequired,\r\n  organisations: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\nEditDeleteOrganisationComponent.defaultProps = {\r\n  organisations: null,\r\n};\r\nexport default EditDeleteOrganisationComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport DateService from '../../core/date.service';\r\nimport Table from '../../shared/components/table/Table';\r\nimport BannerComponent from '../_reusable/banner/BannerComponent';\r\nimport AddOrganisationComponent from './add-organisation/AddOrganisationComponent';\r\nimport EditDeleteOrganisationComponent from './edit-delete-organisation/EditDeleteOrganisationComponent';\r\nimport OrganisationService from './OrganisationService';\r\nimport organisationStorage from './OrganisationStorage';\r\n\r\nfunction Organisation() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [selectedOrganisation, setSelectedOrganisation] = useState();\r\n  const [data, setData] = useState([]);\r\n  const [queryParameters, setQueryParameters] = useState({});\r\n  const [tableParameters, setTableParameters] = useState({});\r\n  const [paginationParameters, setPaginationParameters] = useState({});\r\n  const [sortParameters, setSortParameters] = useState({ order: 1, sort: 5 });\r\n  const [showAddPanel, setShowAddPanel] = useState(false);\r\n\r\n  const constructQueryParameters = (parameters) => {\r\n    const pagination = `?pageNumber=${\r\n      parameters.pageNumber ? parameters.pageNumber : 1\r\n    }\r\n    &pageSize=${parameters.pageSize ? parameters.pageSize : 50}`;\r\n\r\n    const name = parameters.nameFilter && parameters.nameFilterValue\r\n      ? `&nameFilter=${parameters.nameFilter}&nameFilterValue=${parameters.nameFilterValue}`\r\n      : '';\r\n\r\n    const accountLimit = parameters.accountLimitFilter && parameters.accountLimitFilterValue\r\n      ? `&accountLimitFilter=${parameters.accountLimitFilter}&accountLimitFilterValue=${parameters.accountLimitFilterValue}`\r\n      : '';\r\n\r\n    const usedAccount = parameters.usedAccountsFilter && parameters.usedAccountsFilterValue\r\n      ? `&usedAccountFilter=${parameters.usedAccountsFilter}&usedAccountFilterValue=${parameters.usedAccountsFilterValue}`\r\n      : '';\r\n\r\n    const validityDate = parameters.validityDateFilter\r\n      && parameters.validityDateFilterStartRange\r\n      && parameters.validityDateFilterEndRange\r\n      ? `&validityDateFilter=${parameters.validityDateFilter}\r\n        &validityDateFilterStartRange=${DateService.toIsoFormat(\r\n    parameters.validityDateFilterStartRange,\r\n  )}\r\n        &validityDateFilterEndRange=${DateService.toIsoFormat(\r\n    parameters.validityDateFilterEndRange,\r\n  )}`\r\n      : '';\r\n    // eslint-disable-next-line max-len\r\n\r\n    const dateCreated = parameters.dateCreatedFilter\r\n      && parameters.dateCreatedFilterStartRange\r\n      && parameters.dateCreatedFilterEndRange\r\n      ? `&dateCreatedFilter=${\r\n        parameters.dateCreatedFilter\r\n      }&dateCreatedFilterStartRange=${DateService.toIsoFormat(\r\n        parameters.dateCreatedFilterStartRange,\r\n      )}&dateCreatedFilterEndRange=${DateService.toIsoFormat(\r\n        parameters.dateCreatedFilterEndRange,\r\n      )}`\r\n      : '';\r\n    // eslint-disable-next-line max-len\r\n\r\n    const titleSource = parameters.titleSource\r\n      ? `&titleSource=${parameters.titleSource\r\n        .map((item) => item.name)\r\n        .join('-')}`\r\n      : '';\r\n\r\n    const sort = parameters.sortOrder && parameters.sortBy\r\n      ? `&organisationSort=${parameters.sortBy}&sortBy=${parameters.sortOrder}`\r\n      : '';\r\n\r\n    const searchKey = parameters.searchKey\r\n      ? `&SearchKey=${parameters.searchKey}`\r\n      : '';\r\n\r\n    const useCache = parameters.useCache\r\n      ? `&useCache=${parameters.useCache}`\r\n      : '';\r\n\r\n    const clockType = parameters.clockType\r\n      ? `&clockType=${parameters.clockType.map((item) => item.name).join('-')}`\r\n      : '';\r\n\r\n    let queryString = pagination\r\n      + name\r\n      + accountLimit\r\n      + usedAccount\r\n      + validityDate\r\n      + dateCreated\r\n      + titleSource\r\n      + clockType\r\n      + searchKey\r\n      + sort\r\n      + useCache;\r\n\r\n      if (queryString.includes('+')) {\r\n        queryString = queryString.replace('+', '%2B');\r\n      }\r\n\r\n    return queryString;\r\n  };\r\n\r\n  const constructTableParameters = (parameters) => {\r\n    setTableParameters({\r\n      nameFilter: parameters.nameFilter,\r\n      nameFilterValue: parameters.nameFilterValue,\r\n      accountLimitFilter: parameters.accountLimitFilter,\r\n      accountLimitFilterValue: parameters.accountLimitFilterValue,\r\n      usedAccountsFilter: parameters.usedAccountsFilter,\r\n      usedAccountsFilterValue: parameters.usedAccountsFilterValue,\r\n      titleSource: parameters.titleSource,\r\n      clockType: parameters.clockType,\r\n      validityDateFilter: parameters.validityDateFilter,\r\n      validityDateFilterStartRange: parameters.validityDateFilterStartRange,\r\n      validityDateFilterEndRange: parameters.validityDateFilterEndRange,\r\n      dateCreatedFilter: parameters.dateCreatedFilter,\r\n      dateCreatedFilterStartRange: parameters.dateCreatedFilterStartRange,\r\n      dateCreatedFilterEndRange: parameters.dateCreatedFilterEndRange,\r\n    });\r\n  };\r\n\r\n  const constructData = (selectedData) => {\r\n    let organisations = selectedData;\r\n    organisations = organisations.map((item) => ({\r\n      id: item.id,\r\n      name: item.name,\r\n      titleSource: item.titleSource === 1 ? 'Library' : 'Import',\r\n      clockType: item.clockType,\r\n      validityDate: DateService.toLocalFormat(item.validityDate),\r\n      accountLimit: item.accountLimit,\r\n      usedAccounts: item.usedAccounts,\r\n      createdDate: DateService.toLocalFormat(item.createdDate),\r\n    }));\r\n\r\n    return organisations;\r\n  };\r\n\r\n  const handleGetOrganisations = () => {\r\n    setIsLoading(true);\r\n\r\n    OrganisationService.getOrganisations(\r\n      constructQueryParameters(queryParameters),\r\n    )\r\n      .then((response) => {\r\n        setData(constructData(response.data.organisations));\r\n\r\n        setPaginationParameters({\r\n          totalCount: response.data.totalCount,\r\n          pageSize: response.data.pageSize,\r\n          currentPage: response.data.currentPage,\r\n          totalPages: response.data.totalPages,\r\n        });\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const handleOnFilter = (selectedData) => {\r\n    setQueryParameters({ ...queryParameters, ...selectedData, pageNumber: 1 });\r\n  };\r\n\r\n  const handleOnClearFilter = () => {\r\n    setQueryParameters({\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      searchKey: queryParameters.searchKey,\r\n    });\r\n  };\r\n\r\n  const handleOnSearch = (searchKey) => {\r\n    setQueryParameters({ ...queryParameters, searchKey, pageNumber: 1 });\r\n  };\r\n\r\n  const handleOnSort = ({ sortBy, sortOrder }) => {\r\n    setSortParameters({ order: sortOrder, sort: sortBy });\r\n    setQueryParameters({ ...queryParameters, sortBy, sortOrder });\r\n  };\r\n\r\n  const handleOnPaginate = (pageNumber, pageSize) => {\r\n    setQueryParameters({ ...queryParameters, pageNumber, pageSize });\r\n  };\r\n\r\n  const handleOnExport = () => {\r\n    if (!isExporting) {\r\n      setIsExporting(true);\r\n\r\n      OrganisationService.exportOrganisations(\r\n        constructQueryParameters(queryParameters),\r\n      )\r\n        .then((response) => {\r\n          const blob = new Blob([response.data], {\r\n            type:\r\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n          });\r\n          saveAs(\r\n            blob,\r\n            `op2mise_organisations_data_export_${DateService.toExportFormat(\r\n              new Date(),\r\n            )}.xlsx`,\r\n          );\r\n        })\r\n        .finally(() => setIsExporting(false));\r\n    }\r\n  };\r\n\r\n  const openAddOrganisationPanel = () => {\r\n    setShowAddPanel(true);\r\n    setSelectedOrganisation();\r\n  };\r\n\r\n  const handleSelectData = (selectedData) => {\r\n    setSelectedOrganisation(selectedData);\r\n    setShowAddPanel(false);\r\n  };\r\n\r\n  const hidePanel = () => {\r\n    setShowAddPanel(false);\r\n    setSelectedOrganisation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    constructTableParameters(queryParameters);\r\n    handleGetOrganisations();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryParameters]);\r\n\r\n  return (\r\n    <>\r\n      <BannerComponent\r\n        componentName=\"Organisations\"\r\n        addButtonText=\"New Organisation\"\r\n        isAddButtonHidden={false}\r\n        callbackAddButtonFunction={openAddOrganisationPanel}\r\n        handleSearch={handleOnSearch}\r\n      />\r\n\r\n      <hr style={{ borderTop: '1px  solid #b1b1b1', marginBottom: '8px' }} />\r\n\r\n      <div className=\"d-flex\">\r\n        <Table\r\n          noDataVerbiage=\"No organisations found\"\r\n          headers={organisationStorage.headers}\r\n          list={data}\r\n          isExporting={isExporting}\r\n          isFetchingData={isLoading}\r\n          queryParameters={tableParameters}\r\n          paginationParameters={paginationParameters}\r\n          sortParameters={sortParameters}\r\n          onFilter={handleOnFilter}\r\n          onClearFilters={handleOnClearFilter}\r\n          onSort={handleOnSort}\r\n          onPaginate={handleOnPaginate}\r\n          onExport={handleOnExport}\r\n          onDoubleClickSelectData={handleSelectData}\r\n        />\r\n\r\n        {showAddPanel && (\r\n          <AddOrganisationComponent\r\n            organisations={data}\r\n            callbackGetOrganisations={handleGetOrganisations}\r\n            callbackClosePanel={hidePanel}\r\n          />\r\n        )}\r\n\r\n        {selectedOrganisation && (\r\n          <EditDeleteOrganisationComponent\r\n            selectedOrganisation={selectedOrganisation}\r\n            organisations={data}\r\n            callbackGetOrganisation={handleGetOrganisations}\r\n            callbackClosePanel={hidePanel}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Organisation;\r\n"],"names":["defaultOptions","loop","autoplay","animationData","hourglassIcon","rendererSettings","preserveAspectRatio","className","options","height","width","ImageUploaderComponent","imageSource","callbackChangeImage","styles","uploadNameRef","useRef","userPhoto","src","alt","uploadPhotoButton","onClick","current","click","type","style","display","ref","onChange","e","file","fileExtension","target","files","name","split","pop","Promise","resolve","baseURL","reader","FileReader","readAsDataURL","onload","result","getBase64","then","base64","size","catch","err","danger","defaultProps","addOrganisation","json","url","process","axios","updateOrganisation","ID","deleteOrganisation","Id","getOrganisations","parameters","getOrganisation","exportOrganisations","responseType","headers","headerId","headerName","filter","queryNames","sortable","list","id","formFields","parameterName","placeHolder","isRequired","maxLength","modalCloudportFields","label","errorMesssage","modalAnalyticsFields","mediaLibraryPlayoutList","frequencyList","checkString","text","undefined","minDate","now","Date","day","getDate","slice","month","getMonth","getFullYear","attributeList","AddOrganisationComponent","callbackClosePanel","callbackGetOrganisations","organisations","OrganisationStorage","useState","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","accountLimit","validityDate","validityDateString","DateService","titleSource","clockType","organisationParameters","setOrganisationParameters","defaultAvatar","organisationImage","setOrganisationImage","imageFileSize","setImageFileSize","validity","image","organisationValidation","setOrganisationValidation","nameErrorText","setNameErrorText","accountLimitErrorText","setAccountLimitErrorText","validityErrorText","setValidityErrorText","onChangeOrganisationParameters","prevState","value","validateOrganisationDetails","valid","some","organisation","toLowerCase","trim","toString","length","varDate","today","setHours","handleSubmit","OrganisationService","success","error","responseMessage","response","data","message","finally","handleDateChange","toDateString","changeTitleSource","changeClockType","spanErrorText","field","showHasError","Styles","closeIcon","onKeyDown","role","top","LoadingComponent","extension","base64ProfileImage","base64Logo","toFixed","map","min","required","checked","htmlFor","includes","placeholder","evt","key","preventDefault","marginBottom","pointerEvent","title","saveIcon","closeCircleIcon","EditDeleteOrganisationComponent","selectedOrganisation","callbackGetOrganisation","setParameters","validation","setValidation","organisationInfo","setOrganisationInfo","modalShow","setModalShow","isLoading","setIsLoading","onChangeorganisationParameters","organisationID","handleEditSubmit","useEffect","dateCreated","spanHasError","inputFieldValue","inputFieldClass","UserStyles","fontSize","verticalAlign","Modal","show","onHide","padding","textAlign","paddingTop","isExporting","setIsExporting","setSelectedOrganisation","setData","queryParameters","setQueryParameters","tableParameters","setTableParameters","paginationParameters","setPaginationParameters","order","sort","sortParameters","setSortParameters","showAddPanel","setShowAddPanel","constructQueryParameters","pagination","pageNumber","pageSize","nameFilter","nameFilterValue","accountLimitFilter","accountLimitFilterValue","usedAccount","usedAccountsFilter","usedAccountsFilterValue","validityDateFilter","validityDateFilterStartRange","validityDateFilterEndRange","dateCreatedFilter","dateCreatedFilterStartRange","dateCreatedFilterEndRange","item","join","sortOrder","sortBy","searchKey","useCache","queryString","replace","handleGetOrganisations","usedAccounts","createdDate","totalCount","currentPage","totalPages","hidePanel","BannerComponent","componentName","addButtonText","isAddButtonHidden","callbackAddButtonFunction","handleSearch","borderTop","Table","noDataVerbiage","organisationStorage","isFetchingData","onFilter","selectedData","onClearFilters","onSort","onPaginate","onExport","blob","Blob","saveAs","onDoubleClickSelectData"],"sourceRoot":""}
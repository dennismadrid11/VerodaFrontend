{"version":3,"file":"static/js/841.74f0ffef.chunk.js","mappings":"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","sources":["components/_reusable/blocker/UsePromptComponent.ts","components/_reusable/blocker/UseBlockerComponent.ts","components/_reusable/tabs/TabHeaderComponent.jsx","components/channel/ChannelService.js","webpack://sky/./src/components/channel-profiles/ChannelProfile.module.css?bd6c","webpack://sky/./src/components/channel-profiles/profile/Profile.module.css?dc40","components/channel-profiles/profile/ProfileTooltipComponent.jsx","components/channel-profiles/profile/ProfileForms.js","assets/icons/Copy.svg","assets/icons/Check-2.svg","webpack://sky/./src/shared/elements/button/styles.module.css?3680","shared/elements/button/button.component.jsx","webpack://sky/./src/components/channel-profiles/profile/profile-form/ProfileForm.module.css?89bc","components/channel-profiles/profile/profile-form/ProfileFormComponent.jsx","components/channel-profiles/ChannelProfileService.js","components/channel-profiles/profile/add-profile/AddProfileComponentService.js","components/channel-profiles/profile/add-profile/SelectChannelsModalComponent.jsx","components/channel-profiles/profile/add-profile/AddProfileComponent.jsx","webpack://sky/./src/components/channel-profiles/profile/profile-view/ProfileView.module.css?93de","components/channel-profiles/profile/profile-view/ProfileViewComponent.jsx","webpack://sky/./src/components/channel-profiles/profile/profile-probabilities/ProfileProbabilities.module.css?94d7","components/channel-profiles/profile/profile-probabilities/ProfileProbabilitiesBodyComponent.jsx","components/channel-profiles/profile/profile-probabilities/ProfileProbabilitiesComponent.jsx","components/channel-profiles/profile/ProfileComponent.jsx","webpack://sky/./src/components/channel-profiles/business-rules/BusinessRules.module.css?6b40","components/channel-profiles/business-rules/BusinessRulesForms.js","webpack://sky/./src/components/channel-profiles/business-rules/modals/Modal.module.css?61dd","components/channel-profiles/business-rules/modals/ImportBusinessRulesModalComponent.jsx","webpack://sky/./src/shared/components/custom-time-range/styles.module.css?007c","shared/components/custom-time-range/CustomTimeRange.jsx","components/pages/channel-setup/components/BusinessRulesComponent.jsx","webpack://sky/./src/components/channel-profiles/scoring/Scoring.module.css?1f5d","components/channel-profiles/scoring/ScoringForms.js","components/pages/channel-setup/components/ScoringComponent.jsx","components/channel-profiles/ChannelProfileForms.js","components/channel-profiles/business-rules/modals/ImportConfirmationModalComponent.jsx","components/pages/channel-setup/ChannelSetupComponent.jsx","webpack://sky/./src/shared/components/bootstrap-spinner/styles.module.css?480b","shared/components/bootstrap-spinner/BootstrapSpinner.jsx","shared/components/confirm-leave-modal/ConfirmLeaveModal.jsx","webpack://sky/./src/shared/components/custom-time-input/styles.module.css?d7a6","shared/components/custom-time-input/CustomTimeInput.jsx","webpack://sky/./src/shared/elements/input/styles.module.css?ed2d","shared/elements/input/input.component.jsx","webpack://sky/./src/shared/elements/switch/styles.module.css?f7a8","shared/elements/switch/switch.component.jsx","webpack://sky/./src/components/_reusable/tabs/Tabs.module.css?0105","webpack://sky/./src/shared/components/confirm-leave-modal/styles.module.css?cd03"],"sourcesContent":["/* eslint-disable */\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport { useBlocker } from './UseBlockerComponent.ts';\r\n\r\nexport function useCallbackPrompt(when: boolean): (boolean | (() => void))[] {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n  const [lastLocation, setLastLocation] = useState<any>(null);\r\n  const [confirmedNavigation, setConfirmedNavigation] = useState(false);\r\n\r\n  const cancelNavigation = useCallback(() => {\r\n    setShowPrompt(false);\r\n    setConfirmedNavigation(false);\r\n    setLastLocation(null);\r\n  }, []);\r\n\r\n  // handle blocking when user click on another route prompt will be shown\r\n  const handleBlockedNavigation = useCallback(\r\n    (nextLocation) => {\r\n      // in if condition we are checking next location and current location are equals or not\r\n      if (\r\n        !confirmedNavigation\r\n        && nextLocation.location.pathname !== location.pathname\r\n      ) {\r\n        setShowPrompt(true);\r\n        setLastLocation(nextLocation);\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    [confirmedNavigation],\r\n  );\r\n\r\n  const confirmNavigation = useCallback(() => {\r\n    setShowPrompt(false);\r\n    setConfirmedNavigation(true);\r\n  }, []);\r\n\r\n  const hidePrompt = () => {\r\n    setShowPrompt(false);\r\n    setConfirmedNavigation(false);\r\n    setLastLocation(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (confirmedNavigation && lastLocation) {\r\n      navigate(lastLocation.location.pathname);\r\n    }\r\n  }, [confirmedNavigation, lastLocation]);\r\n\r\n  useBlocker(handleBlockedNavigation, when);\r\n\r\n  return [showPrompt, confirmNavigation, cancelNavigation, hidePrompt]\r\n}\r\n","/* eslint-disable */\r\nimport * as React from 'react';\r\nimport { UNSAFE_NavigationContext } from 'react-router-dom';\r\nimport type { History, Blocker, Transition } from 'history';\r\n\r\nexport function useBlocker(blocker: Blocker, when = true): void {\r\n  const navigator = React.useContext(UNSAFE_NavigationContext)\r\n    .navigator as History;\r\n\r\n  React.useEffect(() => {\r\n    if (!when) return;\r\n    const unblock = navigator.block((tx: Transition) => {\r\n      const autoUnblockingTx = {\r\n        ...tx,\r\n        retry() {\r\n          unblock();\r\n          tx.retry();\r\n        },\r\n      };\r\n\r\n      blocker(autoUnblockingTx);\r\n    });\r\n\r\n    return unblock;\r\n  }, [navigator, blocker, when]);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Tabs.module.css';\r\n\r\nfunction TabHeaderComponent(props) {\r\n  const { activeTab, onClick, label, customClassActiveHeader } = props;\r\n  const [className, setClassName] = useState('');\r\n\r\n  const handleOnClick = (labelName) => {\r\n    onClick(labelName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (activeTab === label) {\r\n      setClassName(\r\n        `${Styles.tabListItem} ${Styles.tabListActive} ${customClassActiveHeader}`\r\n      );\r\n    } else {\r\n      setClassName(Styles.tabListItem);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTab]);\r\n\r\n  return (\r\n    <li\r\n      className={`${className} ${Styles.tabHeader}`}\r\n      onClick={() => {\r\n        handleOnClick(label);\r\n      }}\r\n      onKeyDown={() => {\r\n        handleOnClick(label);\r\n      }}\r\n      role=\"presentation\"\r\n    >\r\n      {label}\r\n    </li>\r\n  );\r\n}\r\nTabHeaderComponent.propTypes = {\r\n  activeTab: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  label: PropTypes.string,\r\n};\r\nTabHeaderComponent.defaultProps = {\r\n  activeTab: null,\r\n  label: null,\r\n};\r\nexport default TabHeaderComponent;\r\n","import axios from 'axios';\r\n\r\nconst ChannelService = {\r\n  addChannel(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/AddChannel`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  updateChannel(ID, json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/EditChannel/${ID}`;\r\n    return axios.put(url, json);\r\n  },\r\n\r\n  getChannelGroups(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}ChannelGroup/GetChannelGroupLookup${parameters}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getChannel(ID) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelById/${ID}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  exportChannels(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/Export${parameters}`;\r\n    return axios.get(url, { responseType: 'arraybuffer' });\r\n  },\r\n\r\n  getOrganisations() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/GetAllOrganisations`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getChannels(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelList${parameters}`;\r\n    return axios.get(url);\r\n  },\r\n  getTimezoneLookup() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetTimeZoneLookup`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  exportSampleTemplate() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/SampleDataExport`;\r\n    return axios.get(url, { responseType: 'arraybuffer' });\r\n  },\r\n};\r\n\r\n// const channelService = new ChannelService();\r\nexport default ChannelService;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"marginBottom\":\"ChannelProfile_marginBottom__+haS7\",\"channelHeader\":\"ChannelProfile_channelHeader__3h8ul\",\"channelLabel\":\"ChannelProfile_channelLabel__opvGw\",\"saveButton\":\"ChannelProfile_saveButton__Acm9p\",\"cancelButton\":\"ChannelProfile_cancelButton__roU2-\",\"saveModalButton\":\"ChannelProfile_saveModalButton__hLM42\",\"daySelect\":\"ChannelProfile_daySelect__j9rJw\",\"faCircleNotchSpin\":\"ChannelProfile_faCircleNotchSpin__5XV0n\",\"profileViewFooter\":\"ChannelProfile_profileViewFooter__DUyhx\",\"promptModalBody\":\"ChannelProfile_promptModalBody__LSIDG\",\"promptModalBodyButtons\":\"ChannelProfile_promptModalBodyButtons__kD9o7\",\"activeTabContent\":\"ChannelProfile_activeTabContent__aAb26\",\"divider\":\"ChannelProfile_divider__YUr59\"};","// extracted by mini-css-extract-plugin\nexport default {\"categoryHead\":\"Profile_categoryHead__VB-xV\",\"divRatings\":\"Profile_divRatings__Wyo9v\",\"divGenreRatings\":\"Profile_divGenreRatings__h+oTl\",\"dataLabel\":\"Profile_dataLabel__Cw8-b\",\"inputNumber\":\"Profile_inputNumber__e4fMj\",\"textMore\":\"Profile_textMore__gcZE0\",\"textMoreMid\":\"Profile_textMoreMid__Pnczi\",\"profileBody\":\"Profile_profileBody__-qDt4\",\"divProfile\":\"Profile_divProfile__AATcx\",\"divCertificate\":\"Profile_divCertificate__7SN-t\",\"textMoreCertificate\":\"Profile_textMoreCertificate__0j+rN\",\"formInput\":\"Profile_formInput__--GCr\",\"wrapper\":\"Profile_wrapper__NXQdk\",\"wrapperContent\":\"Profile_wrapperContent__SmkHZ\",\"form\":\"Profile_form__Gomco\",\"header\":\"Profile_header__qwWCD\",\"loadProfileText\":\"Profile_loadProfileText__gaVib\",\"profileView\":\"Profile_profileView__uppAU\",\"modal\":\"Profile_modal__KRTz8\",\"searchChannelInput\":\"Profile_searchChannelInput__7kRNy\",\"searchChannelIcon\":\"Profile_searchChannelIcon__3rrDG\",\"clearSearchChannelIcon\":\"Profile_clearSearchChannelIcon__LM9yc\",\"clearSearchChannelIconWrapper\":\"Profile_clearSearchChannelIconWrapper__k3Cur\",\"searchChannelIconWrapper\":\"Profile_searchChannelIconWrapper__+IdLL\",\"channelList\":\"Profile_channelList__NIuDj\",\"modalActionButtons\":\"Profile_modalActionButtons__Ymv7k\",\"channelListItem\":\"Profile_channelListItem__rdQlp\",\"selectDaysModalBody\":\"Profile_selectDaysModalBody__Wht6R\",\"checkBox\":\"Profile_checkBox__Ttaz2\",\"activeCheckBox\":\"Profile_activeCheckBox__lI+8k\",\"checkIcon\":\"Profile_checkIcon__ScM5m\",\"checkIcon2\":\"Profile_checkIcon2__ByU0Q\",\"dayName\":\"Profile_dayName__kT6Dq\",\"dayListItem\":\"Profile_dayListItem__c7zLz\",\"channelListItemLabel\":\"Profile_channelListItemLabel__5P3JF\",\"daySection\":\"Profile_daySection__QoQPw\",\"startTimeSection\":\"Profile_startTimeSection__LGxfu\",\"endTimeSection\":\"Profile_endTimeSection__pWBns\",\"daySelect\":\"Profile_daySelect__urIUN\",\"startTimeSelect\":\"Profile_startTimeSelect__w6KT4\",\"endTimeSwitch\":\"Profile_endTimeSwitch__Yhhtb\",\"endTimeSelect\":\"Profile_endTimeSelect__uKAnb\",\"profileSelect\":\"Profile_profileSelect__uI2Is\",\"headerButtons\":\"Profile_headerButtons__s2YuA\",\"daySectionText\":\"Profile_daySectionText__DBAD6\",\"copyIcon\":\"Profile_copyIcon__PrAvo\",\"formContent\":\"Profile_formContent__dxrhm\",\"formFooter\":\"Profile_formFooter__Lpawl\",\"headerContent\":\"Profile_headerContent__ybDBR\",\"column\":\"Profile_column__ZFMY+\",\"loadProfileButton\":\"Profile_loadProfileButton__sGzji\",\"applyToOtherChannelsButton\":\"Profile_applyToOtherChannelsButton__wW7FL\",\"checkbox\":\"Profile_checkbox__+rxoL\",\"activeCheckbox\":\"Profile_activeCheckbox__-t7VY\",\"disabledCheckbox\":\"Profile_disabledCheckbox__FQyhG\",\"disabledCheckboxText\":\"Profile_disabledCheckboxText__VrCPK\",\"selectDaysModal\":\"Profile_selectDaysModal__+YMWM\",\"applySelectedDayConfirmationModal\":\"Profile_applySelectedDayConfirmationModal__oNX21\",\"appliedProfileValuesMessage\":\"Profile_appliedProfileValuesMessage__T3w-5\",\"startTimeLabel\":\"Profile_startTimeLabel__lBHS1\",\"applyProfileModalBody\":\"Profile_applyProfileModalBody__6br2k\",\"selectedDayConfirmationModal\":\"Profile_selectedDayConfirmationModal__cDom6\",\"proceedConfirmationText\":\"Profile_proceedConfirmationText__a58bR\",\"saveModalButton\":\"Profile_saveModalButton__t-czE\",\"cancelButton\":\"Profile_cancelButton__p4ZI4\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ProfileTooltipComponent({ scheduleList }) {\r\n  return (\r\n    <div>\r\n      {scheduleList\r\n        && scheduleList.map((value) => (\r\n          <p key={value.id} style={{ margin: '0' }}>\r\n            {value}\r\n          </p>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\nProfileTooltipComponent.propTypes = {\r\n  scheduleList: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\nProfileTooltipComponent.defaultProps = {\r\n  scheduleList: null,\r\n};\r\nexport default ProfileTooltipComponent;\r\n","class ProfileForms {\r\n  genreFields = [\r\n    { label: 'Adventure', type: 'number' },\r\n    { label: 'Animation', type: 'number' },\r\n    { label: 'Action', type: 'number' },\r\n    { label: 'Comedy', type: 'number' },\r\n    { label: 'Drama', type: 'number' },\r\n    { label: 'Factual', type: 'number' },\r\n    { label: 'Fantasy', type: 'number' },\r\n    { label: 'Family', type: 'number' },\r\n    { label: 'Horror', type: 'number' },\r\n    // { label: 'Reviews', type: 'number' },\r\n    { label: 'Romance', type: 'number' },\r\n    { label: 'Sci-Fi', type: 'number' },\r\n    { label: 'Thriller', type: 'number' },\r\n    { label: 'Undefined', type: 'number' },\r\n    { label: 'Western', type: 'number' },\r\n  ];\r\n\r\n  certificationFields = [\r\n    { label: 'Violence', type: 'number' },\r\n    { label: 'Sex', type: 'number' },\r\n    { label: 'Mature Theme', type: 'number' },\r\n    { label: 'Flashing Images', type: 'number' },\r\n  ];\r\n\r\n  ageCertificationFields = [\r\n    { label: 'Cinema U', type: 'number' },\r\n    { label: 'Cinema PG', type: 'number' },\r\n    { label: 'Cinema 12', type: 'number' },\r\n    { label: 'Cinema 15', type: 'number' },\r\n    { label: 'Cinema 18', type: 'number' },\r\n    { label: 'Cinema 18+Post 2100', type: 'number' },\r\n    // { label: 'SAT', type: 'number' },\r\n  ];\r\n\r\n  gradeFields = [\r\n    { label: 'A', type: 'number' },\r\n    { label: 'B', type: 'number' },\r\n    { label: 'C', type: 'number' },\r\n    { label: 'D', type: 'number' },\r\n    { label: 'N', type: 'number' },\r\n    { label: 'L', type: 'number' },\r\n    { label: 'LA', type: 'number' },\r\n    { label: 'LB', type: 'number' },\r\n    { label: 'LC', type: 'number' },\r\n    { label: 'L1', type: 'number' },\r\n    { label: 'L1A', type: 'number' },\r\n    { label: 'L1B', type: 'number' },\r\n    { label: 'L1C', type: 'number' },\r\n    { label: 'LM', type: 'number' },\r\n    { label: '3D', type: 'number' },\r\n    { label: 'SB', type: 'number' },\r\n    { label: 'OA', type: 'number' },\r\n    { label: 'OB', type: 'number' },\r\n  ];\r\n\r\n  dayList = [\r\n    {\r\n      id: '1',\r\n      name: 'Monday',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Tuesday',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Wednesday',\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Thursday',\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Friday',\r\n    },\r\n    {\r\n      id: '6',\r\n      name: 'Saturday',\r\n    },\r\n    {\r\n      id: '7',\r\n      name: 'Sunday',\r\n    },\r\n  ];\r\n\r\n  scheduleList = [\r\n    '00:00 - 00:05 - 65%',\r\n    '00:05 - 00:10 - 35%',\r\n    '00:10 - 00:15 - 55%',\r\n    '00:15 - 00:20 - 65%',\r\n    '00:20 - 00:25 - 75%',\r\n  ];\r\n\r\n  switchOptions = ['Yes', 'No'];\r\n  timeOptions = { start: 'start', end: 'end' };\r\n}\r\n\r\nexport default new ProfileForms();\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 27,\n    viewBox: \"0 0 24 27\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.33333 5.49984V1.49984C5.33333 1.14622 5.47381 0.807077 5.72386 0.557028C5.97391 0.30698 6.31305 0.166504 6.66667 0.166504H22.6667C23.0203 0.166504 23.3594 0.30698 23.6095 0.557028C23.8595 0.807077 24 1.14622 24 1.49984V20.1665C24 20.5201 23.8595 20.8593 23.6095 21.1093C23.3594 21.3594 23.0203 21.4998 22.6667 21.4998H18.6667V25.4998C18.6667 26.2358 18.0667 26.8332 17.324 26.8332H1.34267C1.16684 26.8342 0.99253 26.8005 0.829763 26.734C0.666997 26.6675 0.518978 26.5695 0.394211 26.4456C0.269445 26.3217 0.170391 26.1743 0.102739 26.012C0.0350875 25.8497 0.000172499 25.6757 0 25.4998L0.00400003 6.83317C0.00400003 6.09717 0.604 5.49984 1.34667 5.49984H5.33333ZM2.67067 8.1665L2.66667 24.1665H16V8.1665H2.67067ZM8 5.49984H18.6667V18.8332H21.3333V2.83317H8V5.49984Z\",\n    fill: \"#008662\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/Copy.8d29ec2bfe0671bd496cd4a610baa0a0.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheck2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 11,\n    viewBox: \"0 0 15 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.33361 8.64325L12.9936 0.982422L14.1728 2.16076L5.33361 10.9999L0.0302734 5.69659L1.20861 4.51826L5.33361 8.64325Z\",\n    fill: \"#FAFAFA\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck2);\nexport default __webpack_public_path__ + \"static/media/Check-2.c0b4551d0b0c4cfc65b02ec7e0e9b76b.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"defaultButton\":\"styles_defaultButton__qbm84\",\"button\":\"styles_button__eNX4-\",\"buttonSm\":\"styles_buttonSm__zeFeN\",\"buttonMd\":\"styles_buttonMd__0Fwca\",\"buttonLg\":\"styles_buttonLg__GICsh\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction ButtonComponent({\r\n  text, size, defaultBtn, disabled, onClick, style,\r\n}) {\r\n  const largeButton = size === 'lg' && styles.buttonLg;\r\n  const mediumButton = size === 'md' && styles.buttonMd;\r\n  const smallButton = size === 'sm' && styles.buttonSm;\r\n\r\n  return (\r\n    <button\r\n      className={`${\r\n        defaultBtn ? styles.defaultButton : styles.button\r\n      } ${largeButton} ${mediumButton} ${smallButton}`}\r\n      style={{ ...style }}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      type=\"button\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nButtonComponent.propTypes = {\r\n  text: PropTypes.string,\r\n  size: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  style: PropTypes.shape(),\r\n  defaultBtn: PropTypes.bool,\r\n};\r\n\r\nButtonComponent.defaultProps = {\r\n  text: '',\r\n  size: 'md',\r\n  disabled: false,\r\n  onClick: null,\r\n  style: {},\r\n  defaultBtn: false,\r\n};\r\n\r\nexport default ButtonComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"probabilityItem\":\"ProfileForm_probabilityItem__KnS+F\",\"categoryItem\":\"ProfileForm_categoryItem__0sJbM\",\"trashIcon\":\"ProfileForm_trashIcon__NUuEG\"};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonComponent from '../../../../shared/elements/button/button.component';\r\nimport InputComponent from '../../../../shared/elements/input/input.component';\r\n\r\nimport styles from './ProfileForm.module.css';\r\nimport trashIcon from '../../../../assets/icons/Trash-Can-sm.svg';\r\n\r\nfunction ProfileFormComponent({\r\n  preDefinedCategories,\r\n  columnPosition,\r\n  onFormChange,\r\n}) {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const onClickAddCategory = () => {\r\n    setCategories([\r\n      ...categories,\r\n      {\r\n        orderNumber: categories.length + 1,\r\n        name: '',\r\n        probabilities: [],\r\n        columnPosition,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const onClickAddProbability = (categoryId) => {\r\n    const selectedCategory = categories.find(\r\n      (category) => category.orderNumber === categoryId,\r\n    );\r\n    const filteredCategories = categories.filter(\r\n      (category) => category.orderNumber !== categoryId,\r\n    );\r\n\r\n    selectedCategory.probabilities.push({\r\n      orderNumber: selectedCategory.probabilities.length + 1,\r\n      name: '',\r\n    });\r\n\r\n    setCategories([...filteredCategories, selectedCategory]);\r\n  };\r\n\r\n  const onClickRemoveCategory = (categoryId) => {\r\n    const filteredCategories = categories.filter(\r\n      (category) => category.orderNumber !== categoryId,\r\n    );\r\n\r\n    const mappedCategories = filteredCategories.map((category) => (categoryId < category.orderNumber\r\n      ? {\r\n        ...category,\r\n        orderNumber: category.orderNumber - 1,\r\n      }\r\n      : category));\r\n\r\n    setCategories(mappedCategories);\r\n  };\r\n\r\n  const onClickRemoveProbability = (categoryId, probabilityId) => {\r\n    const filteredCategories = categories.filter(\r\n      (category) => category.orderNumber !== categoryId,\r\n    );\r\n\r\n    const selectedCategory = categories.find(\r\n      (o) => o.orderNumber === categoryId,\r\n    );\r\n    const filtered = selectedCategory.probabilities.filter(\r\n      (probability) => probability.orderNumber !== probabilityId,\r\n    );\r\n    const mapped = filtered.map((probablity) => (probabilityId < probablity.orderNumber\r\n      ? {\r\n        ...probablity,\r\n        orderNumber: probablity.orderNumber - 1,\r\n      }\r\n      : probablity));\r\n\r\n    setCategories([\r\n      ...filteredCategories,\r\n      { ...selectedCategory, probabilities: mapped },\r\n    ]);\r\n  };\r\n\r\n  const onChangeSetCategorysName = (e) => {\r\n    const filteredCategories = categories.filter(\r\n      (category) => category.orderNumber !== parseInt(e.target.name, 10),\r\n    );\r\n\r\n    const selectedCategory = categories.find(\r\n      (o) => o.orderNumber === parseInt(e.target.name, 10),\r\n    );\r\n    selectedCategory.name = e.target.value;\r\n\r\n    setCategories([...filteredCategories, selectedCategory]);\r\n  };\r\n\r\n  const onChangeSetProbabilitysName = (e, categoryId) => {\r\n    const filteredCategories = categories.filter(\r\n      (category) => category.orderNumber !== categoryId,\r\n    );\r\n    const selectedCategory = categories.find(\r\n      (o) => o.orderNumber === categoryId,\r\n    );\r\n\r\n    const filtered = selectedCategory.probabilities.filter(\r\n      (probability) => probability.orderNumber !== parseInt(e.target.name, 10),\r\n    );\r\n    const selectedProbability = selectedCategory.probabilities.find(\r\n      (probability) => probability.orderNumber === parseInt(e.target.name, 10),\r\n    );\r\n    selectedProbability.name = e.target.value;\r\n\r\n    setCategories([\r\n      ...filteredCategories,\r\n      {\r\n        ...selectedCategory,\r\n        probabilities: [...filtered, selectedProbability],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (categories !== null && categories.length > 0) onFormChange(categories);\r\n    else onFormChange(columnPosition);\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    if (preDefinedCategories) {\r\n      switch (columnPosition) {\r\n        case 1:\r\n          setCategories(preDefinedCategories);\r\n          break;\r\n        case 2:\r\n          setTimeout(() => {\r\n            setCategories(preDefinedCategories);\r\n          }, 1);\r\n          break;\r\n        case 3:\r\n          setTimeout(() => {\r\n            setCategories(preDefinedCategories);\r\n          }, 2);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [preDefinedCategories]);\r\n\r\n  return (\r\n    <>\r\n      {categories\r\n        .sort((a, b) => a.orderNumber - b.orderNumber)\r\n        .map((category) => (\r\n          <div key={category.orderNumber}>\r\n            <div className={styles.categoryItem}>\r\n              <img\r\n                className={styles.trashIcon}\r\n                src={trashIcon}\r\n                alt=\"\"\r\n                onClick={() => onClickRemoveCategory(category.orderNumber)}\r\n                onKeyDown={() => onClickRemoveCategory(category.orderNumber)}\r\n                role=\"presentation\"\r\n              />\r\n              <InputComponent\r\n                value={category.name}\r\n                name={category.orderNumber}\r\n                maxLength=\"100\"\r\n                onChange={onChangeSetCategorysName}\r\n              />\r\n            </div>\r\n            {category.probabilities\r\n              .sort((a, b) => a.orderNumber - b.orderNumber)\r\n              .map((probability) => (\r\n                <div key={probability.orderNumber}>\r\n                  <div className={styles.probabilityItem}>\r\n                    <img\r\n                      className={styles.trashIcon}\r\n                      src={trashIcon}\r\n                      alt=\"\"\r\n                      onClick={() => onClickRemoveProbability(\r\n                        category.orderNumber,\r\n                        probability.orderNumber,\r\n                      )}\r\n                      onKeyDown={() => onClickRemoveProbability(\r\n                        category.orderNumber,\r\n                        probability.orderNumber,\r\n                      )}\r\n                      role=\"presentation\"\r\n                    />\r\n                    <InputComponent\r\n                      value={probability.name}\r\n                      name={probability.orderNumber}\r\n                      maxLength=\"100\"\r\n                      onChange={(e) => onChangeSetProbabilitysName(e, category.orderNumber)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            <ButtonComponent\r\n              text=\"Add Profile\"\r\n              onClick={() => onClickAddProbability(category.orderNumber)}\r\n              style={{ marginLeft: '33px', marginBottom: '5px' }}\r\n            />\r\n          </div>\r\n        ))}\r\n      <ButtonComponent text=\"Add Category\" onClick={onClickAddCategory} />\r\n    </>\r\n  );\r\n}\r\nProfileFormComponent.propTypes = {\r\n  preDefinedCategories: PropTypes.arrayOf(PropTypes.shape),\r\n  columnPosition: PropTypes.number,\r\n  onFormChange: PropTypes.func.isRequired,\r\n};\r\nProfileFormComponent.defaultProps = {\r\n  preDefinedCategories: null,\r\n  columnPosition: null,\r\n};\r\nexport default ProfileFormComponent;\r\n","import axios from 'axios';\r\n\r\nconst ChannelProfileService = {\r\n  getChannels() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelLookup`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getChannelProfiles(channelId, day, start, end) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelProfile?channelId=${channelId}&weekDay=${day}&startTime=${start}&endTime=${end}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getBusinessRules(channelId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetBusinessRules/${channelId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getChannelScoring(channelId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelScoring/${channelId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  saveChannelProfile(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/SaveChannelProfile`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  saveBusinessRules(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/SaveBusinessRules`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  saveChannelScoring(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/SaveChannelScoring`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  getChannelProfileSession() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelProfileSession`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  saveChannelProfileSession(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/AddChannelProfileSession${json}`;\r\n    return axios.post(url);\r\n  },\r\n\r\n  saveChannelProfileProbabilities(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/SaveChannelProfileProbabilities`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  getChannelProfileProbabilities(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelProfileProbabilities${parameters}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getChannelLookupWithPredefinedProfile(channelId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelLookupWithPredefinedProfiles?channelID=${channelId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  applyProfileToSelectedDays(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/ApplyProfileValues`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  uploadImportedFile(channelId, file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/ImportCustomBusinessRules?channelId=${channelId}`;\r\n    return axios.post(url, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n\r\n  exportCustomBusinessRules(channelId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/ExportCustomBusinessRules?channelId=${channelId}`;\r\n    return axios.get(url, { responseType: 'arraybuffer' });\r\n  },\r\n\r\n  getAssetListAttributesLookup(channelId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/AttributesToCheckLookUp?id=${channelId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  saveChannelProfileValues(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/saveChannelProfileValues`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  getChannelProfileValues(channelId, day, profileAttributeID) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelProfileValue?channelId=${channelId}&weekDay=${day}&profileAttributeID=${profileAttributeID}`;\r\n    return axios.get(url);\r\n  },\r\n};\r\n\r\nexport default ChannelProfileService;\r\n","import axios from 'axios';\r\n\r\nconst AddProfileComponentService = {\r\n  getChannelList(channelId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}channel/selectChannel?channelId=${channelId}`;\r\n\r\n    return axios.get(url);\r\n  },\r\n\r\n  applyProfilePreCheck(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}channel/applyProfilePreCheck`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  applyProfile(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}channel/applyProfile`;\r\n    return axios.post(url, json);\r\n  },\r\n};\r\n\r\nexport default AddProfileComponentService;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal } from 'react-bootstrap';\r\nimport ButtonComponent from '../../../../shared/elements/button/button.component';\r\nimport styles from '../Profile.module.css';\r\nimport AddProfileComponentService from './AddProfileComponentService';\r\nimport { danger } from '../../../../shared/elements/notification/NotifyComponent';\r\n\r\nfunction SelectChannelsModalComponent({\r\n  show,\r\n  onHide,\r\n  onShow,\r\n  channelId,\r\n  isDirtyForm,\r\n}) {\r\n  const [channels, setChannels] = useState([]);\r\n  const [channelsHistory, setChannelsHistory] = useState([]);\r\n  const [selectedChannels, setSelectedChannels] = useState([]);\r\n  const [searchIsActive, setSearchIsActive] = useState(false);\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const [showSuccessfullyAppliedModal, setSuccessfullyAppliedModal] = useState(\r\n    false\r\n  );\r\n  const [showUnsavedChangesModal, setShowUnsavedChangesModal] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const getChannelList = (id) => {\r\n    AddProfileComponentService.getChannelList(id).then((response) => {\r\n      setChannels(response.data);\r\n      setChannelsHistory(response.data);\r\n    });\r\n  };\r\n\r\n  const onSelectSetSelectedChannels = (id) => {\r\n    if (selectedChannels.includes(id)) {\r\n      setSelectedChannels(selectedChannels.filter((channel) => channel !== id));\r\n    } else {\r\n      setSelectedChannels([...selectedChannels, id]);\r\n    }\r\n  };\r\n\r\n  const onChangeSetSearchKey = (e) => {\r\n    setSearchKey(e.target.value);\r\n  };\r\n\r\n  const onSearch = () => {\r\n    setChannels(\r\n      // eslint-disable-next-line max-len\r\n      channelsHistory.filter((channel) =>\r\n        channel.channelName.toLowerCase().includes(searchKey.toLowerCase())\r\n      )\r\n    );\r\n    setSearchIsActive(true);\r\n  };\r\n\r\n  const onClearSearch = () => {\r\n    setChannels(channelsHistory);\r\n    setSearchKey('');\r\n    setSearchIsActive(false);\r\n  };\r\n\r\n  const onApplyToOtherChannels = () => {\r\n    const parameters = {\r\n      channelId,\r\n      channelIds: selectedChannels,\r\n    };\r\n    setIsSaving(true);\r\n    AddProfileComponentService.applyProfile(parameters).then((response) => {\r\n      setSuccessMessage(\r\n        `Profile successfully applied to ${response.data} channel(s).`\r\n      );\r\n\r\n      setShowConfirmationModal(false);\r\n      setIsSaving(false);\r\n      setTimeout(() => {\r\n        setSuccessfullyAppliedModal(true);\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  const onApplyPreCheck = () => {\r\n    const parameters = {\r\n      channelIds: selectedChannels,\r\n    };\r\n    AddProfileComponentService.applyProfilePreCheck(parameters)\r\n      .then((response) => {\r\n        onHide();\r\n\r\n        if (response.data) {\r\n          setTimeout(() => {\r\n            setShowConfirmationModal(true);\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            if (isDirtyForm) {\r\n              setShowUnsavedChangesModal(true);\r\n            } else {\r\n              onApplyToOtherChannels();\r\n            }\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        danger(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const onProceedApplyToOtherChannels = () => {\r\n    onApplyToOtherChannels();\r\n  };\r\n\r\n  const onTriggerSearch = (e) => {\r\n    if (e.key === 'Enter' && e.target.value.length > 0) {\r\n      onSearch();\r\n    }\r\n  };\r\n\r\n  const hideConfirmationModal = () => {\r\n    setShowConfirmationModal(false);\r\n    setShowUnsavedChangesModal(false);\r\n\r\n    setTimeout(() => {\r\n      onShow();\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (channelId !== null) getChannelList(channelId);\r\n  }, [channelId]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        contentClassName={styles.modal}\r\n        show={show}\r\n        onHide={onHide}\r\n        centered\r\n      >\r\n        <div>\r\n          <span>Select channel(s):</span>\r\n\r\n          <div className=\"d-flex\" style={{ width: '100%', marginTop: '15px' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchKey}\r\n              className={styles.searchChannelInput}\r\n              placeholder=\"Search channel\"\r\n              onChange={onChangeSetSearchKey}\r\n              onKeyDown={onTriggerSearch}\r\n            />\r\n            {searchIsActive && (\r\n              <div className={styles.clearSearchChannelIconWrapper}>\r\n                <span\r\n                  className={styles.clearSearchChannelIcon}\r\n                  onClick={onClearSearch}\r\n                  onKeyDown={onClearSearch}\r\n                  role=\"presentation\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className={styles.searchChannelIconWrapper}>\r\n              <span\r\n                className={styles.searchChannelIcon}\r\n                onClick={onSearch}\r\n                onKeyDown={onSearch}\r\n                role=\"presentation\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={styles.channelList}\r\n            style={{\r\n              textAlign: channels.length === 0 && 'center',\r\n              marginTop: channels.length === 0 && !searchIsActive && '0px',\r\n            }}\r\n          >\r\n            {channels.length > 0 ? (\r\n              channels.map((channel) => (\r\n                <div\r\n                  className={styles.channelListItem}\r\n                  key={channel.channelId}\r\n                  onClick={() => onSelectSetSelectedChannels(channel.channelId)}\r\n                  onKeyDown={() =>\r\n                    onSelectSetSelectedChannels(channel.channelId)\r\n                  }\r\n                  role=\"presentation\"\r\n                >\r\n                  <div\r\n                    className={\r\n                      selectedChannels.includes(channel.channelId)\r\n                        ? styles.activeCheckBox\r\n                        : styles.checkBox\r\n                    }\r\n                  >\r\n                    <span className={styles.checkIcon2} />\r\n                  </div>\r\n                  <div className={styles.channelListItemLabel}>\r\n                    {channel.channelName}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div>No channels found</div>\r\n            )}\r\n          </div>\r\n\r\n          <div className={styles.modalActionButtons}>\r\n            <ButtonComponent text=\"Close\" defaultBtn onClick={onHide} />\r\n            <ButtonComponent\r\n              text=\"Apply\"\r\n              onClick={onApplyPreCheck}\r\n              disabled={selectedChannels.length === 0}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal show={showSuccessfullyAppliedModal} centered>\r\n        <div\r\n          style={{\r\n            padding: '30px 50px',\r\n            textAlign: 'center',\r\n            fontSize: '18px',\r\n          }}\r\n        >\r\n          <p style={{ fontWeight: '200' }}>{successMessage}</p>\r\n          <div style={{ marginTop: '30px' }}>\r\n            <ButtonComponent\r\n              text=\"Close\"\r\n              onClick={() => setSuccessfullyAppliedModal(false)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal show={showUnsavedChangesModal} centered>\r\n        <div\r\n          style={{\r\n            padding: '30px 50px',\r\n            textAlign: 'center',\r\n            fontSize: '18px',\r\n          }}\r\n        >\r\n          <p style={{ fontWeight: '200' }}>\r\n            Unsaved changes will not be applied to the selected channels.\r\n          </p>\r\n          <p>Are you sure you want to proceed?</p>\r\n          <div style={{ marginTop: '30px' }}>\r\n            <ButtonComponent\r\n              text=\"Cancel\"\r\n              defaultBtn\r\n              onClick={hideConfirmationModal}\r\n            />\r\n            <ButtonComponent\r\n              text=\"Proceed\"\r\n              onClick={onProceedApplyToOtherChannels}\r\n              disabled={isSaving}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal show={showConfirmationModal} centered>\r\n        <div\r\n          style={{\r\n            padding: '30px 50px',\r\n            textAlign: 'center',\r\n            fontSize: '18px',\r\n          }}\r\n        >\r\n          {isDirtyForm && (\r\n            <p style={{ fontWeight: '200' }}>\r\n              Unsaved changes will not be applied to the selected channels.\r\n            </p>\r\n          )}\r\n          <p style={{ fontWeight: '200' }}>\r\n            Some of the selected channels already have existing profiles\r\n            defined. Updating their profiles will result in losing saved values\r\n            from the previously saved profiles.\r\n          </p>\r\n          <p>Are you sure you want to proceed?</p>\r\n          <div style={{ marginTop: '30px' }}>\r\n            <ButtonComponent\r\n              text=\"Cancel\"\r\n              defaultBtn\r\n              onClick={hideConfirmationModal}\r\n            />\r\n            <ButtonComponent\r\n              text=\"Proceed\"\r\n              onClick={onProceedApplyToOtherChannels}\r\n              disabled={isSaving}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nSelectChannelsModalComponent.propTypes = {\r\n  show: PropTypes.bool,\r\n  onHide: PropTypes.func.isRequired,\r\n  channelId: PropTypes.number,\r\n  onShow: PropTypes.func.isRequired,\r\n  isDirtyForm: PropTypes.bool,\r\n};\r\nSelectChannelsModalComponent.defaultProps = {\r\n  show: false,\r\n  channelId: null,\r\n  isDirtyForm: false,\r\n};\r\nexport default SelectChannelsModalComponent;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from '../Profile.module.css';\r\n\r\nimport ButtonComponent from '../../../../shared/elements/button/button.component';\r\nimport ProfileFormComponent from '../profile-form/ProfileFormComponent';\r\nimport SelectComponent from '../../../../shared/elements/select/select.component';\r\nimport ChannelProfileService from '../../ChannelProfileService';\r\nimport SelectChannelsModalComponent from './SelectChannelsModalComponent';\r\n\r\nconst AddProfileComponent = forwardRef(\r\n  (\r\n    {\r\n      preDefinedCategories,\r\n      onClickSaveProbabilities,\r\n      onClickCloseForm,\r\n      getChannelProbabilities,\r\n      channelId,\r\n      formType,\r\n      setDirtyForm,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [parameters, setParameters] = useState([]);\r\n    const [\r\n      channelsWithPredefinedProfile,\r\n      setChannelsWithPredefinedProfile,\r\n    ] = useState();\r\n    const [showSelectChannelsModal, setShowSelectChannelsModal] = useState(\r\n      false\r\n    );\r\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n    const [saveIsDisabled, setSaveIsDisabled] = useState(false);\r\n    const [selectedChannelName, setSelectedChannelName] = useState(\r\n      'Please select a channel'\r\n    );\r\n\r\n    const [columnOne, setColumnOne] = useState();\r\n    const [columnTwo, setColumnTwo] = useState();\r\n    const [columnThree, setColumnThree] = useState();\r\n    const [isSaving, setIsSaving] = useState(false);\r\n    const [modalDirtyShow, setModalDirtyShow] = useState(false);\r\n    const [selectedChannel, setSelectedChannel] = useState({});\r\n    const [isDirty, setIsDirty] = useState(false);\r\n    const [isClose, setIsClose] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      hideConfirmationModal() {\r\n        setShowConfirmationModal(false);\r\n      },\r\n      saveChannelProfileProbabilities() {\r\n        onClickSaveProbabilities(parameters, false);\r\n      },\r\n    }));\r\n\r\n    const compareArrays = (a, b) => {\r\n      const condition = JSON.stringify(a) !== JSON.stringify(b);\r\n      if (condition || isDirty) {\r\n        setDirtyForm('Add/Insert Channel Profile');\r\n        return false;\r\n      }\r\n      setDirtyForm('');\r\n      return true;\r\n    };\r\n\r\n    const validateForm = () => {\r\n      const isFormValid = parameters.every(\r\n        (o) =>\r\n          o.name.length !== 0 &&\r\n          o.probabilities.length !== 0 &&\r\n          o.probabilities.every((p) => p.name.length !== 0)\r\n      );\r\n\r\n      if (!isFormValid) {\r\n        setSaveIsDisabled(true);\r\n      } else {\r\n        setSaveIsDisabled(false);\r\n      }\r\n    };\r\n\r\n    const handleGetChannelLookupWithPredefinedProfile = () => {\r\n      if (channelId) {\r\n        ChannelProfileService.getChannelLookupWithPredefinedProfile(\r\n          channelId\r\n        ).then((response) => {\r\n          setChannelsWithPredefinedProfile(\r\n            response.data.map((channel) => ({\r\n              id: channel.channelId,\r\n              name: channel.channelName,\r\n            }))\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleGetProfileProbabilities = (channel) => {\r\n      const state = compareArrays(\r\n        preDefinedCategories,\r\n        parameters.sort((a, b) => a.categoryID - b.categoryID)\r\n      );\r\n      if (!state) {\r\n        setSelectedChannel(channel);\r\n        setModalDirtyShow(true);\r\n      } else {\r\n        getChannelProbabilities(channel.id);\r\n        setSelectedChannelName(channel.name);\r\n      }\r\n    };\r\n\r\n    const onFormChangeSetParameters = (data) => {\r\n      if (isNaN(data)) {\r\n        const removedDuplicateData = parameters.filter((value) =>\r\n          data.some(\r\n            (o) =>\r\n              o.columnPosition !== value.columnPosition ||\r\n              (o.columnPosition !== value.columnPosition &&\r\n                o.orderNumber !== value.orderNumber)\r\n          )\r\n        );\r\n\r\n        setParameters([...removedDuplicateData, ...data]);\r\n      } else {\r\n        const columnPosition = data;\r\n        const removedDuplicateData = parameters.filter(\r\n          (value) => value.columnPosition !== columnPosition\r\n        );\r\n\r\n        setParameters([...removedDuplicateData]);\r\n      }\r\n    };\r\n\r\n    const openSelectChannelsModal = () => {\r\n      setShowSelectChannelsModal(true);\r\n    };\r\n\r\n    const onHideSelectChannelsModal = () => {\r\n      setShowSelectChannelsModal(false);\r\n    };\r\n\r\n    const handleOnClose = () => {\r\n      const state = compareArrays(preDefinedCategories, parameters);\r\n      if (isDirty) {\r\n        setIsClose(true);\r\n        setModalDirtyShow(true);\r\n      } else {\r\n        if (!state) setDirtyForm('Close Manage Profile');\r\n        onClickCloseForm(!state);\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      handleGetChannelLookupWithPredefinedProfile();\r\n      /* eslint-disable react-hooks/exhaustive-deps */\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      validateForm();\r\n\r\n      compareArrays(\r\n        preDefinedCategories,\r\n        parameters.sort((a, b) => a.categoryID - b.categoryID)\r\n      );\r\n      /* eslint-disable react-hooks/exhaustive-deps */\r\n    }, [parameters]);\r\n\r\n    useEffect(() => {\r\n      const deepClonedDreDefinedCategories = JSON.parse(\r\n        JSON.stringify(preDefinedCategories)\r\n      );\r\n      const columnOneData = deepClonedDreDefinedCategories?.filter(\r\n        (category) => category.columnPosition === 1\r\n      );\r\n\r\n      const columnTwoData = deepClonedDreDefinedCategories?.filter(\r\n        (category) => category.columnPosition === 2\r\n      );\r\n\r\n      const columnThreeData = deepClonedDreDefinedCategories?.filter(\r\n        (category) => category.columnPosition === 3\r\n      );\r\n\r\n      setColumnOne(columnOneData);\r\n      setColumnTwo(columnTwoData);\r\n      setColumnThree(columnThreeData);\r\n      setParameters(preDefinedCategories);\r\n      /* eslint-disable react-hooks/exhaustive-deps */\r\n    }, [preDefinedCategories]);\r\n\r\n    return (\r\n      <div className={styles.form}>\r\n        <div className={styles.header}>\r\n          <div className={styles.headerContent}>\r\n            <div className={styles.loadProfileButton}>\r\n              <div style={{ whiteSpace: 'nowrap' }}>\r\n                <span className={styles.loadProfileText}>Load profile:</span>\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                <SelectComponent\r\n                  text={selectedChannelName}\r\n                  list={channelsWithPredefinedProfile}\r\n                  buttonStyle={{ padding: '9px 15px', height: '36px' }}\r\n                  onSelect={handleGetProfileProbabilities}\r\n                  withSearch\r\n                  width=\"100%\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.applyToOtherChannelsButton}>\r\n              <ButtonComponent\r\n                text=\"Apply profile to other channels\"\r\n                onClick={openSelectChannelsModal}\r\n                style={{ width: '100%' }}\r\n                disabled={\r\n                  preDefinedCategories.length === 0 ||\r\n                  (channelsWithPredefinedProfile &&\r\n                    channelsWithPredefinedProfile.length === 0)\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.formContent}>\r\n          <div className={styles.column}>\r\n            <ProfileFormComponent\r\n              columnPosition={1}\r\n              onFormChange={onFormChangeSetParameters}\r\n              preDefinedCategories={columnOne}\r\n            />\r\n          </div>\r\n          <div className={styles.column}>\r\n            <ProfileFormComponent\r\n              columnPosition={2}\r\n              onFormChange={onFormChangeSetParameters}\r\n              preDefinedCategories={columnTwo}\r\n            />\r\n          </div>\r\n          <div className={styles.column}>\r\n            <ProfileFormComponent\r\n              columnPosition={3}\r\n              onFormChange={onFormChangeSetParameters}\r\n              preDefinedCategories={columnThree}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.formFooter}>\r\n          <ButtonComponent text=\"Close\" defaultBtn onClick={handleOnClose} />\r\n          <ButtonComponent\r\n            text={formType === 'Create' ? 'Save' : 'Update'}\r\n            disabled={saveIsDisabled}\r\n            onClick={() =>\r\n              formType === 'Create'\r\n                ? onClickSaveProbabilities(parameters)\r\n                : setShowConfirmationModal(true)\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <SelectChannelsModalComponent\r\n          channelId={channelId}\r\n          show={showSelectChannelsModal}\r\n          onHide={onHideSelectChannelsModal}\r\n          onShow={openSelectChannelsModal}\r\n          isDirtyForm={!compareArrays(preDefinedCategories, parameters)}\r\n        />\r\n\r\n        <Modal\r\n          show={showConfirmationModal}\r\n          onHide={() => setShowConfirmationModal(false)}\r\n          centered\r\n        >\r\n          <div\r\n            style={{\r\n              padding: '30px 35px',\r\n              textAlign: 'center',\r\n              fontSize: '18px',\r\n            }}\r\n          >\r\n            <p style={{ fontWeight: '200', marginBottom: '20px' }}>\r\n              Updating this channel&apos;s profile may result\r\n              <br />\r\n              in losing values from the previously saved profiles.\r\n            </p>\r\n\r\n            <p>Are you sure you want to proceed?</p>\r\n\r\n            <div style={{ marginTop: '30px' }}>\r\n              <ButtonComponent\r\n                text=\"Cancel\"\r\n                defaultBtn\r\n                onClick={() => setShowConfirmationModal(false)}\r\n              />\r\n              <ButtonComponent\r\n                text=\"Proceed\"\r\n                onClick={() => {\r\n                  setIsSaving(true);\r\n                  onClickSaveProbabilities(parameters);\r\n                  setShowConfirmationModal(false);\r\n                  setIsSaving(false);\r\n                  setIsDirty(false);\r\n                }}\r\n                disabled={isSaving}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal\r\n          size=\"md\"\r\n          show={modalDirtyShow}\r\n          onHide={() => setModalDirtyShow(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Body style={{ padding: '35px' }}>\r\n            <div style={{ textAlign: 'center' }}>\r\n              You have unsaved changes, are you sure you want to navigate away\r\n              from this page?\r\n            </div>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                paddingTop: '30px',\r\n              }}\r\n            >\r\n              <button\r\n                className={styles.saveModalButton}\r\n                onClick={() => {\r\n                  onClickSaveProbabilities(parameters, !isClose);\r\n                  setModalDirtyShow(false);\r\n                  getChannelProbabilities(selectedChannel.id);\r\n                  setSelectedChannelName(selectedChannel.name);\r\n                  setIsDirty(false);\r\n                  if (isClose) onClickCloseForm(false);\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                Save and proceeded\r\n              </button>\r\n              <button\r\n                className={styles.saveModalButton}\r\n                onClick={() => {\r\n                  getChannelProbabilities(selectedChannel.id);\r\n                  setSelectedChannelName(selectedChannel.name);\r\n                  setModalDirtyShow(false);\r\n                  setIsDirty(false);\r\n                  if (isClose) onClickCloseForm(false);\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                Discard changes and proceed\r\n              </button>\r\n              <button\r\n                className={styles.cancelButton}\r\n                onClick={() => {\r\n                  setModalDirtyShow(false);\r\n                }}\r\n                style={{ marginLeft: '0', background: 'none' }}\r\n                type=\"button\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nAddProfileComponent.propTypes = {\r\n  preDefinedCategories: PropTypes.arrayOf(PropTypes.shape),\r\n  onClickSaveProbabilities: PropTypes.func.isRequired,\r\n  onClickCloseForm: PropTypes.func.isRequired,\r\n  getChannelProbabilities: PropTypes.func.isRequired,\r\n  channelId: PropTypes.number,\r\n  formType: PropTypes.string,\r\n  setDirtyForm: PropTypes.func.isRequired,\r\n};\r\nAddProfileComponent.defaultProps = {\r\n  preDefinedCategories: null,\r\n  channelId: null,\r\n  formType: null,\r\n};\r\nAddProfileComponent.displayName = 'AddProfileComponent';\r\nexport default AddProfileComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileView\":\"ProfileView_profileView__b8soM\",\"column\":\"ProfileView_column__8iyVh\",\"card\":\"ProfileView_card__UghH+\",\"categoryLabel\":\"ProfileView_categoryLabel__lT5xQ\",\"probabilitiesList\":\"ProfileView_probabilitiesList__PqhPs\",\"probabilityItem\":\"ProfileView_probabilityItem__csaZN\",\"probabilityLabel\":\"ProfileView_probabilityLabel__GLApd\",\"percentText\":\"ProfileView_percentText__H0BLU\",\"colon\":\"ProfileView_colon__NCyil\",\"probabilityInput\":\"ProfileView_probabilityInput__LX1I+\"};","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ProfileView.module.css';\r\n\r\nconst ProfileViewComponent = forwardRef(\r\n  ({ categories, onChangeGetProbabilityParameters }, ref) => {\r\n    const cardRef = useRef();\r\n    const probabilityItemRef = useRef();\r\n    const [categoryLabelWidth, setCategoryLabelWidth] = useState(0);\r\n    const [probabilityLabelWidth, setProbabilityLabelWidth] = useState(0);\r\n\r\n    const columnOneData = categories.filter(\r\n      (category) => category.columnPosition === 1,\r\n    );\r\n\r\n    const columnTwoData = categories.filter(\r\n      (category) => category.columnPosition === 2,\r\n    );\r\n\r\n    const columnThreeData = categories.filter(\r\n      (category) => category.columnPosition === 3,\r\n    );\r\n\r\n    const resizeWidth = () => {\r\n      setCategoryLabelWidth(cardRef?.current?.offsetWidth);\r\n      setProbabilityLabelWidth(probabilityItemRef?.current?.offsetWidth);\r\n    };\r\n\r\n    const handleOnChangeProbabilityParameters = (e) => {\r\n      onChangeGetProbabilityParameters(e);\r\n    };\r\n\r\n    const renderData = (data, columnPosition) => {\r\n      const elements = data.map((value) => (\r\n        <div ref={cardRef} className={styles.card} key={value.id}>\r\n          <div\r\n            className={styles.categoryLabel}\r\n            data-bs-toggle=\"tooltip\"\r\n            data-bs-placement=\"top\"\r\n            title={value.name}\r\n            style={{\r\n              width: `${categoryLabelWidth - categoryLabelWidth * 0.09}px`,\r\n            }}\r\n          >\r\n            {value.name}\r\n          </div>\r\n          <div className={styles.probabilitiesList}>\r\n            {value.probabilities\r\n              && value.probabilities.length > 0\r\n              && value.probabilities\r\n                .sort((a, b) => a.orderNumber - b.orderNumber)\r\n                .map((probability) => (\r\n                  <div\r\n                    ref={probabilityItemRef}\r\n                    className={styles.probabilityItem}\r\n                    key={probability.id}\r\n                  >\r\n                    <div\r\n                      className={styles.probabilityLabel}\r\n                      style={{\r\n                        width: `${probabilityLabelWidth\r\n                          - probabilityLabelWidth * 0.09}px`,\r\n                      }}\r\n                    >\r\n                      <span title={probability.name}>{probability.name}</span>\r\n                    </div>\r\n                    <div className={styles.colon}>:</div>\r\n                    <div style={{ width: '100px' }}>\r\n                      <input\r\n                        className={styles.probabilityInput}\r\n                        value={probability.value}\r\n                        name={`${columnPosition},${probability.orderNumber},${probability.name}`}\r\n                        onChange={handleOnChangeProbabilityParameters}\r\n                        type=\"text\"\r\n                        max=\"5\"\r\n                      />\r\n                    </div>\r\n                    <div className={styles.percentText}>%</div>\r\n                  </div>\r\n                ))}\r\n          </div>\r\n        </div>\r\n      ));\r\n\r\n      return elements;\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      resizeWidth() {\r\n        setTimeout(() => {\r\n          resizeWidth();\r\n        }, 100);\r\n      },\r\n    }));\r\n\r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        resizeWidth();\r\n      };\r\n\r\n      window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    useEffect(() => {\r\n      if (probabilityItemRef.current && cardRef.current) {\r\n        resizeWidth();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cardRef.current, probabilityItemRef.current]);\r\n\r\n    return (\r\n      <div className={styles.profileView}>\r\n        <div className={styles.column}>{renderData(columnOneData, 1)}</div>\r\n        <div className={styles.column}>{renderData(columnTwoData, 2)}</div>\r\n        <div className={styles.column}>{renderData(columnThreeData, 3)}</div>\r\n      </div>\r\n    );\r\n  },\r\n);\r\nProfileViewComponent.propTypes = {\r\n  categories: PropTypes.arrayOf(PropTypes.shape),\r\n  onChangeGetProbabilityParameters: PropTypes.func.isRequired,\r\n};\r\nProfileViewComponent.defaultProps = {\r\n  categories: null,\r\n};\r\nProfileViewComponent.displayName = 'ProfileViewComponent';\r\nexport default ProfileViewComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ProfileProbabilities_input__YhDFg\",\"tbody\":\"ProfileProbabilities_tbody__pjJAl\",\"thead\":\"ProfileProbabilities_thead__4RQvZ\",\"table\":\"ProfileProbabilities_table__ahqMm\",\"tableRowWidth\":\"ProfileProbabilities_tableRowWidth__Ph7eF\",\"tableHeaderRowWidth\":\"ProfileProbabilities_tableHeaderRowWidth__1cL7M\",\"tableValueRowWidth\":\"ProfileProbabilities_tableValueRowWidth__iC2Qc\",\"centeredTimeInput\":\"ProfileProbabilities_centeredTimeInput__OaWaA\",\"pdLeft0\":\"ProfileProbabilities_pdLeft0__uD4cD\",\"percent\":\"ProfileProbabilities_percent__BrxCr\"};","import React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from 'react';\r\nimport ChannelProfileService from '../../ChannelProfileService';\r\nimport SelectComponent from '../../../../shared/elements/select/select.component';\r\nimport CustomTimeInput from '../../../../shared/components/custom-time-input/CustomTimeInput';\r\nimport profileStyles from './ProfileProbabilities.module.css';\r\nimport { deleteIcon, plusCircleIcon } from '../../../../assets/index';\r\nimport ProfileForms from '..//ProfileForms';\r\nimport {\r\n  danger,\r\n  success,\r\n} from '../../../../shared/elements/notification/NotifyComponent';\r\n\r\nconst ProfileProbabilitiesBodyComponent = forwardRef(\r\n  (\r\n    {\r\n      selectedProfile,\r\n      categories,\r\n      channelID,\r\n      selectedDay,\r\n      setDirtyForm,\r\n      changeTab,\r\n      clearDirtyForm,\r\n      confirmNavigation,\r\n      hidePrompt,\r\n      fromCancel,\r\n      setModalShow,\r\n    },\r\n    ref\r\n  ) => {\r\n    useImperativeHandle(ref, () => ({\r\n      saveProbabilityValues() {\r\n        handleSaveValues();\r\n      },\r\n    }));\r\n    const lastColumnRef = useRef(null);\r\n    const { timeOptions } = ProfileForms;\r\n    const [attributeValues, setAttributeValues] = useState([]);\r\n    const [profileValues, setProfileValues] = useState([]);\r\n    const [runningID, setRunningID] = useState(1);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n    const [isAdding, setIsAdding] = useState(false);\r\n    const [isMounted, setIsMounted] = useState(true);\r\n    const [profileRenderTimes, setProfileRenderTimes] = useState(0);\r\n\r\n    const addRow = () => {\r\n      setProfileValues([\r\n        ...profileValues,\r\n        {\r\n          id: 'new-' + runningID,\r\n          attribute:\r\n            attributeValues.length > 0\r\n              ? attributeValues[0]\r\n              : { id: 0, name: 'Select Attribute' },\r\n          startTime: '',\r\n          endTime: '',\r\n          value: '',\r\n          startTimeValidation: '',\r\n          endTimeValidation: '',\r\n          valueValidation: 0,\r\n        },\r\n      ]);\r\n      setRunningID(runningID + 1);\r\n      setIsAdding(true);\r\n    };\r\n\r\n    const deleteRow = (id) => {\r\n      setProfileValues(profileValues.filter((item) => item.id !== id));\r\n      setDirtyForm('Profile');\r\n    };\r\n\r\n    const handleSelectProfile = (index, value) => {\r\n      let tempProfile = [...profileValues];\r\n      tempProfile[index].attribute = value;\r\n      setProfileValues(tempProfile);\r\n      setDirtyForm('Profile');\r\n    };\r\n\r\n    const changeTime = (index, value, type) => {\r\n      let tempProfile = [...profileValues];\r\n      if (type == timeOptions.start) tempProfile[index].startTime = value;\r\n      else tempProfile[index].endTime = value;\r\n      setProfileValues(tempProfile);\r\n      setDirtyForm('Profile');\r\n    };\r\n\r\n    const handleOnChangeProbability = (index, e) => {\r\n      let tempProfile = [...profileValues];\r\n      if (!isNaN(parseInt(e.target.value))) {\r\n        let probability = parseInt(e.target.value);\r\n        tempProfile[index].value = probability > 100 ? 100 : probability;\r\n        setProfileValues(tempProfile);\r\n      } else {\r\n        tempProfile[index].value = '';\r\n        setProfileValues(tempProfile);\r\n      }\r\n      setDirtyForm('Profile');\r\n    };\r\n\r\n    const handleSaveValues = () => {\r\n      let attributeValues = [];\r\n      const dateTimeToString = (dateTime) => {\r\n        let dateSplit = dateTime.toLocaleString().split(' ');\r\n        if (dateSplit[1].split(':')[0] == '12' && dateSplit[2] === 'AM') {\r\n          return parseInt(dateSplit[1].split(':')[1]) * 100;\r\n        }\r\n        if (dateSplit[1].split(':')[0] !== '12' && dateSplit[2] === 'PM')\r\n          return parseInt(dateSplit[1].replaceAll(':', '')) + 120000;\r\n        return parseInt(dateSplit[1].replaceAll(':', ''));\r\n      };\r\n      const isNullOrEmpty = (val) => {\r\n        return val === '' || val === null;\r\n      };\r\n      const dateTimeToTimeString = (dateTime) => {\r\n        let dateSplit = dateTime.toLocaleString().split(' ');\r\n        if (dateSplit[1].split(':')[0] === '12' && dateSplit[2] === 'AM') {\r\n          return '00:' + dateSplit[1].split(':')[1] + ':00';\r\n        }\r\n        if (dateSplit[1].split(':')[0] !== '12' && dateSplit[2] === 'PM') {\r\n          var timeSplit = dateSplit[1].split(':');\r\n\r\n          return (\r\n            parseInt(timeSplit[0]) +\r\n            12 +\r\n            ':' +\r\n            timeSplit[1] +\r\n            ':' +\r\n            timeSplit[2]\r\n          );\r\n        }\r\n        return dateSplit[1];\r\n      };\r\n      const validateValues = () => {\r\n        let valid = true;\r\n        let tempValues = [...profileValues];\r\n        if (profileValues.length == 1) {\r\n          if (\r\n            isNullOrEmpty(tempValues[0].startTime) &&\r\n            isNullOrEmpty(tempValues[0].endTime) &&\r\n            isNullOrEmpty(tempValues[0].value)\r\n          ) {\r\n            return valid;\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < profileValues.length; i++) {\r\n          let startTimeValidation = '',\r\n            endTimeValidation = '',\r\n            valueValidation = '',\r\n            hasError = false;\r\n          if (isNullOrEmpty(tempValues[i].startTime)) {\r\n            startTimeValidation = 'Start time is required.';\r\n            hasError = true;\r\n          }\r\n          if (isNullOrEmpty(tempValues[i].endTime)) {\r\n            endTimeValidation = 'End time is required.';\r\n            hasError = true;\r\n          }\r\n\r\n          if (isNullOrEmpty(tempValues[i].value)) {\r\n            valueValidation = 'Probability is required.';\r\n            hasError = true;\r\n          }\r\n\r\n          if (!hasError) {\r\n            let id = tempValues[i].id;\r\n            let attributeID = tempValues[i].attribute.id;\r\n            let startTime = dateTimeToString(tempValues[i].startTime);\r\n            let endTime = dateTimeToString(tempValues[i].endTime);\r\n            endTime = endTime === 0 ? 240000 : endTime;\r\n            if (startTime >= endTime) {\r\n              startTimeValidation = 'Invalid time range.';\r\n              endTimeValidation = 'Invalid time range.';\r\n            } else {\r\n              let filterValuesStart = profileValues.filter(\r\n                (o) =>\r\n                  o.attribute.id == attributeID &&\r\n                  o.id != id &&\r\n                  !isNullOrEmpty(o.startTime) &&\r\n                  startTime <= dateTimeToString(o.startTime) &&\r\n                  endTime > dateTimeToString(o.startTime)\r\n              );\r\n              let filterValuesEnd = profileValues.filter(\r\n                (o) =>\r\n                  o.attribute.id == attributeID &&\r\n                  o.id != id &&\r\n                  !isNullOrEmpty(o.startTime) &&\r\n                  !isNullOrEmpty(o.endTime) &&\r\n                  startTime >= dateTimeToString(o.startTime) &&\r\n                  startTime <\r\n                    (dateTimeToString(o.endTime) === 0\r\n                      ? 240000\r\n                      : dateTimeToString(o.endTime))\r\n              );\r\n              if (filterValuesStart.length > 0 || filterValuesEnd.length > 0) {\r\n                startTimeValidation =\r\n                  'Overlapping time range with same value is not allowed.';\r\n              }\r\n            }\r\n          }\r\n          tempValues[i].startTimeValidation = startTimeValidation;\r\n          tempValues[i].endTimeValidation = endTimeValidation;\r\n          tempValues[i].valueValidation = valueValidation;\r\n          if (\r\n            !isNullOrEmpty(startTimeValidation) ||\r\n            !isNullOrEmpty(endTimeValidation) ||\r\n            !isNullOrEmpty(valueValidation)\r\n          ) {\r\n            valid = false;\r\n          } else {\r\n            attributeValues[attributeValues.length] = {\r\n              id: tempValues[i].id.toString().includes('new')\r\n                ? 0\r\n                : tempValues[i].id,\r\n              attributeID: tempValues[i].attribute.id,\r\n              startTime: dateTimeToTimeString(tempValues[i].startTime),\r\n              endTime: dateTimeToTimeString(tempValues[i].endTime),\r\n              value: tempValues[i].value,\r\n            };\r\n          }\r\n        }\r\n        setProfileValues(tempValues);\r\n        return valid;\r\n      };\r\n      if (!isSaving) {\r\n        setIsSaving(true);\r\n        if (validateValues()) {\r\n          const formValue = {\r\n            channelID: channelID,\r\n            profileAttributeID: selectedProfile.id,\r\n            weekDay: selectedDay,\r\n            attributeValues,\r\n          };\r\n          ChannelProfileService.saveChannelProfileValues(formValue)\r\n            .then(() => {\r\n              if (!fromCancel) changeTab();\r\n              getChannelProfileValues();\r\n              clearDirtyForm();\r\n              success('Channel profile saved');\r\n              confirmNavigation();\r\n            })\r\n            .finally(() => {\r\n              setIsSaving(false);\r\n              hidePrompt();\r\n            });\r\n        } else {\r\n          setIsSaving(false);\r\n          hidePrompt();\r\n          setModalShow(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    const getChannelProfileValues = (values) => {\r\n      ChannelProfileService.getChannelProfileValues(\r\n        channelID,\r\n        selectedDay,\r\n        selectedProfile.id\r\n      ).then((response) => {\r\n        if (\r\n          response.data.attributeValues &&\r\n          response.data.attributeValues.length > 0\r\n        ) {\r\n          const attribtues = response.data.attributeValues;\r\n          let profileAttributes = [];\r\n          attribtues.map((value, index) => {\r\n            let startSplit = value.startTime.split(':');\r\n            let endSplit = value.endTime.split(':');\r\n            const newValues = values ? [...values] : [...attributeValues];\r\n            profileAttributes[index] = {\r\n              id: value.id,\r\n              attribute:\r\n                newValues?.length > 0\r\n                  ? newValues.filter((o) => o.id === value.attributeID)[0]\r\n                  : { id: 0, name: 'Select Attribute' },\r\n              startTime: new Date(\r\n                0,\r\n                0,\r\n                0,\r\n                parseInt(startSplit[0]),\r\n                parseInt(startSplit[1]),\r\n                0\r\n              ),\r\n              endTime: new Date(\r\n                0,\r\n                0,\r\n                0,\r\n                parseInt(endSplit[0]),\r\n                parseInt(endSplit[1]),\r\n                0\r\n              ),\r\n              value: value.value,\r\n              startTimeValidation: '',\r\n              endTimeValidation: '',\r\n              valueValidation: '',\r\n            };\r\n          });\r\n          setProfileValues(profileAttributes);\r\n        }\r\n      });\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (profileValues.length == 0) addRow();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [profileValues]);\r\n\r\n    useEffect(() => {\r\n      if (isAdding)\r\n        lastColumnRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n      setIsAdding(false);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isAdding]);\r\n\r\n    useEffect(() => {\r\n      if(isMounted){\r\n      const attributes = categories?.filter(\r\n        (item) => item.categoryID === selectedProfile?.id\r\n      ) || [];\r\n      const atributeArray = [];\r\n      attributes[0].probabilities.map((value, index) => {\r\n        atributeArray[index] = {\r\n          id: value.attributeTypeId,\r\n          name: value.name,\r\n        };\r\n      });\r\n      setAttributeValues(atributeArray);\r\n      setProfileRenderTimes(0);\r\n      getChannelProfileValues(atributeArray);\r\n      setProfileValues([]);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }\r\n\r\n    return () => {\r\n      setIsMounted(false);\r\n    };\r\n    }, [selectedProfile]);\r\n\r\n    return (\r\n      <>\r\n        {profileValues &&\r\n          profileValues.map((value, index) => {\r\n            return (\r\n              <tr\r\n                key={value.id}\r\n                ref={profileValues.length - 1 == index ? lastColumnRef : null}\r\n              >\r\n                <td className={`${profileStyles.tableRowWidth}`}>\r\n                  <SelectComponent\r\n                    key={'select_' + value.id}\r\n                    text={value?.attribute?.name}\r\n                    list={attributeValues}\r\n                    onSelect={(e) => {\r\n                      handleSelectProfile(index, e);\r\n                    }}\r\n                    width=\"200px\"\r\n                    withSearch\r\n                  />\r\n                </td>\r\n                <td className={`${profileStyles.tableRowWidth}`}>\r\n                  <CustomTimeInput\r\n                    key={'start_' + value.id}\r\n                    value={value.startTime}\r\n                    onChange={(e) => changeTime(index, e, timeOptions.start)}\r\n                    defaultValue={value.startTime}\r\n                    customWrapper={profileStyles.centeredTimeInput}\r\n                  />{' '}\r\n                  {value.startTimeValidation != '' && (\r\n                    <small className={`errorValidation`}>\r\n                      {value.startTimeValidation}\r\n                    </small>\r\n                  )}\r\n                </td>\r\n                <td className={`${profileStyles.tableRowWidth}`}>\r\n                  <CustomTimeInput\r\n                    key={'end_' + value.id}\r\n                    value={value.endTime}\r\n                    onChange={(e) => changeTime(index, e, timeOptions.end)}\r\n                    defaultValue={value.endTime}\r\n                    customWrapper={profileStyles.centeredTimeInput}\r\n                  />{' '}\r\n                  {value.endTimeValidation != '' && (\r\n                    <small className={`errorValidation`}>\r\n                      {value.endTimeValidation}\r\n                    </small>\r\n                  )}\r\n                </td>\r\n                <td className={`${profileStyles.tableRowWidth}`}>\r\n                  <input\r\n                    key={'input_' + value.id}\r\n                    className={profileStyles.input}\r\n                    value={value.value}\r\n                    onChange={(e) => handleOnChangeProbability(index, e)}\r\n                    type=\"text\"\r\n                    max=\"5\"\r\n                  />\r\n                  {value.valueValidation != '' && (\r\n                    <small className={`errorValidation`}>\r\n                      {value.valueValidation}\r\n                    </small>\r\n                  )}\r\n                </td>\r\n                <td\r\n                  className={`${profileStyles.tableRowWidth} ${profileStyles.pdLeft0}`}\r\n                >\r\n                  <small className={`${profileStyles.percent} `}>%</small>\r\n                  <img\r\n                    key={'delete_' + value.id}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      marginLeft: '10px',\r\n                      marginTop: '5px',\r\n                    }}\r\n                    src={deleteIcon}\r\n                    alt=\"Delete Icon\"\r\n                    onClick={() => deleteRow(value.id)}\r\n                    onKeyDown={() => deleteRow(value.id)}\r\n                    role=\"presentation\"\r\n                    data-toggle=\"tooltip\"\r\n                    data-placement=\"top\"\r\n                    title=\"Delete\"\r\n                  />\r\n                  {profileValues.length - 1 == index && (\r\n                    <img\r\n                      key={'add_' + value.id}\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                        marginLeft: '10px',\r\n                        marginTop: '6px',\r\n                      }}\r\n                      src={plusCircleIcon}\r\n                      alt=\"Add Icon\"\r\n                      onClick={addRow}\r\n                      onKeyDown={addRow}\r\n                      role=\"presentation\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      title=\"Add\"\r\n                    />\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nProfileProbabilitiesBodyComponent.displayName =\r\n  'ProfileProbabilitiesBodyComponent';\r\nexport default ProfileProbabilitiesBodyComponent;\r\n","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport styles from '../profile-view/ProfileView.module.css';\r\nimport profileStyles from './ProfileProbabilities.module.css';\r\nimport ProfileProbabilitiesBodyComponent from './ProfileProbabilitiesBodyComponent';\r\n\r\nconst ProfileProbabilitiesComponent = forwardRef(\r\n  (\r\n    {\r\n      selectedProfile,\r\n      categories,\r\n      channelID,\r\n      selectedDay,\r\n      setDirtyForm,\r\n      changeTab,\r\n      clearDirtyForm,\r\n      confirmNavigation,\r\n      hidePrompt,\r\n      fromCancel,\r\n      setModalShow,\r\n    },\r\n    ref\r\n  ) => {\r\n    const tableBodyRef = useRef();\r\n    useImperativeHandle(ref, () => ({\r\n      saveProbabilityValues() {\r\n        tableBodyRef?.current?.saveProbabilityValues();\r\n      },\r\n    }));\r\n    return (\r\n      <div className={styles.profileView}>\r\n        <table className={`table ${profileStyles.table}`}>\r\n          <thead className={profileStyles.thead}>\r\n            <tr>\r\n              <th className={`${profileStyles.tableHeaderRowWidth}`}>Value</th>\r\n              <th className={`${profileStyles.tableHeaderRowWidth}`}>\r\n                Start Time\r\n              </th>\r\n              <th className={`${profileStyles.tableHeaderRowWidth}`}>\r\n                End Time\r\n              </th>\r\n              <th className={`${profileStyles.tableHeaderRowWidth}`}>\r\n                Probability\r\n              </th>\r\n              <th\r\n                className={`${profileStyles.tableRowWidth} ${profileStyles.pdLeft0}`}\r\n              ></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className={profileStyles.tbody}>\r\n            <ProfileProbabilitiesBodyComponent\r\n              ref={tableBodyRef}\r\n              selectedProfile={selectedProfile}\r\n              categories={categories}\r\n              channelID={channelID}\r\n              selectedDay={selectedDay}\r\n              setDirtyForm={setDirtyForm}\r\n              changeTab={changeTab}\r\n              clearDirtyForm={clearDirtyForm}\r\n              confirmNavigation={confirmNavigation}\r\n              hidePrompt={hidePrompt}\r\n              fromCancel={fromCancel}\r\n              setModalShow={setModalShow}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nProfileProbabilitiesComponent.displayName = 'ProfileProbabilitiesComponent';\r\nexport default ProfileProbabilitiesComponent;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useRef,\r\n  useImperativeHandle,\r\n} from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Profile.module.css';\r\nimport ProfileStyles from '../ChannelProfile.module.css';\r\nimport ProfileTooltipComponent from './ProfileTooltipComponent';\r\nimport ProfileForms from './ProfileForms';\r\nimport copyIcon from '../../../assets/icons/Copy.svg';\r\nimport checkIcon from '../../../assets/icons/Check-2.svg';\r\nimport SelectComponent from '../../../shared/elements/select/select.component';\r\nimport SwitchComponent from '../../../shared/elements/switch/switch.component';\r\nimport ButtonComponent from '../../../shared/elements/button/button.component';\r\nimport AddProfileComponent from './add-profile/AddProfileComponent';\r\nimport ProfileViewComponent from './profile-view/ProfileViewComponent';\r\nimport Button from '../../../shared/components/button/Button';\r\nimport ChannelProfileService from '../ChannelProfileService';\r\nimport ProfileProbabilitiesComponent from './profile-probabilities/ProfileProbabilitiesComponent';\r\n\r\nconst ProfileComponent = forwardRef(\r\n  (\r\n    {\r\n      profileFilter,\r\n      handleChangeDay,\r\n      handleChangeStartTime,\r\n      handleChangeEndTime,\r\n      callbackSaveProfile,\r\n      handleSwitchEndTime,\r\n      onClickSaveProbabilities,\r\n      categories,\r\n      onChangeGetProbabilityParameters,\r\n      getChannelProbabilities,\r\n      channelId,\r\n      onCloseForm,\r\n      checkIfCanRenderModifyProfileComponent,\r\n      setDirtyForm,\r\n      shouldSwitchProfileDivId,\r\n      selectedDay,\r\n      timeInterval,\r\n      clockType,\r\n      changeTab,\r\n      clearDirtyForm,\r\n      confirmNavigation,\r\n      hidePrompt,\r\n      fromCancel,\r\n      setModalShow,\r\n      selectedProfile,\r\n      setSelectedProfile,\r\n    },\r\n    ref\r\n  ) => {\r\n    const daySelect = ProfileForms.dayList;\r\n    const { scheduleList } = ProfileForms;\r\n    const [isMounted, setIsMounted] = useState(true);\r\n    const { switchOptions } = ProfileForms;\r\n    const [timeOptions, setTimeOptions] = useState([]);\r\n    const [selectedDayIds, setSelectedDayIds] = useState([]);\r\n    const [activeEndTime, setActiveEndTime] = useState(true);\r\n    const [showSelectDaysModal, setShowSelectDaysModal] = useState(false);\r\n    const [\r\n      showApplySelectedDayConfirmationModal,\r\n      setShowApplySelectedDayConfirmationModal,\r\n    ] = useState(false);\r\n    const [divId, setDivId] = useState(0);\r\n    const addProfileFormRef = useRef();\r\n    const profileViewRef = useRef();\r\n    const profileProbabilityRef = useRef();\r\n    const [\r\n      appliedProfileValuesMessage,\r\n      setAppliedProfileValuesMessage,\r\n    ] = useState('');\r\n    const [isSaving, setIsSaving] = useState(false);\r\n    const [profiles, setProfiles] = useState([]);\r\n\r\n    const buildTimeStandard = () => {\r\n      const timeList = [];\r\n      for (let h = 0; h < 24; h += timeInterval) {\r\n        for (let m = 0; m < 60; m += 60) {\r\n          const t = `${h}:${`0${m}`.slice(-2)}`;\r\n          timeList.push({ id: t, name: t });\r\n        }\r\n      }\r\n      setTimeOptions(timeList);\r\n    };\r\n\r\n    const buildTimeBroadcast = () => {\r\n      const timeList = [];\r\n      let arr1 = [];\r\n      switch (timeInterval) {\r\n        case 1:\r\n          arr1 = [\r\n            { id: '24:00', name: '24:00' },\r\n            { id: '25:00', name: '25:00' },\r\n            { id: '26:00', name: '26:00' },\r\n            { id: '27:00', name: '27:00' },\r\n            { id: '28:00', name: '28:00' },\r\n            { id: '29:00', name: '29:00' },\r\n          ];\r\n\r\n          for (let h = 6; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          var newTimelist = [...arr1, ...timeList];\r\n          setTimeOptions(newTimelist);\r\n          break;\r\n        case 2:\r\n          arr1 = [\r\n            { id: '24:00', name: '24:00' },\r\n            { id: '26:00', name: '26:00' },\r\n            { id: '28:00', name: '28:00' },\r\n          ];\r\n\r\n          for (let h = 6; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          var newTimelist = [...arr1, ...timeList];\r\n          setTimeOptions(newTimelist);\r\n          break;\r\n        case 3:\r\n          arr1 = [\r\n            { id: '24:00', name: '24:00' },\r\n            { id: '27:00', name: '27:00' },\r\n          ];\r\n\r\n          for (let h = 6; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          var newTimelist = [...arr1, ...timeList];\r\n          setTimeOptions(newTimelist);\r\n          break;\r\n        case 4:\r\n          arr1 = [\r\n            { id: '24:00', name: '24:00' },\r\n            { id: '28:00', name: '28:00' },\r\n          ];\r\n\r\n          for (let h = 8; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          var newTimelist = [...arr1, ...timeList];\r\n          setTimeOptions(newTimelist);\r\n          break;\r\n        case 6:\r\n          arr1 = [{ id: '24:00', name: '24:00' }];\r\n\r\n          for (let h = 6; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          var newTimelist = [...arr1, ...timeList];\r\n          setTimeOptions(newTimelist);\r\n          break;\r\n        case 8:\r\n          arr1 = [{ id: '24:00', name: '24:00' }];\r\n\r\n          for (let h = 8; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          var newTimelist = [...arr1, ...timeList];\r\n          setTimeOptions(newTimelist);\r\n          break;\r\n        case 12:\r\n          arr1 = [{ id: '24:00', name: '24:00' }];\r\n\r\n          for (let h = 12; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          var newTimelist = [...arr1, ...timeList];\r\n          setTimeOptions(newTimelist);\r\n          break;\r\n        case 24:\r\n          for (let h = 24; h < 24; h += timeInterval) {\r\n            for (let m = 0; m < 60; m += 60) {\r\n              const t = `${h}:${`0${m}`.slice(-2)}`;\r\n              timeList.push({ id: t, name: t });\r\n            }\r\n          }\r\n          setTimeOptions(timeList);\r\n          break;\r\n      }\r\n    };\r\n\r\n    const renderAddProfileComponent = () => {\r\n      setDivId(3);\r\n    };\r\n\r\n    const renderModifyProfileComponent = () => {\r\n      setDivId(4);\r\n    };\r\n\r\n    const openSelectDaysModal = () => {\r\n      setShowSelectDaysModal(true);\r\n    };\r\n\r\n    const hideSelectDaysModal = () => {\r\n      setShowSelectDaysModal(false);\r\n    };\r\n\r\n    const openApplySelectedDaysConfirmationModal = () => {\r\n      setShowSelectDaysModal(false);\r\n      setTimeout(() => {\r\n        setShowApplySelectedDayConfirmationModal(true);\r\n      }, 100);\r\n    };\r\n\r\n    const hideApplySelectedDaysConfirmationModal = () => {\r\n      setShowApplySelectedDayConfirmationModal(false);\r\n      setTimeout(() => {\r\n        setShowSelectDaysModal(true);\r\n      }, 100);\r\n    };\r\n\r\n    const hideAppliedProfileValuesMessage = () => {\r\n      setAppliedProfileValuesMessage('');\r\n      setSelectedDayIds([]);\r\n    };\r\n\r\n    const onApplyProfileToSelectedDays = () => {\r\n      const parameters = {\r\n        channelID: channelId,\r\n        weekDay: selectedDay,\r\n        weekDayIds: selectedDayIds,\r\n      };\r\n      setIsSaving(true);\r\n      ChannelProfileService.applyProfileToSelectedDays(parameters).then(\r\n        (response) => {\r\n          setShowApplySelectedDayConfirmationModal(false);\r\n          setIsSaving(false);\r\n          setTimeout(() => {\r\n            setAppliedProfileValuesMessage(\r\n              `Profile values  successfully copied to ${response.data} days.`\r\n            );\r\n          }, 100);\r\n        }\r\n      );\r\n    };\r\n\r\n    const handleOnSelectDay = (dayId) => {\r\n      if (selectedDay === dayId) return false;\r\n\r\n      if (selectedDayIds.includes(dayId)) {\r\n        const remainingDayIds = selectedDayIds.filter((day) => day !== dayId);\r\n        setSelectedDayIds(remainingDayIds);\r\n      } else {\r\n        setSelectedDayIds([...selectedDayIds, dayId]);\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    const handleChangeProfile = (e) => {\r\n      setSelectedProfile(e);\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      switchComponent(id) {\r\n        setDivId(id);\r\n      },\r\n      hideConfirmationModal() {\r\n        addProfileFormRef?.current?.hideConfirmationModal();\r\n      },\r\n      resizeWidth() {\r\n        if (profileViewRef.current !== null)\r\n          profileViewRef.current.resizeWidth();\r\n      },\r\n      renderModifyProfileComponent() {\r\n        renderModifyProfileComponent();\r\n      },\r\n      saveChannelProfileProbabilities() {\r\n        addProfileFormRef.current.saveChannelProfileProbabilities();\r\n      },\r\n      saveProbabilityValues() {\r\n        profileProbabilityRef?.current?.saveProbabilityValues();\r\n      },\r\n    }));\r\n\r\n    useEffect(() => {\r\n      if(isMounted){\r\n      if (shouldSwitchProfileDivId) {\r\n        if (categories.length > 0) {\r\n          setDivId(1);\r\n        } else {\r\n          setDivId(2);\r\n        }\r\n      } else {\r\n        setDivId(divId);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      setIsMounted(false);\r\n    };\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [categories, shouldSwitchProfileDivId]);\r\n\r\n    useEffect(() => {\r\n      if(isMounted){\r\n      const profileArray = [];\r\n        categories?.map((value, index) => {\r\n          profileArray[index] = { id: value.categoryID, name: value.name };\r\n        });\r\n        setProfiles(profileArray);\r\n        setSelectedProfile(profileArray[0]);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }\r\n    }, [categories]);\r\n\r\n    return (\r\n      <>\r\n        {divId === 1 && (\r\n          <>\r\n            <div className={Styles.profileBody}>\r\n              <div className={`${Styles.divProfile} ${Styles.headerButtons}`}>\r\n                <div className={Styles.daySection}>\r\n                  <div className={Styles.daySectionText}>Day:</div>\r\n                  <div className={Styles.daySelect}>\r\n                    <div className=\"d-flex w-100\">\r\n                      <div className=\"w-100\">\r\n                        <SelectComponent\r\n                          text={profileFilter.day}\r\n                          list={daySelect}\r\n                          onSelect={handleChangeDay}\r\n                          width=\"100%\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <img\r\n                          className={Styles.copyIcon}\r\n                          src={copyIcon}\r\n                          alt=\"\"\r\n                          title=\"Copy this day's profile values to other days\"\r\n                          onClick={openSelectDaysModal}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={Styles.startTimeSection}>\r\n                  <div className={Styles.startTimeLabel}>Profile:</div>\r\n                  <div className={Styles.profileSelect}>\r\n                    <SelectComponent\r\n                      text={selectedProfile.name}\r\n                      list={profiles}\r\n                      onSelect={handleChangeProfile}\r\n                      width=\"100%\"\r\n                      withSearch\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className={Styles.profileView}>\r\n                <ProfileProbabilitiesComponent\r\n                  ref={profileProbabilityRef}\r\n                  categories={categories}\r\n                  selectedProfile={selectedProfile}\r\n                  channelID={channelId}\r\n                  selectedDay={selectedDay}\r\n                  setDirtyForm={setDirtyForm}\r\n                  changeTab={changeTab}\r\n                  clearDirtyForm={clearDirtyForm}\r\n                  confirmNavigation={confirmNavigation}\r\n                  hidePrompt={hidePrompt}\r\n                  fromCancel={fromCancel}\r\n                  setModalShow={setModalShow}\r\n                />\r\n              </div>\r\n              {false && (\r\n                <div className={Styles.profileView}>\r\n                  <ProfileViewComponent\r\n                    ref={profileViewRef}\r\n                    categories={categories}\r\n                    onChangeGetProbabilityParameters={\r\n                      onChangeGetProbabilityParameters\r\n                    }\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className={ProfileStyles.profileViewFooter}>\r\n              <button\r\n                className={ProfileStyles.saveButton}\r\n                onClick={checkIfCanRenderModifyProfileComponent}\r\n                type=\"button\"\r\n              >\r\n                Manage Profiles\r\n              </button>\r\n\r\n              <button\r\n                className={ProfileStyles.saveButton}\r\n                onClick={callbackSaveProfile}\r\n                type=\"button\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n\r\n            <ReactTooltip\r\n              id=\"more\"\r\n              aria-haspopup=\"true\"\r\n              role=\"menuitem\"\r\n              backgroundColor=\"#0C212B\"\r\n              event=\"click\"\r\n            >\r\n              <ProfileTooltipComponent scheduleList={scheduleList} />\r\n            </ReactTooltip>\r\n          </>\r\n        )}\r\n\r\n        {divId === 2 && (\r\n          <div className={Styles.wrapper}>\r\n            <div className={Styles.wrapperContent}>\r\n              <h4>This channel has no defined profiles.</h4>\r\n              <ButtonComponent\r\n                defaultBtn={false}\r\n                text=\"Add profiles\"\r\n                onClick={renderAddProfileComponent}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Add new profiles */}\r\n        {divId === 3 && (\r\n          <AddProfileComponent\r\n            ref={addProfileFormRef}\r\n            formType=\"Create\"\r\n            channelId={channelId}\r\n            preDefinedCategories={categories}\r\n            onClickSaveProbabilities={onClickSaveProbabilities}\r\n            onClickCloseForm={onCloseForm}\r\n            getChannelProbabilities={getChannelProbabilities}\r\n            setDirtyForm={setDirtyForm}\r\n          />\r\n        )}\r\n        {/* Modify existing profiles */}\r\n        {divId === 4 && (\r\n          <AddProfileComponent\r\n            ref={addProfileFormRef}\r\n            formType=\"Update\"\r\n            channelId={channelId}\r\n            preDefinedCategories={categories}\r\n            onClickSaveProbabilities={onClickSaveProbabilities}\r\n            onClickCloseForm={onCloseForm}\r\n            getChannelProbabilities={getChannelProbabilities}\r\n            setDirtyForm={setDirtyForm}\r\n          />\r\n        )}\r\n        {/* Select days modal */}\r\n        <Modal\r\n          centered\r\n          show={showSelectDaysModal}\r\n          onHide={hideSelectDaysModal}\r\n          dialogClassName={Styles.selectDaysModal}\r\n        >\r\n          <Modal.Body className={Styles.selectDaysModalBody}>\r\n            <label>Select day&#40;s&#41;:</label>\r\n            {ProfileForms.dayList.map((day) => {\r\n              const checkId = selectedDayIds.includes(parseInt(day.id, 10));\r\n              return (\r\n                <div key={day.id} className={Styles.dayListItem}>\r\n                  <div\r\n                    className={`\r\n                      ${Styles.checkbox}\r\n                      ${checkId && Styles.activeCheckbox}\r\n                      ${selectedDay === parseInt(day.id, 10) &&\r\n                        Styles.disabledCheckbox}\r\n                    `}\r\n                    onClick={() => handleOnSelectDay(parseInt(day.id, 10))}\r\n                  >\r\n                    {checkId && (\r\n                      <img\r\n                        className={Styles.checkIcon}\r\n                        src={checkIcon}\r\n                        alt=\"\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className={`\r\n                        ${Styles.dayName}\r\n                        ${\r\n                          selectedDay === parseInt(day.id, 10)\r\n                            ? Styles.disabledCheckboxText\r\n                            : ''\r\n                        }\r\n                    `}\r\n                  >\r\n                    {day.name}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"text-end\">\r\n              <Button defaultBtn text=\"Close\" onClick={hideSelectDaysModal} />\r\n              <Button\r\n                text=\"Copy values\"\r\n                onClick={openApplySelectedDaysConfirmationModal}\r\n                disabled={selectedDayIds.length === 0}\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          centered\r\n          show={showApplySelectedDayConfirmationModal}\r\n          dialogClassName={Styles.applySelectedDayConfirmationModal}\r\n        >\r\n          <Modal.Body className={Styles.selectedDayConfirmationModal}>\r\n            <p>\r\n              Some of the selected days may already have existing values defined\r\n              on their profiles. Copying this day&apos;s profile values will\r\n              overwrite the existing values of the target day&#40;s&#41;.\r\n            </p>\r\n            <p className={Styles.proceedConfirmationText}>\r\n              Are you sure you want to proceed?\r\n            </p>\r\n            <Button\r\n              defaultBtn\r\n              text=\"Cancel\"\r\n              onClick={hideApplySelectedDaysConfirmationModal}\r\n            />\r\n            <Button\r\n              text=\"Proceed\"\r\n              onClick={onApplyProfileToSelectedDays}\r\n              disabled={isSaving}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          centered\r\n          show={appliedProfileValuesMessage}\r\n          dialogClassName={Styles.appliedProfileValuesMessage}\r\n        >\r\n          <Modal.Body className={Styles.applyProfileModalBody}>\r\n            <p>{appliedProfileValuesMessage}</p>\r\n            <Button\r\n              style={{ marginTop: '10px' }}\r\n              text=\"Close\"\r\n              onClick={hideAppliedProfileValuesMessage}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nProfileComponent.propTypes = {\r\n  profileFilter: PropTypes.shape(PropTypes.any),\r\n  handleChangeDay: PropTypes.func.isRequired,\r\n  handleChangeStartTime: PropTypes.func.isRequired,\r\n  handleChangeEndTime: PropTypes.func.isRequired,\r\n  callbackSaveProfile: PropTypes.func.isRequired,\r\n  handleSwitchEndTime: PropTypes.func.isRequired,\r\n  onClickSaveProbabilities: PropTypes.func.isRequired,\r\n  categories: PropTypes.arrayOf(PropTypes.shape(PropTypes.any)),\r\n  onChangeGetProbabilityParameters: PropTypes.func.isRequired,\r\n  getChannelProbabilities: PropTypes.func.isRequired,\r\n  channelId: PropTypes.number,\r\n  onCloseForm: PropTypes.func.isRequired,\r\n  checkIfCanRenderModifyProfileComponent: PropTypes.func,\r\n  setDirtyForm: PropTypes.func.isRequired,\r\n  shouldSwitchProfileDivId: PropTypes.bool.isRequired,\r\n  selectedDay: PropTypes.number,\r\n  timeInterval: PropTypes.number,\r\n};\r\nProfileComponent.defaultProps = {\r\n  profileFilter: {},\r\n  categories: null,\r\n  channelId: null,\r\n  selectedDay: null,\r\n  checkIfCanRenderModifyProfileComponent: undefined,\r\n  timeInterval: 1,\r\n};\r\nProfileComponent.displayName = 'ProfileComponent';\r\nexport default ProfileComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"divBusiness\":\"BusinessRules_divBusiness__tWq50\",\"assetListTitle\":\"BusinessRules_assetListTitle__oiCHP\",\"businessHead\":\"BusinessRules_businessHead__uQumc\",\"txtBox\":\"BusinessRules_txtBox__Cz3gh\",\"fastSubLabel\":\"BusinessRules_fastSubLabel__v9weN\",\"businessLabel\":\"BusinessRules_businessLabel__KVFL6\",\"inputLabel\":\"BusinessRules_inputLabel__W83-V\",\"primetimeDaypartLabel\":\"BusinessRules_primetimeDaypartLabel__EYK1O\",\"select\":\"BusinessRules_select__E+U1M\",\"formInput\":\"BusinessRules_formInput__EErUn\",\"importBusinessRules\":\"BusinessRules_importBusinessRules__IA0Y+\",\"importBusinessRulesHeader\":\"BusinessRules_importBusinessRulesHeader__LyvV1\",\"importBusinesRulesHeaderActionIcons\":\"BusinessRules_importBusinesRulesHeaderActionIcons__G0HFC\",\"importBusinessRulesHeaderActions\":\"BusinessRules_importBusinessRulesHeaderActions__6sUHR\",\"importBusiessRulesSearchWrapper\":\"BusinessRules_importBusiessRulesSearchWrapper__WGGwP\",\"importBusiessRulesSearch\":\"BusinessRules_importBusiessRulesSearch__hH6Ga\",\"importBusiessRulesSearchIcon\":\"BusinessRules_importBusiessRulesSearchIcon__kZi6H\",\"importBusiessRulesClearSearchIcon\":\"BusinessRules_importBusiessRulesClearSearchIcon__BHKVD\",\"businessRulesList\":\"BusinessRules_businessRulesList__cr36Z\",\"businessRulesItem\":\"BusinessRules_businessRulesItem__bifj1\",\"businessRuleDescription\":\"BusinessRules_businessRuleDescription__x5oM9\",\"businessRuleValue\":\"BusinessRules_businessRuleValue__RHE7w\",\"errorInput\":\"BusinessRules_errorInput__l9pdg\",\"trashCanSmIcon\":\"BusinessRules_trashCanSmIcon__-8TeS\",\"noCustomResultWrapper\":\"BusinessRules_noCustomResultWrapper__8o4Ye\",\"customBusinessRulesLabel\":\"BusinessRules_customBusinessRulesLabel__zEqrr\",\"assetListLabel\":\"BusinessRules_assetListLabel__bgAf5\",\"attributeToCheckSelect\":\"BusinessRules_attributeToCheckSelect__R3k+-\",\"assetList\":\"BusinessRules_assetList__0QdxP\",\"assetListTitles\":\"BusinessRules_assetListTitles__wFz1z\",\"orderingButton\":\"BusinessRules_orderingButton__U4mSS\",\"invalidField\":\"BusinessRules_invalidField__yichT\",\"label\":\"BusinessRules_label__AH4o1\",\"assetListTypeInput\":\"BusinessRules_assetListTypeInput__BHNGf\",\"checkbox\":\"BusinessRules_checkbox__QmPo0\",\"checkboxWrapper\":\"BusinessRules_checkboxWrapper__4zNbd\",\"assetListBusinessHead\":\"BusinessRules_assetListBusinessHead__7rAGw\",\"businessRuleDescriptionWrapper\":\"BusinessRules_businessRuleDescriptionWrapper__7UBZO\",\"dailyRefreshMinSelect\":\"BusinessRules_dailyRefreshMinSelect__g4wQH\",\"interstitialsMaxInput\":\"BusinessRules_interstitialsMaxInput__8xbCz\",\"interstitialsMinInput\":\"BusinessRules_interstitialsMinInput__qPhui\",\"sameChannelRepeatsAfterInput\":\"BusinessRules_sameChannelRepeatsAfterInput__ngesP\",\"dailyRefreshMinLabel\":\"BusinessRules_dailyRefreshMinLabel__VM+bK\",\"advertsTargetLabel\":\"BusinessRules_advertsTargetLabel__438O7\",\"advertsMaxLabel\":\"BusinessRules_advertsMaxLabel__8ETfa\",\"dailyRefreshBusinessLabel\":\"BusinessRules_dailyRefreshBusinessLabel__MXkKq\",\"slotDurationTimeBusinessLabel\":\"BusinessRules_slotDurationTimeBusinessLabel__3Ex51\",\"advertsTargetSelect\":\"BusinessRules_advertsTargetSelect__Ab2XT\",\"advertsMaxSelect\":\"BusinessRules_advertsMaxSelect__GeoPj\",\"advertsBusinessLabel\":\"BusinessRules_advertsBusinessLabel__GlJaA\",\"fastBusinessHead\":\"BusinessRules_fastBusinessHead__qpFYy\",\"certificationBusinessHead\":\"BusinessRules_certificationBusinessHead__UeJWc\",\"assetRepeatsBusinessHead\":\"BusinessRules_assetRepeatsBusinessHead__vAL+H\",\"slotDurationTimeSelect\":\"BusinessRules_slotDurationTimeSelect__Lcw5e\",\"sameChannelRepeatsAfterSelect\":\"BusinessRules_sameChannelRepeatsAfterSelect__Oa-Mc\",\"interstitialsTargetSelect\":\"BusinessRules_interstitialsTargetSelect__S4XXZ\",\"interstitialsMaxSelect\":\"BusinessRules_interstitialsMaxSelect__7hFXc\",\"interstitialsMax\":\"BusinessRules_interstitialsMax__585Tj\",\"interstitialsMin\":\"BusinessRules_interstitialsMin__7mRn7\",\"sameChannelRepeatsAfter\":\"BusinessRules_sameChannelRepeatsAfter__9c2N3\",\"slotDurationTimeLabel\":\"BusinessRules_slotDurationTimeLabel__Ieq7j\",\"newPrimetimeJunctionTimeLabel\":\"BusinessRules_newPrimetimeJunctionTimeLabel__7bfDu\",\"newPrimetimeJunctionTimeInput\":\"BusinessRules_newPrimetimeJunctionTimeInput__bFplZ\",\"newPrimetimeJunctionTime\":\"BusinessRules_newPrimetimeJunctionTime__2EJV0\",\"newPrimetimeDaypart\":\"BusinessRules_newPrimetimeDaypart__vbKRk\",\"interstitialsMinSelect\":\"BusinessRules_interstitialsMinSelect__dZIEc\",\"interstitialsMinBusinessLabel\":\"BusinessRules_interstitialsMinBusinessLabel__JUYCd\",\"primeTimeInterval\":\"BusinessRules_primeTimeInterval__Y44k+\",\"crossChannelRepeats\":\"BusinessRules_crossChannelRepeats__UKHw7\",\"sameChannelRepeats\":\"BusinessRules_sameChannelRepeats__2iXBS\",\"maximumPlays\":\"BusinessRules_maximumPlays__4axDb\",\"underplayedWeighting\":\"BusinessRules_underplayedWeighting__URiM8\",\"endProbability\":\"BusinessRules_endProbability__ZA+Kl\",\"primetimeDaypart\":\"BusinessRules_primetimeDaypart__RHuZK\",\"signaturesBusinessHead\":\"BusinessRules_signaturesBusinessHead__mm+TE\",\"primeTimeIntervalLabel\":\"BusinessRules_primeTimeIntervalLabel__NjoRJ\",\"crossChannelRepeatsLabel\":\"BusinessRules_crossChannelRepeatsLabel__Ucoi7\",\"maximumPlaysInput\":\"BusinessRules_maximumPlaysInput__Ksc5P\",\"maximumPlaysInputLabel\":\"BusinessRules_maximumPlaysInputLabel__4JEOn\",\"overplayedWeightingInput\":\"BusinessRules_overplayedWeightingInput__HEMNa\",\"underplayedWeightingInput\":\"BusinessRules_underplayedWeightingInput__mIRFk\",\"overplayedWeightingInputLabel\":\"BusinessRules_overplayedWeightingInputLabel__LBPcl\",\"underplayedWeightingInputLabel\":\"BusinessRules_underplayedWeightingInputLabel__lR01e\",\"endProbabilityInputLabel\":\"BusinessRules_endProbabilityInputLabel__deF9M\",\"overplayedWeighting\":\"BusinessRules_overplayedWeighting__Dpqn9\",\"redBorder\":\"BusinessRules_redBorder__Tx9aC\",\"interstitialsTargetInput\":\"BusinessRules_interstitialsTargetInput__8gNx4\"};","class BusinessRulesForms {\r\n  scheduleFields = [\r\n    {\r\n      id: 1,\r\n      label: 'Primetime',\r\n      name: 'primetimeJunction',\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Slot & duration rounding',\r\n      name: 'slotAndDurationRounding',\r\n    },\r\n    {\r\n      id: 3,\r\n      label: 'Padding with interstitials',\r\n      name: 'paddingWithInterstitials',\r\n    },\r\n    {\r\n      id: 4,\r\n      label: 'Daily content refresh',\r\n      name: 'dailyRefresh',\r\n    },\r\n    {\r\n      id: 5,\r\n      label: 'Mature content',\r\n      name: 'matureContent',\r\n    },\r\n    {\r\n      id: 6,\r\n      label: 'Junction',\r\n      name: 'newPrimetimeJunction',\r\n    },\r\n  ];\r\n\r\n  assetFields = [\r\n    {\r\n      id: 7,\r\n      label: 'Channel repeats',\r\n      name: 'sameChannelRepeats',\r\n    },\r\n    {\r\n      id: 8,\r\n      label: 'Cross-Channel repeats',\r\n      name: 'crossChannelRepeats',\r\n    },\r\n    {\r\n      id: 9,\r\n      label: 'Primetime interval',\r\n      name: 'primeTimeInterval',\r\n    },\r\n    {\r\n      id: 10,\r\n      label: 'Maximum plays',\r\n      name: 'maximumPlays',\r\n    },\r\n  ];\r\n\r\n  certificationFields = [\r\n    {\r\n      id: 11,\r\n      label: 'Certification 12 pin-protected',\r\n      name: 'cert12PinProtected',\r\n    },\r\n    {\r\n      id: 12,\r\n      label: 'Certification 15 pin-protected',\r\n      name: 'cert15PinProtected',\r\n    },\r\n    {\r\n      id: 13,\r\n      label: 'Certification 18 after 9PM',\r\n      name: 'cert18After9pm',\r\n    },\r\n    {\r\n      id: 14,\r\n      label: 'Certification 18+ after 10PM',\r\n      name: 'cert18After10pm',\r\n    },\r\n  ];\r\n\r\n  assetProbabilityFields = [\r\n    {\r\n      id: 15,\r\n      label: 'Play distribution',\r\n      name: 'playDistribution',\r\n    },\r\n    {\r\n      id: 16,\r\n      label: 'Underplayed weighting',\r\n      name: 'underplayedWeighting',\r\n    },\r\n    {\r\n      id: 17,\r\n      label: 'Overplayed weighting',\r\n      name: 'overplayedWeighting',\r\n    },\r\n  ];\r\n\r\n  typeFields = [\r\n    {\r\n      id: 18,\r\n      label: 'FAST channel',\r\n      name: 'fastChannel',\r\n    },\r\n    {\r\n      id: 19,\r\n      label: 'Adverts per hour',\r\n      name: 'advertsPerHour',\r\n    },\r\n  ];\r\n\r\n  timeList = [\r\n    { id: 20, name: 'Minutes' },\r\n    { id: 21, name: 'Hours' },\r\n    { id: 22, name: 'Days' },\r\n    { id: 23, name: 'Weeks' },\r\n  ];\r\n\r\n  hoursMin = 0;\r\n\r\n  hoursMax = 23;\r\n\r\n  minutesMin = 0;\r\n\r\n  minutesMax = 59;\r\n\r\n  premierGradesMin = 1;\r\n\r\n  premierGradesMax = 9999;\r\n\r\n  postPremierDaysMin = 1;\r\n\r\n  postPremierDaysMax = 9999;\r\n\r\n  playWeightMin = 1;\r\n\r\n  playWeightMax = 100;\r\n\r\n  maximumPlaysPlayMin = 1;\r\n\r\n  maximumPlaysPlayMax = 9999;\r\n\r\n  maximumPlaysPeriodMin = 1;\r\n\r\n  maximumPlaysPeriodMax = 9999;\r\n}\r\n\r\nexport default new BusinessRulesForms();\r\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Modal_body__W89B2\",\"smallText\":\"Modal_smallText__ua8W3\",\"fileName\":\"Modal_fileName__6KtWp\",\"smallerText\":\"Modal_smallerText__H-hOp\",\"buttons\":\"Modal_buttons__mU861\",\"description\":\"Modal_description__fuqXK\",\"confirmationText\":\"Modal_confirmationText__97MEf\"};","import React, { useState, useEffect, useRef } from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport { Modal } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport XLSX from 'sheetjs-style';\r\nimport ChannelService from '../../../channel/ChannelService';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nimport Button from '../../../../shared/components/button/Button';\r\n\r\nfunction ImportBusinessRulesModalComponent({\r\n  show,\r\n  onHide,\r\n  onImportBusinessRules,\r\n  setClearFileName,\r\n  clearFileName,\r\n}) {\r\n  const chooseFileRef = useRef();\r\n  const acceptableFiles = ['xlsx', 'xls', 'csv'];\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleUploadButton = () => {\r\n    chooseFileRef.current.click();\r\n  };\r\n\r\n  const onFileChangeCapture = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleOnImportCustomBusinessRules = () => {\r\n    const fileExtension = selectedFile.name.split('.').pop();\r\n\r\n    if (acceptableFiles.includes(fileExtension)) {\r\n      onImportBusinessRules(selectedFile);\r\n    } else {\r\n      setErrorMessage(\r\n        'Uploaded file type is not supported. Please use files in the following format (xlsx)'\r\n      );\r\n    }\r\n  };\r\n\r\n  const exportSampleTemplate = () => {\r\n    let excelData = [\r\n      {\r\n        'Reference/UID': 'SRL001',\r\n        Description: 'Cinema 15 pin-protected',\r\n        Values: '',\r\n      },\r\n    ];\r\n\r\n    const fileType =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    const fileName = `template.xlsx`;\r\n    const ws = XLSX.utils.json_to_sheet(excelData);\r\n    const wb = { Sheets: { Sheet1: ws }, SheetNames: ['Sheet1'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    saveAs(data, fileName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clearFileName) {\r\n      setClearFileName(false);\r\n      setSelectedFile();\r\n      setErrorMessage('');\r\n    }\r\n\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [clearFileName]);\r\n\r\n  return (\r\n    <Modal show={show} centered size=\"lg\">\r\n      <div className={styles.body}>\r\n        <div>\r\n          <div style={{ fontWeight: 'bolder' }}>\r\n            Import custom business rules\r\n          </div>\r\n          <p className={styles.smallText}>\r\n            Download a{' '}\r\n            <span\r\n              style={{\r\n                color: '#008662',\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={exportSampleTemplate}\r\n              onKeyDown={exportSampleTemplate}\r\n              role=\"presentation\"\r\n            >\r\n              sample template\r\n            </span>{' '}\r\n            to see an example of the required format.\r\n          </p>\r\n          <p\r\n            style={{\r\n              marginTop: '-15px',\r\n              color: 'red',\r\n              fontSize: '14px',\r\n            }}\r\n          >\r\n            {errorMessage}\r\n          </p>\r\n\r\n          <div className=\"d-flex\">\r\n            <Button\r\n              text=\"Choose file\"\r\n              size=\"lg\"\r\n              style={{\r\n                marginTop: '30px',\r\n                marginLeft: '0',\r\n              }}\r\n              onClick={handleUploadButton}\r\n            />\r\n            <input\r\n              ref={chooseFileRef}\r\n              hidden\r\n              type=\"file\"\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n              onChange={onFileChangeCapture}\r\n            />\r\n\r\n            <p\r\n              className={styles.fileName}\r\n              title={selectedFile && selectedFile.name}\r\n            >\r\n              {selectedFile && selectedFile.name}\r\n            </p>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              paddingTop: '10px',\r\n            }}\r\n          >\r\n            <small>Acceptable format: Excel</small>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.buttons}>\r\n          <Button text=\"Cancel\" defaultBtn onClick={onHide} />\r\n          <Button\r\n            text=\"Import\"\r\n            onClick={handleOnImportCustomBusinessRules}\r\n            disabled={!selectedFile}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nImportBusinessRulesModalComponent.propTypes = {\r\n  onImportBusinessRules: PropTypes.func.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  setClearFileName: PropTypes.func.isRequired,\r\n  clearFileName: PropTypes.bool.isRequired,\r\n  show: PropTypes.bool,\r\n};\r\nImportBusinessRulesModalComponent.defaultProps = {\r\n  show: false,\r\n};\r\nImportBusinessRulesModalComponent.displayName =\r\n  'ImportBusinessRulesModalComponent';\r\n\r\nexport default ImportBusinessRulesModalComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"timeRange\":\"styles_timeRange__fFBeK\",\"startTimeWrapper\":\"styles_startTimeWrapper__xGwM6\",\"endTimeWrapper\":\"styles_endTimeWrapper__5PeD4\",\"timeRangeWrapper\":\"styles_timeRangeWrapper__7Zru3\",\"arrowIcon\":\"styles_arrowIcon__ZXw0L\",\"errorMessage\":\"styles_errorMessage__OQGrf\"};","import { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport styles from './styles.module.css';\r\nimport CustomTimeInput from '../custom-time-input/CustomTimeInput';\r\nimport { shortArrowRightIcon } from '../../assets';\r\n\r\nconst CustomTimeRangeInput = forwardRef(\r\n  (\r\n    {\r\n      value,\r\n      disabled,\r\n      onChange,\r\n      validate,\r\n      onValidate,\r\n      errorMessage,\r\n      clearValues,\r\n    },\r\n    ref\r\n  ) => {\r\n    const startRef = useRef();\r\n    const endRef = useRef();\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [endTime, setEndTime] = useState(null);\r\n    const shouldValidate = typeof onValidate === 'function' && validate;\r\n\r\n    // Checking and setting values\r\n    const handleOnChange = (name, value) => {\r\n      if (name === 'start') setStartTime(value);\r\n      else setEndTime(value);\r\n\r\n      if (typeof onChange === 'function') {\r\n        onChange({\r\n          start: name === 'start' ? value : startTime,\r\n          end: name === 'end' ? value : endTime,\r\n        });\r\n      }\r\n    };\r\n\r\n    const isStartAfterOrEqualEnd = () => {\r\n      const startTimeHour = startRef.current.children.hour.value;\r\n      const newStartTime = new Date();\r\n      newStartTime.setHours((parseInt(startTimeHour) - 1 + 24) % 24);\r\n      const endTimeHour = endRef.current.children.hour.value;\r\n      const newEndTime = new Date();\r\n      newEndTime.setHours((parseInt(endTimeHour) - 1 + 24) % 24);\r\n      var isMaxTime = false;\r\n      if (endTime) {\r\n        let dateSplit = endTime.toLocaleString().split(' ');\r\n        isMaxTime = dateSplit[2] == 'AM' && dateSplit[1] == '12:00:00';\r\n      }\r\n      return startTime >= endTime && !isMaxTime;\r\n    };\r\n\r\n    useEffect(() => {\r\n      setStartTime(value?.start);\r\n      setEndTime(value?.end);\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n      const isAfter = isStartAfterOrEqualEnd();\r\n      if (typeof onValidate === 'function') onValidate(isAfter);\r\n    }, [startTime, endTime]);\r\n\r\n    return (\r\n      <div className={styles.timeRange}>\r\n        <div ref={ref} className={styles.timeRangeWrapper}>\r\n          <div className={styles.startTimeWrapper}>\r\n            <CustomTimeInput\r\n              ref={startRef}\r\n              value={startTime}\r\n              onChange={(value) => handleOnChange('start', value)}\r\n              validate={shouldValidate}\r\n              onValidate={onValidate}\r\n              disabled={disabled}\r\n              clearValues={clearValues}\r\n            />\r\n          </div>\r\n          <span className={styles.arrowIcon}>\r\n            <img src={shortArrowRightIcon} />\r\n          </span>\r\n          <div className={styles.endTimeWrapper}>\r\n            <CustomTimeInput\r\n              ref={endRef}\r\n              value={endTime}\r\n              onChange={(value) => handleOnChange('end', value)}\r\n              validate={shouldValidate}\r\n              onValidate={onValidate}\r\n              disabled={disabled}\r\n              clearValues={clearValues}\r\n            />\r\n          </div>\r\n        </div>\r\n        {shouldValidate && !disabled && (\r\n          <span className={styles.errorMessage}>{errorMessage}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomTimeRangeInput;\r\n","import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from 'components/channel-profiles/business-rules/BusinessRules.module.css';\r\nimport ProfileStyles from 'components/channel-profiles/ChannelProfile.module.css';\r\nimport BusinessRulesForms from 'components/channel-profiles/business-rules/BusinessRulesForms';\r\nimport SwitchComponent from 'shared/elements/switch/switch.component';\r\nimport {\r\n  downloadFileIcon,\r\n  uploadFileIcon,\r\n  magnifyingGlassSmIcon,\r\n  trashCanSmIcon,\r\n  timesIcon,\r\n} from 'assets/index';\r\nimport ImportBusinessRulesModalComponent from 'components/channel-profiles/business-rules/modals/ImportBusinessRulesModalComponent';\r\nimport SelectComponent from 'shared/elements/select/select.component';\r\nimport TimeRange from 'shared/components/time-range/TimeRange';\r\nimport CustomTimeRangeInput from 'shared/components/custom-time-range/CustomTimeRange';\r\nimport CustomTimeInput from 'shared/components/custom-time-input/CustomTimeInput';\r\n\r\nfunction BusinessRulesComponent({\r\n  customBusinessRules,\r\n  scheduleTimings,\r\n  handleScheduleChange,\r\n  handleScheduleInputChange,\r\n  handleScheduleTimeRangeChange,\r\n  assetRepeats,\r\n  handleAssetChange,\r\n  handleAssetChangeInput,\r\n  handleAssetRepeatSelectChange,\r\n  certification,\r\n  handleCertificationChange,\r\n  assetProbability,\r\n  handleAssetProbabilityChange,\r\n  handleAssetProbabilityChangeInput,\r\n  types,\r\n  handleTypeChange,\r\n  handleTypeInputChange,\r\n  callbackSaveBusinessRules,\r\n  focusInput,\r\n  onImportBusinessRules,\r\n  onChangeCustomBusinessRules,\r\n  onExportBusinessRules,\r\n  clearFileName,\r\n  setClearFileName,\r\n  onClearFileSelected,\r\n  invalidFields,\r\n  handleOnValidatePrimetimeDaypart,\r\n  executeDaypartClearValues,\r\n  handleOnValidatePrimetimeJunction,\r\n}) {\r\n  const {\r\n    scheduleFields,\r\n    assetFields,\r\n    assetProbabilityFields,\r\n    typeFields,\r\n  } = BusinessRulesForms;\r\n  const switchBox = ['Yes', 'No'];\r\n  const slotDurationMinutesRef = useRef();\r\n  const advertsMaxRef = useRef();\r\n  const advertsTargetRef = useRef();\r\n  const [isMounted, setIsMounted] = useState(true);\r\n  const dailyRefreshMinRef = useRef();\r\n  const paddingMinRef = useRef();\r\n  const paddingMaxRef = useRef();\r\n  const paddingTargetRef = useRef();\r\n  const premierGradesRef = useRef();\r\n  const primetimePeriodWeeksRef = useRef();\r\n  const premierDaysRef = useRef();\r\n  const maximumPlaysRef = useRef();\r\n  const maximumPeriodRef = useRef();\r\n  const endProbabilityRef = useRef();\r\n  const underplayedWeightingRef = useRef();\r\n  const overplayedWeightingRef = useRef();\r\n  const customBusinessSearchRef = useRef();\r\n  const sameChannelRepeatsRef = useRef();\r\n  const crossChannelRepeatsRef = useRef();\r\n  const primeTimeIntervalRef = useRef();\r\n  const bodyRef = useRef();\r\n  const [isBrowserSmall, setIsBrowserSmall] = useState(false);\r\n  const [isBrowserExtraSmall, setIsBrowserExtraSmall] = useState(false);\r\n  const [\r\n    showImportBusinessRulesModal,\r\n    setShowImportBusinessRulesModal,\r\n  ] = useState(false);\r\n  const [\r\n    customBusinessRulesSearchKey,\r\n    setCustomBusinessRulesSearchKey,\r\n  ] = useState('');\r\n  const [\r\n    customBusinessRulesSavedSearchKey,\r\n    setCustomBusinessRulesSavedSearchKey,\r\n  ] = useState('');\r\n  const [importedBusinessRules, setImportedBusinessRules] = useState([]);\r\n  const [\r\n    customBusinessSearchIsActive,\r\n    setCustomBusinessSearchIsActive,\r\n  ] = useState(false);\r\n  const inputTypeNumberInvalidInputs = ['e', '+', '-', '.'];\r\n\r\n  const getSelectionType = (name) => {\r\n    const time = BusinessRulesForms.timeList.find((o) => o.name === name);\r\n    return time.name;\r\n  };\r\n\r\n  const handleOnChangeTimeRange = (data, name) => {\r\n    if (name === 'primetimeJunction') {\r\n      handleScheduleTimeRangeChange({\r\n        primetimeHour: data.start,\r\n        primetimeMinutes: data.end,\r\n      }, true);\r\n    }\r\n\r\n    if (name === 'matureContent') {\r\n      handleScheduleTimeRangeChange({\r\n        matureContentStartTime: data.startTime,\r\n        matureContentEndTime: data.endTime,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removedDecimal = (e) => {\r\n    if(e.target.value === \"\"){\r\n      e.target.value = '';\r\n    }\r\n  }\r\n\r\n  const includeDecimal = (value) => {\r\n    return value.includes('.')\r\n  }\r\n\r\n  const scheduleInputChange = (e, name) => {\r\n    var value = (!name ? e.target.value : e) || '';\r\n    var decimalValue = value.toString()\r\n\r\n    if(includeDecimal(decimalValue)){\r\n      return false\r\n    }else{\r\n      if(value.length > 1)\r\n      {\r\n        value = Number(value).toString()\r\n      }\r\n   \r\n      handleScheduleInputChange(name || e.target.name, value );\r\n    }\r\n  };\r\n\r\n  const assetRepeatsSelectChange = (name, data) => {\r\n    handleAssetRepeatSelectChange(name, data.name);\r\n  };\r\n\r\n  const assetRepeatInputChange = (e) => {\r\n    var value = e.target.value\r\n    var decimalValue = e.target.value.toString()\r\n\r\n    if(includeDecimal(decimalValue)){\r\n      return false\r\n    }else{\r\n      if(e.target.value.length > 1)\r\n      {\r\n        value = Number(e.target.value).toString()\r\n      }\r\n   \r\n      handleAssetChangeInput(e.target.name, value );\r\n    }\r\n  };\r\n\r\n  const assetProbabilityInputChange = (e) => {\r\n    var value = e.target.value\r\n    var decimalValue = e.target.value.toString()\r\n\r\n    if(includeDecimal(decimalValue)){\r\n      return false\r\n    }else{\r\n      if(e.target.value.length > 1)\r\n      {\r\n        value = Number(e.target.value).toString()\r\n      }\r\n   \r\n      handleAssetProbabilityChangeInput(e.target.name, value );\r\n    }\r\n  };\r\n  \r\n  const typeInputChange = (e) => {\r\n    var value = e.target.value\r\n    var decimalValue = e.target.value.toString()\r\n\r\n    if(includeDecimal(decimalValue)){\r\n      return false\r\n    }else{\r\n      if(e.target.value.length > 1)\r\n      {\r\n        value = Number(e.target.value).toString()\r\n      }\r\n   \r\n      handleTypeInputChange(e.target.name, value );\r\n    }\r\n  };\r\n\r\n  const focusRequiredField = (inputName) => {\r\n    switch (inputName) {\r\n      case 'slotDurationMinutes':\r\n        slotDurationMinutesRef.current.focus();\r\n        break;\r\n      case 'advertsMax':\r\n        advertsMaxRef.current.focus();\r\n        break;\r\n      case 'advertsTarget':\r\n        advertsTargetRef.current.focus();\r\n        break;\r\n      case 'dailyRefresh':\r\n        dailyRefreshMinRef.current.focus();\r\n        break;\r\n      case 'paddingMin':\r\n        paddingMinRef.current.focus();\r\n        break;\r\n      case 'paddingMax':\r\n        paddingMaxRef.current.focus();\r\n        break;\r\n      case 'paddingTarget':\r\n        paddingTargetRef.current.focus();\r\n        break;\r\n      case 'premierGrades':\r\n        premierGradesRef.current.focus();\r\n        break;\r\n      case 'primetimePeriodWeeks':\r\n        primetimePeriodWeeksRef.current.focus();\r\n        break;\r\n      case 'premierDays':\r\n        premierDaysRef.current.focus();\r\n        break;\r\n      case 'maximumPlays':\r\n        maximumPlaysRef.current.focus();\r\n        break;\r\n      case 'maximumPeriod':\r\n        maximumPeriodRef.current.focus();\r\n        break;\r\n      case 'endProbability':\r\n        endProbabilityRef.current.focus();\r\n        break;\r\n      case 'underplayedWeighting':\r\n        underplayedWeightingRef.current.focus();\r\n        break;\r\n      case 'overplayedWeighting':\r\n        overplayedWeightingRef.current.focus();\r\n        break;\r\n      case 'sameChannelRepeatsAfter':\r\n        sameChannelRepeatsRef.current.focus();\r\n        break;\r\n      case 'crossChannelRepeatsPeriod':\r\n        crossChannelRepeatsRef.current.focus();\r\n        break;\r\n      case 'primeTimeIntervalPeriod':\r\n        primeTimeIntervalRef.current.focus();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const isInvalid = (fieldName) => invalidFields.includes(fieldName);\r\n\r\n  const getBodyWidth = () => {\r\n    if (bodyRef.current) return bodyRef.current.offsetWidth;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (getBodyWidth() < 730) {\r\n        setIsBrowserSmall(false);\r\n        setIsBrowserExtraSmall(true);\r\n      } else if (getBodyWidth() < 1100) {\r\n        setIsBrowserSmall(true);\r\n        setIsBrowserExtraSmall(false);\r\n      } else {\r\n        setIsBrowserSmall(false);\r\n        setIsBrowserExtraSmall(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => document.removeEventListener('resize', handleResize);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  const assetProbabilityData = (data, assetProbabilityDisable) => {\r\n    if (data.name === 'playDistribution') {\r\n      return (\r\n        <div\r\n          className={`col-12 row ${Styles.businessLabel} ${Styles.endProbability}`}\r\n          disabled={assetProbabilityDisable}\r\n        >\r\n          <div className={`${Styles.inputLabel} ${Styles.endProbabilityInputLabel}`}>\r\n            End probability (%):\r\n          </div>\r\n\r\n          <input\r\n            ref={endProbabilityRef}\r\n            type=\"number\"\r\n            className={`mx-3\r\n              ${Styles.formInput}\r\n              ${isInvalid('playDistributionEndProbability')\r\n                && !assetProbabilityDisable\r\n                && Styles.invalidField}\r\n            `}\r\n            min={0}\r\n            name=\"playDistributionEndProbability\"\r\n            value={assetProbabilityDisable ? \"\" : assetProbability.playDistributionEndProbability}     \r\n            onChange={assetProbabilityInputChange}\r\n            onKeyUp={(evt) => removedDecimal(evt)}          \r\n            disabled={assetProbabilityDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (data.name === 'underplayedWeighting') {\r\n      return (\r\n        <div\r\n          className={`col-12 row ${Styles.businessLabel} ${Styles.underplayedWeighting}`}\r\n          disabled={assetProbabilityDisable}\r\n        >\r\n          <div className={`${Styles.inputLabel} ${Styles.underplayedWeightingInputLabel}`}>\r\n            Weighting (%):\r\n          </div>\r\n          <input\r\n            ref={underplayedWeightingRef}\r\n            type=\"number\"\r\n            className={`${Styles.underplayedWeightingInput}\r\n              ${Styles.formInput}\r\n              ${isInvalid('underplayedWeightingWeight')\r\n                && !assetProbabilityDisable\r\n                && Styles.invalidField}`}\r\n            min={0}\r\n            name=\"underplayedWeightingWeight\"\r\n            onKeyUp={(evt) => removedDecimal(evt)}\r\n            value={assetProbabilityDisable ? \"\" : assetProbability.underplayedWeightingWeight}\r\n            onChange={assetProbabilityInputChange}\r\n            disabled={assetProbabilityDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (data.name === 'overplayedWeighting') {\r\n      return (\r\n        <div\r\n          className={`col-12 row ${Styles.businessLabel} ${Styles.overplayedWeighting}`}\r\n          disabled={assetProbabilityDisable}\r\n        >\r\n          <div className={`${Styles.inputLabel} ${Styles.overplayedWeightingInputLabel}`}>\r\n            Weighting (%):\r\n          </div>\r\n          <input\r\n            ref={overplayedWeightingRef}\r\n            type=\"number\"\r\n            className={`${Styles.overplayedWeightingInput}\r\n              ${Styles.formInput}\r\n              ${isInvalid('overplayedWeightingWeight')\r\n                && !assetProbabilityDisable\r\n                && Styles.invalidField}\r\n            `}\r\n            min={0}\r\n            name=\"overplayedWeightingWeight\"\r\n            value={assetProbabilityDisable ? \"\" : assetProbability.overplayedWeightingWeight}     \r\n            onChange={assetProbabilityInputChange}\r\n            onKeyUp={(evt) => removedDecimal(evt)}\r\n            disabled={assetProbabilityDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const assetDataDiv = (data, assetDisable) => {\r\n    if (data.name === 'highGradeAsset') {\r\n      return (\r\n        <div\r\n          className={`col-12 pt-2 row ${Styles.businessLabel}`}\r\n          disabled={assetDisable}\r\n          hidden\r\n        >\r\n          <div className={Styles.inputLabel}>Premiere grades:</div>\r\n          <input\r\n            ref={premierGradesRef}\r\n            type=\"number\"\r\n            className={`${Styles.formInput}`}\r\n            min={0}\r\n            name=\"premierGrades\"\r\n            value={assetDisable ? \"\" : assetRepeats.premierGrades}     \r\n            onChange={assetRepeatInputChange}\r\n            disabled={assetDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (data.name === 'differentProgrammesPrimetime') {\r\n      return (\r\n        <div\r\n          className={`col-12 pt-2 row ${Styles.businessLabel}`}\r\n          disabled={assetDisable}\r\n        >\r\n          <div className={Styles.inputLabel}>Period (In weeks):</div>\r\n\r\n          <input\r\n            ref={primetimePeriodWeeksRef}\r\n            type=\"number\"\r\n            className={` ${Styles.formInput}`}\r\n            min={0}\r\n            name=\"primetimePeriodWeeks\"\r\n            value={assetRepeats.primetimePeriodWeeks}\r\n            onChange={assetRepeatInputChange}\r\n            disabled={assetDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (data.name === 'postPremierAssetHoldback') {\r\n      return (\r\n        <div\r\n          className={`col-12 pt-2 row ${Styles.businessLabel}`}\r\n          disabled={assetDisable}\r\n        >\r\n          <div className={Styles.inputLabel}>Days:</div>\r\n          <input\r\n            ref={premierDaysRef}\r\n            type=\"number\"\r\n            className={` ${Styles.formInput}`}\r\n            min={0}\r\n            name=\"postPremierAssetDays\"\r\n            value={assetRepeats.postPremierAssetDays}\r\n            onChange={assetRepeatInputChange}\r\n            disabled={assetDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (data.name === 'maximumPlays') {\r\n      return (\r\n        <>\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel} ${Styles.maximumPlays}`}\r\n            disabled={assetDisable}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.maximumPlaysInputLabel}`}>\r\n              Plays:\r\n            </div>\r\n            <input\r\n              ref={maximumPlaysRef}\r\n              type=\"number\"\r\n              className={`${Styles.maximumPlaysInput}\r\n                ${Styles.formInput}\r\n                ${isInvalid('maximumPlaysPlays')\r\n                  && !assetDisable\r\n                  && Styles.invalidField}`}\r\n              min={0}\r\n              name=\"maximumPlaysPlays\"\r\n              value={assetDisable ? \"\" : assetRepeats.maximumPlaysPlays}     \r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              onChange={assetRepeatInputChange}\r\n              disabled={assetDisable}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n            />\r\n          </div>\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel}`}\r\n            disabled={assetDisable}\r\n          >\r\n            <div className={Styles.inputLabel}>\r\n              <span>Period</span>\r\n              <div className={Styles.select}>\r\n                <SelectComponent\r\n                  text={getSelectionType(assetRepeats.maximumPlaysPeriodSelect)}\r\n                  width=\"100%\"\r\n                  list={BusinessRulesForms.timeList}\r\n                  onSelect={(obj) =>\r\n                    assetRepeatsSelectChange('maximumPlaysPeriodSelect', obj)\r\n                  }\r\n                  disabled={assetDisable}\r\n                />\r\n              </div>\r\n              <span>:</span>\r\n            </div>\r\n            <input\r\n              ref={maximumPeriodRef}\r\n              type=\"number\"\r\n              className={`\r\n                ${Styles.formInput}\r\n                ${isInvalid('maximumPlaysPeriodInWeeks') &&\r\n                  !assetDisable &&\r\n                  Styles.invalidField}\r\n              `}\r\n              min={0}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              name=\"maximumPlaysPeriodInWeeks\"\r\n              value={assetDisable ? \"\" : assetRepeats.maximumPlaysPeriodInWeeks}     \r\n\r\n              onChange={assetRepeatInputChange}\r\n              disabled={assetDisable}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    if (data.name === 'sameChannelRepeats') {\r\n      return (\r\n        <div\r\n          className={`col-12 row ${Styles.businessLabel} ${Styles.sameChannelRepeats}`}\r\n          disabled={assetDisable}\r\n        >\r\n          <div className={`${Styles.inputLabel} ${Styles.sameChannelRepeatsAfter}`}>\r\n            <span>After</span>\r\n            <div className={`${Styles.select} ${Styles.sameChannelRepeatsAfterSelect}`}>\r\n              <SelectComponent\r\n                text={getSelectionType(\r\n                  assetRepeats.sameChannelRepeatsAfterSelect\r\n                )}\r\n                width=\"100%\"\r\n                list={BusinessRulesForms.timeList}\r\n                onSelect={(obj) =>\r\n                  assetRepeatsSelectChange('sameChannelRepeatsAfterSelect', obj)\r\n                }\r\n                disabled={assetDisable}\r\n              />\r\n            </div>\r\n            <span>:</span>\r\n          </div>\r\n          <input\r\n            ref={sameChannelRepeatsRef}\r\n            type=\"number\"\r\n            className={`${Styles.sameChannelRepeatsAfterInput}\r\n              ${Styles.formInput}\r\n              ${isInvalid('sameChannelRepeatsAfter')\r\n                && !assetDisable\r\n                && Styles.invalidField}`}\r\n            min={0}\r\n            name=\"sameChannelRepeatsAfter\"\r\n            onKeyUp={(evt) => removedDecimal(evt)}\r\n            value={assetDisable ? \"\" : assetRepeats.sameChannelRepeatsAfter}\r\n            onChange={assetRepeatInputChange}\r\n            disabled={assetDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (data.name === 'crossChannelRepeats') {\r\n      return (\r\n        <div\r\n          className={`col-12 row ${Styles.businessLabel} ${Styles.crossChannelRepeats}`}\r\n          disabled={assetDisable}\r\n        >\r\n          <div\r\n            className={`${Styles.inputLabel} ${Styles.crossChannelRepeatsLabel}`}\r\n          >\r\n            <span>Period</span>\r\n            <div className={Styles.select}>\r\n              <SelectComponent\r\n                text={getSelectionType(\r\n                  assetRepeats.crossChannelRepeatsPeriodSelect\r\n                )}\r\n                width=\"100%\"\r\n                list={BusinessRulesForms.timeList}\r\n                onSelect={(obj) =>\r\n                  assetRepeatsSelectChange(\r\n                    'crossChannelRepeatsPeriodSelect',\r\n                    obj\r\n                  )\r\n                }\r\n                disabled={assetDisable}\r\n              />\r\n            </div>\r\n            <span>:</span>\r\n          </div>\r\n          <input\r\n            ref={crossChannelRepeatsRef}\r\n            type=\"number\"\r\n            className={`mx-2\r\n              ${Styles.formInput}\r\n              ${isInvalid('crossChannelRepeatsPeriod') &&\r\n                !assetDisable &&\r\n                Styles.invalidField}\r\n            `}\r\n            min={0}\r\n            name=\"crossChannelRepeatsPeriod\"\r\n            value={assetDisable ? \"\" : assetRepeats.crossChannelRepeatsPeriod}     \r\n            onKeyUp={(evt) => removedDecimal(evt)}\r\n            onChange={assetRepeatInputChange}\r\n            disabled={assetDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (data.name === 'primeTimeInterval') {\r\n      return (\r\n        <div\r\n          className={`col-12 row ${Styles.businessLabel} ${Styles.primeTimeInterval}`}\r\n          disabled={assetDisable}\r\n        >\r\n          <div\r\n            className={`${Styles.inputLabel} ${Styles.primeTimeIntervalLabel}`}\r\n          >\r\n            <span>Period</span>\r\n            <div className={Styles.select}>\r\n              <SelectComponent\r\n                text={getSelectionType(\r\n                  assetRepeats.primeTimeIntervalPeriodSelect\r\n                )}\r\n                width=\"100%\"\r\n                list={BusinessRulesForms.timeList}\r\n                onSelect={(obj) =>\r\n                  assetRepeatsSelectChange('primeTimeIntervalPeriodSelect', obj)\r\n                }\r\n                disabled={assetDisable}\r\n              />\r\n            </div>\r\n            <span>:</span>\r\n          </div>\r\n          <input\r\n            ref={primeTimeIntervalRef}\r\n            type=\"number\"\r\n            className={`mx-2\r\n              ${Styles.formInput}\r\n              ${isInvalid('primeTimeIntervalPeriod') &&\r\n                !assetDisable &&\r\n                Styles.invalidField}\r\n            `}\r\n            min={0}\r\n            name=\"primeTimeIntervalPeriod\"\r\n            value={assetDisable ? \"\" : assetRepeats.primeTimeIntervalPeriod}     \r\n            onKeyUp={(evt) => removedDecimal(evt)}\r\n            onChange={assetRepeatInputChange}\r\n            disabled={assetDisable}\r\n            onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const disabledTypeFields = (typeField) => !types[typeField.name];\r\n\r\n  const disabledTargetInMinutes = (scheduleField) => !scheduleTimings[scheduleField.name];\r\n\r\n  const activeSwitchMinutes = (scheduleField) => scheduleTimings[scheduleField.name];\r\n\r\n  const handleOnShowImportBusinessRulesModal = () => {\r\n    setShowImportBusinessRulesModal(true);\r\n  };\r\n\r\n  const handleOnHideImportBusinessRulesModal = () => {\r\n    setShowImportBusinessRulesModal(false);\r\n    onClearFileSelected();\r\n  };\r\n\r\n  const handleOnImportBusinessRules = (file) => {\r\n    onImportBusinessRules(file);\r\n    handleOnHideImportBusinessRulesModal();\r\n  };\r\n\r\n  const handleOnChangeCustomBusinessRulesSearchKey = (e) => {\r\n    setCustomBusinessRulesSearchKey(e.target.value);\r\n  };\r\n\r\n  const handleOnSearchCustomBusinessRules = () => {\r\n    const filteredBusinessRules = customBusinessRules.filter((rule) =>\r\n      Object.values(rule).some((o) =>\r\n        o?.toLowerCase().includes(customBusinessRulesSearchKey.toLowerCase())\r\n      )\r\n    );\r\n\r\n    setImportedBusinessRules(filteredBusinessRules);\r\n    setCustomBusinessSearchIsActive(true);\r\n    setCustomBusinessRulesSavedSearchKey(customBusinessRulesSearchKey);\r\n  };\r\n\r\n  const triggerOnSearchCustomBusinessRules = (e) => {\r\n    if (e.key === 'Enter') handleOnSearchCustomBusinessRules();\r\n  };\r\n\r\n  const handleOnClearCustomBusinessSearch = () => {\r\n    setImportedBusinessRules(customBusinessRules);\r\n    setCustomBusinessSearchIsActive(false);\r\n    setCustomBusinessRulesSearchKey('');\r\n    setCustomBusinessRulesSavedSearchKey('');\r\n  };\r\n\r\n  const getAssetType = (typeId) => {\r\n    switch (typeId) {\r\n      case 1:\r\n        return 'Library';\r\n      case 2:\r\n        return 'Free Play';\r\n      case 3:\r\n        return 'Priority';\r\n      case 4:\r\n        return 'Placed';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    focusRequiredField(focusInput);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [focusInput]);\r\n\r\n  useEffect(() => {\r\n    if(isMounted){\r\n    setImportedBusinessRules(customBusinessRules);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }\r\n      return () => {\r\n        setIsMounted(false);\r\n      };\r\n  }, [customBusinessRules]);\r\n\r\n  useEffect(() => {\r\n    const backdropClicked = (e) => {\r\n      if (\r\n        customBusinessSearchIsActive &&\r\n        customBusinessSearchRef.current &&\r\n        !customBusinessSearchRef.current.contains(e.target)\r\n      ) {\r\n        setCustomBusinessRulesSearchKey(customBusinessRulesSavedSearchKey);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  });\r\n\r\n  return (\r\n    <div ref={bodyRef}>\r\n      <div className={`row ${Styles.divBusiness}`}>\r\n        <div\r\n          className={`${\r\n            isBrowserExtraSmall\r\n              ? 'col-12'\r\n              : (isBrowserSmall && 'col-6') || 'col-4'\r\n          } ${Styles.signaturesBusinessHead}`}\r\n        >\r\n          <div className={Styles.businessHead} hidden>\r\n            <strong>Signatures</strong>\r\n          </div>         \r\n\r\n          <div className={Styles.businessHead}>\r\n            <strong>Schedules timings</strong>\r\n          </div>\r\n          <div\r\n            className={`col-12 mt-3 pb-1 ${Styles.businessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[0])}\r\n          >\r\n            <SwitchComponent\r\n              label={scheduleFields[0].label}\r\n              text={switchBox}\r\n              active={activeSwitchMinutes(scheduleFields[0])}\r\n              blurredOnInactive={!activeSwitchMinutes(scheduleFields[0])}\r\n              onSwitch={handleScheduleChange}\r\n              name={scheduleFields[0].name}\r\n            />\r\n          </div>\r\n          <div\r\n            className={`col-12 ${Styles.businessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[0])}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.newPrimetimeDaypart}`}>\r\n              <div className={`${Styles.primetimeDaypartLabel}`}>Daypart:</div>\r\n              <div className={`${Styles.primetimeDaypart}`}>\r\n                <CustomTimeRangeInput\r\n                  value={{\r\n                    start: scheduleTimings.primetimeHour,\r\n                    end: scheduleTimings.primetimeMinutes,\r\n                  }}\r\n                  onChange={(data) =>\r\n                    handleOnChangeTimeRange(data, scheduleFields[0].name)\r\n                  }\r\n                  onValidate={handleOnValidatePrimetimeDaypart}\r\n                  disabled={disabledTargetInMinutes(scheduleFields[0])}\r\n                  validate={(isInvalid('primetimeHour')\r\n                    || isInvalid('primetimeMinutes'))\r\n                    && !disabledTargetInMinutes(scheduleFields[0])\r\n                  }\r\n                  clearValues={executeDaypartClearValues}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${Styles.inputLabel} ${Styles.newPrimetimeJunctionTime}`}>\r\n              <div className={Styles.newPrimetimeJunctionTimeLabel}>Junction:</div>\r\n              <div className={Styles.newPrimetimeJunctionTimeInput}>\r\n                <CustomTimeInput\r\n                  value={scheduleTimings.newPrimetimeJunctionTime}\r\n                  onChange={(value) => scheduleInputChange(value, 'newPrimetimeJunctionTime')}\r\n                  validate={isInvalid('newPrimetimeJunctionTime') && !disabledTargetInMinutes(scheduleFields[0])}\r\n                  disabled={disabledTargetInMinutes(scheduleFields[0])}\r\n                  min={scheduleTimings.primetimeHour}\r\n                  max={scheduleTimings.primetimeMinutes}\r\n                  clearValues={executeDaypartClearValues}\r\n                  onValidate={handleOnValidatePrimetimeJunction}\r\n                  defaultValue={scheduleTimings.primetimeHour}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            hidden\r\n            className={`col-12 mt-3 pb-1 ${Styles.businessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[4])}\r\n          >\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 mt-3 pb-1 ${Styles.businessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[2])}\r\n          >\r\n            <SwitchComponent\r\n              label={scheduleFields[2].label}\r\n              text={switchBox}\r\n              active={activeSwitchMinutes(scheduleFields[2])}\r\n              blurredOnInactive={!activeSwitchMinutes(scheduleFields[2])}\r\n              onSwitch={handleScheduleChange}\r\n              name={scheduleFields[2].name}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel} ${Styles.interstitialsMinBusinessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[2])}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.interstitialsMin}`}>\r\n              <span>Min (minutes):</span>\r\n            </div>\r\n            <input\r\n              ref={paddingMinRef}\r\n              type=\"number\"\r\n              className={`${Styles.interstitialsMinInput}\r\n                ${Styles.formInput}\r\n                ${isInvalid('interstitialsMin') &&\r\n                  !disabledTargetInMinutes(scheduleFields[2]) &&\r\n                  Styles.invalidField}\r\n              `}\r\n              min={0}\r\n              max={100}\r\n              name=\"interstitialsMin\"\r\n              value={disabledTargetInMinutes(scheduleFields[2]) ? \"\" : scheduleTimings.interstitialsMin}\r\n              onChange={scheduleInputChange}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              disabled={disabledTargetInMinutes(scheduleFields[2])}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n                && evt.preventDefault()}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[2])}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.interstitialsMax}`}>\r\n              <span>Max (minutes):</span>\r\n            </div>\r\n            <input\r\n              ref={paddingMaxRef}\r\n              type=\"number\"\r\n              className={`${Styles.interstitialsMaxInput}\r\n                ${Styles.formInput}\r\n                ${isInvalid('interstitialsMax') &&\r\n                  !disabledTargetInMinutes(scheduleFields[2]) &&\r\n                  Styles.invalidField}\r\n              `}\r\n              min={0}\r\n              max={100}\r\n              name=\"interstitialsMax\"\r\n              value={disabledTargetInMinutes(scheduleFields[2]) ? \"\" : scheduleTimings.interstitialsMax}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              onChange={scheduleInputChange}\r\n              disabled={disabledTargetInMinutes(scheduleFields[2])}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n            />\r\n          </div>\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[2])}\r\n          >\r\n            <div\r\n              className={`${Styles.inputLabel} ${Styles.interstitialsTargetSelect}`}\r\n            >\r\n              <span>Target (minutes):</span>\r\n            </div>\r\n            <input\r\n              ref={paddingTargetRef}\r\n              type=\"number\"\r\n              className={`${Styles.interstitialsTargetInput}\r\n                ${Styles.formInput}\r\n                ${isInvalid('interstitialsTarget') &&\r\n                  activeSwitchMinutes(scheduleFields[2]) &&\r\n                  Styles.invalidField}\r\n              `}\r\n              min={0}\r\n              max={100}\r\n              name=\"interstitialsTarget\"\r\n              value={disabledTargetInMinutes(scheduleFields[2]) ? \"\" : scheduleTimings.interstitialsTarget}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              onChange={scheduleInputChange}\r\n              disabled={disabledTargetInMinutes(scheduleFields[2])}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 mt-3 pb-1 ${Styles.businessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[1])}\r\n          >\r\n            <SwitchComponent\r\n              label={scheduleFields[1].label}\r\n              text={switchBox}\r\n              active={activeSwitchMinutes(scheduleFields[1])}\r\n              blurredOnInactive={!activeSwitchMinutes(scheduleFields[1])}\r\n              onSwitch={handleScheduleChange}\r\n              name={scheduleFields[1].name}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel} ${Styles.slotDurationTimeBusinessLabel}`}\r\n            disabled={disabledTargetInMinutes(scheduleFields[1])}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.slotDurationTimeLabel}`}>\r\n              <span>Time (minutes):</span>\r\n            </div>\r\n            <input\r\n              // name={scheduleFields[0].name}\r\n              ref={slotDurationMinutesRef}\r\n              type=\"number\"\r\n              className={`\r\n                ${Styles.formInput}\r\n                ${isInvalid('slotTime') &&\r\n                  activeSwitchMinutes(scheduleFields[1]) &&\r\n                  Styles.invalidField}\r\n              `}\r\n              min={0}\r\n              max={100}\r\n              name=\"slotTime\"\r\n              value={disabledTargetInMinutes(scheduleFields[1]) ? \"\" : scheduleTimings.slotTime}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              onChange={scheduleInputChange}\r\n              disabled={disabledTargetInMinutes(scheduleFields[1])}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key)\r\n              && evt.preventDefault()}\r\n            />\r\n          </div>\r\n          \r\n        </div>\r\n        <div\r\n          className={`${\r\n            isBrowserExtraSmall\r\n              ? 'col-12'\r\n              : (isBrowserSmall && 'col-6') || 'col-4'\r\n          } ${Styles.assetRepeatsBusinessHead}`}\r\n        >\r\n          <div className={Styles.businessHead}>\r\n            <strong>Asset repeats</strong>\r\n          </div>\r\n\r\n          {assetFields.map((data) => {\r\n            let assetDisable = true;\r\n            if (data.name === 'sameChannelRepeats') {\r\n              assetDisable = !assetRepeats.sameChannelRepeats;\r\n            } else if (data.name === 'crossChannelRepeats') {\r\n              assetDisable = !assetRepeats.crossChannelRepeats;\r\n            } else if (data.name === 'primeTimeInterval') {\r\n              assetDisable = !assetRepeats.primeTimeInterval;\r\n            } else if (data.name === 'primeTimeInterval') {\r\n              assetDisable = !assetRepeats.primeTimeInterval;\r\n            } else if (data.name === 'acrossChannelRepeats') {\r\n              assetDisable = !assetRepeats.acrossChannelRepeats;\r\n            } else if (data.name === 'differentProgrammesPrimetime') {\r\n              assetDisable = !assetRepeats.differentProgrammesPrimetime;\r\n            } else if (data.name === 'postPremierAssetHoldback') {\r\n              assetDisable = !assetRepeats.postPremierAssetHoldback;\r\n            } else if (data.name === 'addFreePlays') {\r\n              assetDisable = !assetRepeats.addFreePlays;\r\n            } else if (data.name === 'maximumPlays') {\r\n              assetDisable = !assetRepeats.maximumPlays;\r\n            } else if (data.name === 'exceedMaxPlayCount') {\r\n              assetDisable = !assetRepeats.exceedMaxPlayCount;\r\n            }\r\n            return (\r\n              <div key={data.id}>\r\n                <div\r\n                  className={`col-12 mt-3 pb-1 ${Styles.businessLabel}`}\r\n                  disabled={assetDisable}\r\n                >\r\n                  <SwitchComponent\r\n                    label={data.label}\r\n                    text={switchBox}\r\n                    active={!assetDisable}\r\n                    blurredOnInactive={assetDisable}\r\n                    onSwitch={handleAssetChange}\r\n                    name={data.name}\r\n                  />\r\n                </div>\r\n                {assetDataDiv(data, assetDisable)}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div\r\n          className={`${isBrowserExtraSmall || isBrowserSmall ? 'col-12' : 'col-4'}\r\n          ${Styles.certificationBusinessHead}`}\r\n        >\r\n          <div className={Styles.businessHead} hidden>\r\n            <strong>Certification</strong>\r\n          </div>\r\n          {BusinessRulesForms.certificationFields.map((data) => {\r\n            let certificationDisabled = true;\r\n            if (data.name === 'cert12PinProtected') {\r\n              certificationDisabled = !certification.cert12PinProtected;\r\n            } else if (data.name === 'cert15PinProtected') {\r\n              certificationDisabled = !certification.cert15PinProtected;\r\n            } else if (data.name === 'cert18After9pm') {\r\n              certificationDisabled = !certification.cert18After9pm;\r\n            } else if (data.name === 'cert18After10pm') {\r\n              certificationDisabled = !certification.cert18After10pm;\r\n            }\r\n            return (\r\n              <div\r\n                key={data.id}\r\n                className={`col-12 p-1 ${Styles.businessLabel}`}\r\n                disabled={certificationDisabled}\r\n                hidden\r\n              >\r\n                <SwitchComponent\r\n                  label={data.label}\r\n                  text={switchBox}\r\n                  active={!certificationDisabled}\r\n                  blurredOnInactive={certificationDisabled}\r\n                  onSwitch={handleCertificationChange}\r\n                  name={data.name}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className={Styles.businessHead}>\r\n            <strong>Asset distribution </strong>\r\n          </div>\r\n          {assetProbabilityFields.map((data) => {\r\n            let assetProbabilityDisable = true;\r\n            if (data.name === 'checkProbability') {\r\n              assetProbabilityDisable = !assetProbability.checkProbability;\r\n            } else if (data.name === 'planningNotes') {\r\n              assetProbabilityDisable = !assetProbability.planningNotes;\r\n            } else if (data.name === 'prioritisationFactor') {\r\n              assetProbabilityDisable = !assetProbability.prioritisationFactor;\r\n            } else if (data.name === 'playDistribution') {\r\n              assetProbabilityDisable = !assetProbability.playDistribution;\r\n            } else if (data.name === 'underplayedWeighting') {\r\n              assetProbabilityDisable = !assetProbability.underplayedWeighting;\r\n            } else if (data.name === 'overplayedWeighting') {\r\n              assetProbabilityDisable = !assetProbability.overplayedWeighting;\r\n            }\r\n            return (\r\n              <div key={data.id}>\r\n                <div\r\n                  key={data.id}\r\n                  className={`col-12 mt-3 pb-1 ${Styles.businessLabel}`}\r\n                  disabled={assetProbabilityDisable}\r\n                >\r\n                  <SwitchComponent\r\n                    label={data.label}\r\n                    text={switchBox}\r\n                    active={!assetProbabilityDisable}\r\n                    blurredOnInactive={assetProbabilityDisable}\r\n                    onSwitch={handleAssetProbabilityChange}\r\n                    name={data.name}\r\n                  />\r\n                </div>\r\n                {assetProbabilityData(data, assetProbabilityDisable)}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className={`${Styles.businessHead} ${Styles.fastBusinessHead}`}>\r\n            <strong>FAST</strong>\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 p-1 ${Styles.businessLabel}`}\r\n            disabled={!disabledTypeFields(typeFields[0])}\r\n          >\r\n            <SwitchComponent\r\n              label={typeFields[0].label}\r\n              text={switchBox}\r\n              active={!disabledTypeFields(typeFields[0])}\r\n              blurredOnInactive={disabledTypeFields(typeFields[0])}\r\n              onSwitch={handleTypeChange}\r\n              name={typeFields[0].name}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 ${Styles.businessLabel} ${Styles.advertsBusinessLabel}`}\r\n            disabled={disabledTypeFields(typeFields[0])}\r\n          >\r\n            <strong className={Styles.fastSubLabel}>{typeFields[1].label}</strong>\r\n          </div>\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel}`}\r\n            disabled={disabledTypeFields(typeFields[0])}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.advertsMaxLabel}`}>\r\n              <span>Max (minutes):</span>\r\n            </div>\r\n            <input\r\n              ref={advertsMaxRef}\r\n              type=\"number\"\r\n              className={`${Styles.formInput}\r\n                ${isInvalid('advertsMax')\r\n                  && !disabledTypeFields(typeFields[0])\r\n                  && Styles.invalidField}`}\r\n              min={0}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              name=\"advertsMax\"\r\n              value={disabledTypeFields(typeFields[0]) ? \"\" : types.advertsMax}\r\n\r\n              onChange={typeInputChange}\r\n              disabled={disabledTypeFields(typeFields[0])}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key) && evt.preventDefault()}\r\n            />\r\n          </div>\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel}`}\r\n            disabled={disabledTypeFields(typeFields[0])}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.advertsTargetLabel}`}>\r\n              <span>Target (minutes):</span>\r\n            </div>\r\n            <input\r\n              ref={advertsTargetRef}\r\n              type=\"number\"\r\n              className={`${Styles.formInput}\r\n                ${isInvalid('advertsTarget')\r\n                  && !disabledTypeFields(typeFields[0])\r\n                  && Styles.invalidField}`}\r\n              min={0}\r\n              name=\"advertsTarget\"\r\n              value={disabledTypeFields(typeFields[0]) ? \"\" : types.advertsTarget}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              onChange={typeInputChange}\r\n              disabled={disabledTypeFields(typeFields[0])}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key) && evt.preventDefault()}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`col-12 mt-2 ${Styles.businessLabel}`}\r\n            disabled={disabledTypeFields(typeFields[0])}\r\n          >\r\n            <strong className={Styles.fastSubLabel}>{scheduleFields[3].label}</strong>\r\n          </div>\r\n          <div\r\n            className={`col-12 row ${Styles.businessLabel} ${Styles.dailyRefreshBusinessLabel}`}\r\n            disabled={disabledTypeFields(typeFields[0])}\r\n          >\r\n            <div className={`${Styles.inputLabel} ${Styles.dailyRefreshMinLabel}`}>\r\n              <span>Min (minutes):</span>\r\n            </div>\r\n            <input\r\n              ref={dailyRefreshMinRef}\r\n              type=\"number\"\r\n              className={`${Styles.formInput}\r\n                ${isInvalid('dailyRefreshMin')\r\n                  && !disabledTypeFields(typeFields[0])\r\n                  && Styles.invalidField}`}\r\n              min={0}\r\n              name=\"dailyRefreshMin\"\r\n              value={disabledTypeFields(typeFields[0]) ? \"\" : scheduleTimings.dailyRefreshMin}\r\n              onKeyUp={(evt) => removedDecimal(evt)}\r\n              onChange={scheduleInputChange}\r\n              disabled={disabledTypeFields(typeFields[0])}\r\n              onKeyDown={(evt) => inputTypeNumberInvalidInputs.includes(evt.key) && evt.preventDefault()}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={Styles.importBusinessRules}>\r\n          <div className={Styles.importBusinessRulesHeaderWrapper}>\r\n            <div className={Styles.importBusinessRulesHeader}>\r\n              Custom business rules\r\n            </div>\r\n\r\n            <div className={Styles.importBusinessRulesHeaderActions}>\r\n              <div className={Styles.importBusinesRulesHeaderActionIcons}>\r\n                <img\r\n                  src={uploadFileIcon}\r\n                  alt=\"\"\r\n                  title=\"Import business rules\"\r\n                  onClick={handleOnShowImportBusinessRulesModal}\r\n                />\r\n              </div>\r\n              <div\r\n                className={Styles.importBusinesRulesHeaderActionIcons}\r\n                hidden={\r\n                  !customBusinessRules || customBusinessRules.length === 0\r\n                }\r\n              >\r\n                <img\r\n                  src={downloadFileIcon}\r\n                  alt=\"\"\r\n                  title=\"Export business rules\"\r\n                  onClick={onExportBusinessRules}\r\n                />\r\n              </div>\r\n              <div\r\n                ref={customBusinessSearchRef}\r\n                className={Styles.importBusiessRulesSearchWrapper}\r\n                hidden={\r\n                  !customBusinessRules || customBusinessRules.length === 0\r\n                }\r\n              >\r\n                <input\r\n                  className={Styles.importBusiessRulesSearch}\r\n                  value={customBusinessRulesSearchKey}\r\n                  onChange={handleOnChangeCustomBusinessRulesSearchKey}\r\n                  onKeyDown={triggerOnSearchCustomBusinessRules}\r\n                />\r\n\r\n                <div\r\n                  className={Styles.importBusiessRulesClearSearchIcon}\r\n                  onClick={handleOnClearCustomBusinessSearch}\r\n                  hidden={!customBusinessSearchIsActive}\r\n                >\r\n                  <img src={timesIcon} alt=\"\" />\r\n                </div>\r\n\r\n                <div\r\n                  className={Styles.importBusiessRulesSearchIcon}\r\n                  onClick={handleOnSearchCustomBusinessRules}\r\n                >\r\n                  <img src={magnifyingGlassSmIcon} alt=\"\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {customBusinessRules.length > 0 && (\r\n              <>\r\n                {importedBusinessRules.length > 0 ? (\r\n                  <div className={Styles.businessRulesList}>\r\n                    <div className={Styles.businessRulesItem}>\r\n                      <div\r\n                        className={Styles.customBusinessRulesLabel}\r\n                        title=\"Reference/UID\"\r\n                      >\r\n                        Reference/UID\r\n                      </div>\r\n                      <div\r\n                        className={Styles.customBusinessRulesLabel}\r\n                        title=\"Description\"\r\n                      >\r\n                        Description\r\n                      </div>\r\n                      <div\r\n                        className={Styles.customBusinessRulesLabel}\r\n                        title=\"Values\"\r\n                      >\r\n                        Values\r\n                      </div>\r\n                    </div>\r\n\r\n                    {importedBusinessRules.map((rule, index) => (\r\n                      <div\r\n                        key={rule.referenceUid}\r\n                        className={Styles.businessRulesItem}\r\n                      >\r\n                        <div className={Styles.businessRuleDescriptionWrapper}>\r\n                          <input\r\n                            className={Styles.businessRuleDescription}\r\n                            value={rule.referenceUid}\r\n                            title={rule.referenceUid}\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                        <div className={Styles.businessRuleDescriptionWrapper}>\r\n                          <input\r\n                            className={Styles.businessRuleDescription}\r\n                            value={rule.description}\r\n                            title={rule.description}\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                          <input\r\n                            className={`\r\n                              ${Styles.businessRuleValue}\r\n                              ${rule.isInvalid && Styles.errorInput}\r\n                            `}\r\n                            value={rule.values}\r\n                            title={rule.values}\r\n                            onChange={(e) =>\r\n                              onChangeCustomBusinessRules(e.target.value, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div hidden>\r\n                          <img\r\n                            className={Styles.trashCanSmIcon}\r\n                            src={trashCanSmIcon}\r\n                            alt=\"\"\r\n                            title=\"Remove business rule\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div className={Styles.noCustomResultWrapper}>\r\n                    No custom business rules found\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={ProfileStyles.profileViewFooter}>\r\n        <button\r\n          className={ProfileStyles.saveButton}\r\n          onClick={callbackSaveBusinessRules}\r\n          type=\"button\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      <ImportBusinessRulesModalComponent\r\n        show={showImportBusinessRulesModal}\r\n        onHide={handleOnHideImportBusinessRulesModal}\r\n        onImportBusinessRules={handleOnImportBusinessRules}\r\n        clearFileName={clearFileName}\r\n        setClearFileName={setClearFileName}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nBusinessRulesComponent.propTypes = {\r\n  signature: PropTypes.shape(),\r\n  handleSignatureChange: PropTypes.func.isRequired,\r\n  scheduleTimings: PropTypes.shape(),\r\n  handleScheduleChange: PropTypes.func.isRequired,\r\n  handleScheduleInputChange: PropTypes.func.isRequired,\r\n  assetRepeats: PropTypes.shape(),\r\n  handleAssetChange: PropTypes.func.isRequired,\r\n  handleAssetChangeInput: PropTypes.func.isRequired,\r\n  certification: PropTypes.shape(),\r\n  handleCertificationChange: PropTypes.func.isRequired,\r\n  assetProbability: PropTypes.shape(),\r\n  handleAssetProbabilityChange: PropTypes.func.isRequired,\r\n  handleAssetProbabilityChangeInput: PropTypes.func.isRequired,\r\n  callbackSaveBusinessRules: PropTypes.func.isRequired,\r\n  focusInput: PropTypes.string,\r\n  onImportBusinessRules: PropTypes.func.isRequired,\r\n  onExportBusinessRules: PropTypes.func.isRequired,\r\n  onChangeCustomBusinessRules: PropTypes.func.isRequired,\r\n  customBusinessRules: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      description: PropTypes.string.isRequired,\r\n      referenceUid: PropTypes.string.isRequired,\r\n      values: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  clearFileName: PropTypes.bool.isRequired,\r\n  setClearFileName: PropTypes.func.isRequired,\r\n  onClearFileSelected: PropTypes.func.isRequired,\r\n  channelId: PropTypes.number,\r\n  handleAssetRepeatSelectChange: PropTypes.func.isRequired,\r\n  handleScheduleTimeRangeChange: PropTypes.func.isRequired,\r\n  invalidFields: PropTypes.arrayOf(PropTypes.string),\r\n};\r\nBusinessRulesComponent.defaultProps = {\r\n  signature: null,\r\n  scheduleTimings: null,\r\n  assetRepeats: null,\r\n  certification: null,\r\n  assetProbability: null,\r\n  focusInput: null,\r\n  customBusinessRules: [],\r\n  channelId: null,\r\n  invalidFields: [],\r\n};\r\nexport default BusinessRulesComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"divBusiness\":\"Scoring_divBusiness__Y+pN3\",\"businessHead\":\"Scoring_businessHead__DwJs2\",\"scoreInput\":\"Scoring_scoreInput__KUsPk\",\"bigDiv\":\"Scoring_bigDiv__wLhFj\",\"topMargin\":\"Scoring_topMargin__Kw2QG\",\"scoringDiv\":\"Scoring_scoringDiv__yat0l\",\"scoringDescription\":\"Scoring_scoringDescription__ckkW0\",\"scoringTitle\":\"Scoring_scoringTitle__-LNkU\",\"invalidField\":\"Scoring_invalidField__sl7zb\",\"saveButton\":\"Scoring_saveButton__T3Wu1\"};","class ScoringForms {\r\n  scoringFields = [\r\n    {\r\n      id:1,\r\n      title: 'Neatness',\r\n      description: 'Assets scheduled on or near the clock hour',\r\n      name: 'neatness',\r\n    },\r\n    {\r\n      id:2,\r\n      title: 'Strength of Primetime',\r\n      description: 'Higher grade assets in primetime',\r\n      name: 'strengthofprimetime',\r\n    },\r\n    {\r\n      id:3,\r\n      title: 'Average Break Time',\r\n      description: 'Target commercial minutage',\r\n      name: 'averagebreaktime',\r\n    },\r\n    {\r\n      id:4,\r\n      title: 'Youth of Asset',\r\n      description: 'Newer assets',\r\n      name: 'youthofasset',\r\n    },\r\n    {\r\n      id:5,\r\n      title: 'UK Box Office',\r\n      description: 'Higher box office takings',\r\n      name: 'ukboxoffice',\r\n    },\r\n    {\r\n      id:6,\r\n      title: 'US Box Office',\r\n      description: 'Higher box office takings',\r\n      name: 'usboxoffice',\r\n    },\r\n    {\r\n      id:7,\r\n      title: 'Ad Optimisation',\r\n      description: 'Maximise commercial minutage',\r\n      name: 'adoptimisation',\r\n    },\r\n    {\r\n      id:8,\r\n      title: 'Free Play Utilisation',\r\n      description: '% utilisation of free plays',\r\n      name: 'freeplayutilisation',\r\n    },\r\n  ];\r\n\r\n  placeHolder = '1-9';\r\n}\r\n\r\nexport default new ScoringForms();\r\n","import React, { useEffect, useRef, useMemo, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from 'components/channel-profiles/scoring/Scoring.module.css';\r\nimport ProfileStyles from 'components/channel-profiles/ChannelProfile.module.css';\r\nimport ScoringForms from 'components/channel-profiles/scoring/ScoringForms';\r\nimport SwitchComponent from '../../../../shared/elements/switch/switch.component';\r\n\r\nconst ScoringComponent = memo(function ScoringComponent({\r\n  scoreChecked,\r\n  scores,\r\n  onChangeInputScores,\r\n  handleCheckBoxChangeScores,\r\n  callbackSaveScoring,\r\n  focusScoring,\r\n  invalidFields,\r\n}) {\r\n  const scoringData = ScoringForms.scoringFields;\r\n  const scoringData1 = scoringData.slice(0, 4)\r\n  const scoringData2 = scoringData.slice(4, 8)\r\n  \r\n  const { placeHolder } = ScoringForms;\r\n\r\n  const neatnessRef = useRef();\r\n  const primetimeRef = useRef();\r\n  const breakRef = useRef();\r\n  const youthRef = useRef();\r\n  const ukRef = useRef();\r\n  const usRef = useRef();\r\n  const adRef = useRef();\r\n  const fpRef = useRef();\r\n  const puRef = useRef();\r\n\r\n    const focusRequiredField = useMemo(() => {\r\n      return (inputName) => {\r\n        switch (inputName) {\r\n          case 'Neatness':\r\n            neatnessRef.current.focus();\r\n            break;\r\n          case 'Strength of Primetime':\r\n            primetimeRef.current.focus();\r\n            break;\r\n          case 'Average Break Time':\r\n            breakRef.current.focus();\r\n            break;\r\n          case 'Youth of Asset':\r\n            youthRef.current.focus();\r\n            break;\r\n          case 'UK Box Office':\r\n            ukRef.current.focus();\r\n            break;\r\n          case 'US Box Office':\r\n            usRef.current.focus();\r\n            break;\r\n          case 'Ad Optimisation':\r\n            adRef.current.focus();\r\n            break;\r\n          case 'Free Play Utilisation':\r\n            fpRef.current.focus();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      };\r\n    }, []);\r\n\r\n  const isInvalid = (fieldName) => invalidFields.includes(fieldName);\r\n\r\n  useEffect(() => {\r\n    neatnessRef.current.value = scores.neatness;\r\n    primetimeRef.current.value = scores.strengthofprimetime;\r\n    breakRef.current.value = scores.averagebreaktime;\r\n    youthRef.current.value = scores.youthofasset;\r\n    ukRef.current.value = scores.ukboxoffice;\r\n    usRef.current.value = scores.usboxoffice;\r\n    adRef.current.value = scores.adoptimisation;\r\n    fpRef.current.value = scores.freeplayutilisation;\r\n  }, [scores]);\r\n\r\n  useEffect(() => {\r\n    focusRequiredField(focusScoring);\r\n  }, [focusScoring]);\r\n\r\n  const dataDisabled = (data) => {\r\n\r\n    if (data.name === 'neatness') return !scoreChecked.neatness;\r\n    if (data.name === 'strengthofprimetime') return !scoreChecked.strengthofprimetime;\r\n    if (data.name === 'averagebreaktime') return !scoreChecked.averagebreaktime;\r\n    if (data.name === 'youthofasset') return !scoreChecked.youthofasset;\r\n    if (data.name === 'ukboxoffice') return !scoreChecked.ukboxoffice;\r\n    if (data.name === 'usboxoffice') return !scoreChecked.usboxoffice;\r\n    if (data.name === 'adoptimisation') return !scoreChecked.adoptimisation;\r\n    if (data.name === 'freeplayutilisation') return !scoreChecked.freeplayutilisation;\r\n    return false;\r\n  };\r\n\r\n  const dataInputValue = (data) => {\r\n    if (data.name === 'neatness') return scores.neatness ? scores.neatness : \"\";\r\n    if (data.name === 'strengthofprimetime') return scores.strengthofprimetime ? scores.strengthofprimetime : \"\" ;\r\n    if (data.name === 'averagebreaktime') return scores.averagebreaktime ? scores.averagebreaktime : \"\";\r\n    if (data.name === 'youthofasset') return scores.youthofasset ? scores.youthofasset : \"\";\r\n    if (data.name === 'ukboxoffice') return scores.ukboxoffice ? scores.ukboxoffice : \"\";\r\n    if (data.name === 'usboxoffice') return scores.usboxoffice ? scores.usboxoffice : \"\";\r\n    if (data.name === 'adoptimisation') return scores.adoptimisation ? scores.adoptimisation : \"\";\r\n    if (data.name === 'freeplayutilisation') return scores.freeplayutilisation ? scores.freeplayutilisation : \"\";\r\n    return undefined;\r\n  };\r\n\r\n  const dataInputRef = (data) => {\r\n    if (data.name === 'neatness') return neatnessRef;\r\n    if (data.name === 'strengthofprimetime') return primetimeRef;\r\n    if (data.name === 'averagebreaktime') return breakRef;\r\n    if (data.name === 'youthofasset') return youthRef;\r\n    if (data.name === 'ukboxoffice') return ukRef;\r\n    if (data.name === 'usboxoffice') return usRef;\r\n    if (data.name === 'adoptimisation') return adRef;\r\n    if (data.name === 'freeplayutilisation') return fpRef;\r\n    return undefined;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={`row ${Styles.divBusiness}`}>\r\n        <div\r\n          className={`${Styles.divBusiness} col-12`}\r\n          style={{\r\n            paddingRight: '55px',\r\n            overflow: 'auto',\r\n            height: 'calc(100vh - 348px)',\r\n          }}\r\n        >\r\n          <div className='row'>\r\n          <div className={`col-md ${Styles.div1}`}>\r\n          {scoringData1.map((data, index) => (\r\n            <div className={`d-flex ${Styles.scoringDiv}`} key={data.id}>\r\n              <div className={`${Styles.bigDiv}`}>\r\n                <div className={Styles.topMargin}>\r\n                  <SwitchComponent\r\n                    label=\"\"\r\n                    text={['Yes', 'No']}\r\n                    active={!dataDisabled(data)}\r\n                    onSwitch={handleCheckBoxChangeScores}\r\n                    name={data.name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"\">\r\n                <input\r\n                  type=\"number\"\r\n                  ref={dataInputRef(data)}\r\n                  name={data.name}\r\n                  className={`${Styles.scoreInput} ${isInvalid(data.title) && Styles.invalidField}`}\r\n                  placeholder={!dataDisabled(data) ? placeHolder : \"\"}\r\n                  onKeyDown={(evt) => (evt.key === 'e' || evt.key === '+' || evt.key === '-' || evt.key === '.')\r\n                    && evt.preventDefault()}\r\n                  onChange={onChangeInputScores}\r\n                  value={!dataDisabled(data) ? dataInputValue(data)  : \"\"}\r\n                  disabled={dataDisabled(data)}      \r\n              />\r\n              </div>      \r\n\r\n              <div className=\"col-10\">\r\n                <div className=\"col-12\">\r\n                  <div\r\n                    className={`${Styles.scoringTitle}`}\r\n                    disabled={dataDisabled(data)}\r\n                    style={{ marginBottom: 0 }}\r\n                  >\r\n                    {data.title}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`${Styles.scoringDescription}`}\r\n                  disabled={dataDisabled(data)}\r\n                >\r\n                  {data.description}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          \r\n          ))}\r\n          </div>\r\n\r\n          <div className={`col-md ${Styles.div2}`}>\r\n          {scoringData2.map((data, index) => (\r\n            <div className={`d-flex ${Styles.scoringDiv}`} key={data.id}>\r\n              <div className={`${Styles.bigDiv}`}>\r\n                <div className={Styles.topMargin}>\r\n                  <SwitchComponent\r\n                    label=\"\"\r\n                    text={['Yes', 'No']}\r\n                    active={!dataDisabled(data)}\r\n                    onSwitch={handleCheckBoxChangeScores}\r\n                    name={data.name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"\">\r\n                <input\r\n                  type=\"number\"\r\n                  ref={dataInputRef(data)}\r\n                  name={data.name}\r\n                  className={`${Styles.scoreInput} ${isInvalid(data.title) && Styles.invalidField}`}\r\n                  placeholder={!dataDisabled(data) ? placeHolder : \"\"}\r\n                  onKeyDown={(evt) => (evt.key === 'e' || evt.key === '+' || evt.key === '-' || evt.key === '.')\r\n                    && evt.preventDefault()}\r\n                  onChange={onChangeInputScores}\r\n                  value={!dataDisabled(data) ? dataInputValue(data)  : \"\"}\r\n                  disabled={dataDisabled(data)}\r\n              \r\n              />\r\n              </div>\r\n            \r\n              <div className=\"col-10\">\r\n                <div className=\"col-12\">\r\n                  <div\r\n                    className={`${Styles.scoringTitle}`}\r\n                    disabled={dataDisabled(data)}\r\n                    style={{ marginBottom: 0 }}\r\n                  >\r\n                    {data.title}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`${Styles.scoringDescription}`}\r\n                  disabled={dataDisabled(data)}\r\n                >\r\n                  {data.description}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          \r\n          ))}\r\n          </div> \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={ProfileStyles.profileViewFooter}>\r\n          <button\r\n          className={ProfileStyles.saveButton}\r\n          onClick={callbackSaveScoring}\r\n          type=\"button\"\r\n        >\r\n          Save\r\n          </button>\r\n          </div>\r\n      </div>\r\n  );\r\n});\r\nScoringComponent.propTypes = {\r\n  scoreChecked: PropTypes.object.isRequired,\r\n  scores: PropTypes.object.isRequired,\r\n  onChangeInputScores: PropTypes.func.isRequired,\r\n  handleCheckBoxChangeScores: PropTypes.func.isRequired,\r\n  callbackSaveScoring: PropTypes.func.isRequired,\r\n  focusScoring: PropTypes.string,\r\n  invalidFields: PropTypes.arrayOf(PropTypes.string),\r\n};\r\nScoringComponent.defaultProps = {\r\n  focusScoring: '',\r\n  invalidFields: [],\r\n};\r\nexport default ScoringComponent;\r\n","const ChannelProfileForms = {\r\n  daySelect: [\r\n    {\r\n      id: '1',\r\n      name: 'Monday',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Tuesday',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Wednesday',\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Thursday',\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Friday',\r\n    },\r\n    {\r\n      id: '6',\r\n      name: 'Saturday',\r\n    },\r\n    {\r\n      id: '7',\r\n      name: 'Sunday',\r\n    },\r\n  ],\r\n\r\n  checkString(text) {\r\n    return text !== '' && text !== null && text !== undefined;\r\n  },\r\n\r\n  countDecimals(value) {\r\n    return value % 1 ? value.toString().split('.')[1].length : 0;\r\n  },\r\n};\r\n\r\nexport default ChannelProfileForms;\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nimport Button from '../../../../shared/components/button/Button';\r\n\r\nfunction ImportConfirmationModalComponent({ show, onHide, onProceed }) {\r\n  return (\r\n    <Modal show={show} centered size=\"md\">\r\n      <div className={styles.body} style={{ textAlign: 'center' }}>\r\n        <div>\r\n          <p className={styles.description}>\r\n            This channel already have existing business rules defined.\r\n            Importing will overwrite all existing custom business rules and values of\r\n            the channel.\r\n          </p>\r\n\r\n          <p className={styles.confirmationText}>\r\n            Are you sure you want to proceed?\r\n          </p>\r\n        </div>\r\n\r\n        <div style={{ marginTop: '30px' }}>\r\n          <Button\r\n            text=\"Cancel\"\r\n            defaultBtn\r\n            onClick={onHide}\r\n          />\r\n          <Button text=\"Proceed\" onClick={onProceed} />\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nImportConfirmationModalComponent.propTypes = {\r\n  onProceed: PropTypes.func.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n};\r\nImportConfirmationModalComponent.defaultProps = {\r\n  show: false,\r\n};\r\nImportConfirmationModalComponent.displayName = 'ImportConfirmationModalComponent';\r\n\r\nexport default ImportConfirmationModalComponent;\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Styles from 'components/channel-profiles/ChannelProfile.module.css';\r\nimport { useCallbackPrompt } from 'components/_reusable/blocker/UsePromptComponent.ts';\r\nimport TabStyles from 'components/_reusable/tabs/Tabs.module.css';\r\nimport TabHeaderComponent from 'components/_reusable/tabs/TabHeaderComponent';\r\nimport ProfileComponent from 'components/channel-profiles/profile/ProfileComponent';\r\nimport BusinessRulesComponent from 'components/pages/channel-setup/components/BusinessRulesComponent';\r\nimport ScoringComponent from 'components/pages/channel-setup/components/ScoringComponent';\r\nimport BannerComponent from 'components/_reusable/banner/BannerComponent';\r\nimport ChannelProfileService from 'components/channel-profiles/ChannelProfileService';\r\nimport SelectComponent from 'shared/elements/select/select.component';\r\nimport {\r\n  danger,\r\n  success,\r\n} from 'shared/elements/notification/NotifyComponent';\r\nimport ProfileForms from 'components/channel-profiles/profile/ProfileForms';\r\nimport ChannelProfileForms from 'components/channel-profiles/ChannelProfileForms';\r\nimport ImportConfirmationModalComponent from 'components/channel-profiles/business-rules/modals/ImportConfirmationModalComponent';\r\nimport DateService from 'core/date.service';\r\nimport BootstrapSpinner from 'shared/components/bootstrap-spinner/BootstrapSpinner';\r\nimport AuthService from 'core/auth.service';\r\nimport ConfirmLeaveModal from 'shared/components/confirm-leave-modal/ConfirmLeaveModal';\r\nimport moment from 'moment';\r\n\r\nfunction ChannelProfileComponent() {\r\n  const [clockType, setClockType] = useState('');\r\n  const profileComponentRef = useRef();\r\n  const { checkString } = ChannelProfileForms;\r\n  const { countDecimals } = ChannelProfileForms;\r\n  const [selectedChannel, setSelectedChannel] = useState(\r\n    'Please select a channel'\r\n  );\r\n  const [channelID, setChannelID] = useState(null);\r\n  const [channelOptions, setChannelOptions] = useState([{}]);\r\n  const [businessrules, setBusinessrules] = useState([{}]);\r\n  const [scoring, setScoring] = useState([{}]);\r\n  const [focusInput, setFocusInput] = useState('');\r\n  const [focusScoring, setFocusScoring] = useState('');\r\n  const [dirtyForm, setDirtyForm] = useState('');\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('Profile');\r\n  const [nextTab, setNextTab] = useState('');\r\n  const [nextChannel, setNextChannel] = useState({});\r\n  const [next, setNext] = useState({});\r\n  const [nextElement, setNextElement] = useState('');\r\n  const [clearFileName, setClearFileName] = useState(false);\r\n  const [endTimeCheck, setEndTimeCheck] = useState(false);\r\n  const abortControllerGetBusinessRules = new AbortController();\r\n  const abortControllerGetChannels = new AbortController();\r\n  const abortControllerGetScoring = new AbortController();\r\n\r\n\r\n  const [isMounted, setIsMounted] = useState(true);\r\n\r\n  const [profileFilter, setProfileFilter] = useState({\r\n    day: 'Monday',\r\n    startTime: null,\r\n    endTime: '0:00',\r\n    endTimeActive: false,\r\n  });\r\n  const [profileParameters, setProfileParameters] = useState({\r\n    day: 'Monday',\r\n    startTime: '0:00',\r\n    endTime: '0:00',\r\n    endTimeActive: false,\r\n  });\r\n  const [\r\n    showPrompt,\r\n    confirmNavigation,\r\n    cancelNavigation,\r\n    hidePrompt,\r\n  ] = useCallbackPrompt(dirtyForm !== '');\r\n  const [getProbabilitiesParameters, setGetProbabilitiesParameters] = useState(\r\n    {}\r\n  );\r\n\r\n  const [\r\n    getProbabilitiesParametersClone,\r\n    setGetProbabilitiesParametersClone,\r\n  ] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [shouldSwitchProfileDivId, setShouldSwitchProfileDivId] = useState(\r\n    false\r\n  );\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [customBusinessRules, setCustomBusinessRules] = useState();\r\n  const [\r\n    showImportConfirmationModal,\r\n    setShowImportConfirmationModal,\r\n  ] = useState(false);\r\n  const [savedFile, setSavedFile] = useState();\r\n  const [\r\n    isExportingCustomBusinessRules,\r\n    setIsExportingCustomBusinessRules,\r\n  ] = useState(false);\r\n  const [businessRulesInvalidFields, setBusinessRulesInvalidFields] = useState(\r\n    []\r\n  );\r\n  const [scoringInvalidFields, setScoringInvalidFields] = useState([]);\r\n  const [genreData, setGenreData] = useState({});\r\n  const [certificationData, setCertificationData] = useState({});\r\n  const [ageCertificationData, setAgeCertificationData] = useState({});\r\n  const [gradesData, setGradesData] = useState({});\r\n  const [renderTimes, setRenderTimes] = useState(0);\r\n  const [fromCancel, setFromCancel] = useState(false);\r\n  const [\r\n    channelProfileSessionParameters,\r\n    setChannelProfileSessionParameters,\r\n  ] = useState();\r\n  const [isPrimetimeDayPartValid, setIsPrimetimeDayPartValid] = useState(false);\r\n  const [isPrimetimeJunctionValid, setIsPrimetimeJunctionValid] = useState(\r\n    false\r\n  );\r\n  const [executeDaypartClearValues, setExecuteDaypartClearValues] = useState(\r\n    false\r\n  );\r\n  const [selectedProfile, setSelectedProfile] = useState({\r\n    id: 0,\r\n    name: 'Select Profile',\r\n  });\r\n\r\n  const handleChangeInputGenre = (e) => {\r\n    let inputValue = e.target.value;\r\n    if (countDecimals(inputValue) <= 2) {\r\n      if (inputValue > 100) inputValue = 100;\r\n      if (inputValue < 0) inputValue = 0;\r\n      setGenreData((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: inputValue,\r\n      }));\r\n    }\r\n    setDirtyForm('Profile');\r\n  };\r\n\r\n  const handleChangeCertification = (e) => {\r\n    let inputValue = e.target.value;\r\n    if (countDecimals(inputValue) <= 2) {\r\n      if (inputValue > 100) inputValue = 100;\r\n      if (inputValue < 0) inputValue = 0;\r\n      setCertificationData((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: inputValue,\r\n      }));\r\n    }\r\n    setDirtyForm('Profile');\r\n  };\r\n\r\n  const handleChangeInputAgeCertification = (e) => {\r\n    let inputValue = e.target.value;\r\n    if (countDecimals(inputValue) <= 2) {\r\n      if (inputValue > 100) inputValue = 100;\r\n      if (inputValue < 0) inputValue = 0;\r\n      setAgeCertificationData((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: inputValue,\r\n      }));\r\n    }\r\n    setDirtyForm('Profile');\r\n  };\r\n\r\n  const handleChangeInputGrade = (e) => {\r\n    let inputValue = e.target.value;\r\n    if (countDecimals(inputValue) <= 2) {\r\n      if (inputValue > 100) inputValue = 100;\r\n      if (inputValue < 0) inputValue = 0;\r\n      setGradesData((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: inputValue,\r\n      }));\r\n    }\r\n    setDirtyForm('Profile');\r\n  };\r\n\r\n  const onChangeFormSetChannelProfileSessionParameters = (data) => {\r\n    setChannelProfileSessionParameters({\r\n      ...channelProfileSessionParameters,\r\n      ...data,\r\n    });\r\n  };\r\n\r\n  const changeDay = (selected) => {\r\n    onChangeFormSetChannelProfileSessionParameters({ weekDay: selected.id });\r\n    setGetProbabilitiesParameters({\r\n      ...getProbabilitiesParameters,\r\n      weekDay: selected.id,\r\n    });\r\n    setProfileFilter((prevState) => ({\r\n      ...prevState,\r\n      day: selected.name,\r\n    }));\r\n    setProfileParameters((prevState) => ({\r\n      ...prevState,\r\n      day: selected.name,\r\n    }));\r\n  };\r\n\r\n  const handleChangeDay = (selected) => {\r\n    if (dirtyForm !== '') {\r\n      setNextChannel({});\r\n      setNextTab('');\r\n      setNext(selected);\r\n      setNextElement('Day');\r\n      setModalShow(true);\r\n    } else {\r\n      changeDay(selected);\r\n    }\r\n  };\r\n\r\n  const handleSelectedProfile = (selected) => {\r\n    if (dirtyForm !== '') {\r\n      setNextChannel({});\r\n      setNextTab('');\r\n      setNext(selected);\r\n      setNextElement('ProfileValues');\r\n      setModalShow(true);\r\n    } else {\r\n      setSelectedProfile(selected);\r\n    }\r\n  };\r\n\r\n  const changeStartTime = (selected) => {\r\n    onChangeFormSetChannelProfileSessionParameters({\r\n      startTime: selected.name,\r\n    });\r\n    setGetProbabilitiesParameters({\r\n      ...getProbabilitiesParameters,\r\n      startTime: selected.name,\r\n    });\r\n    setProfileFilter((prevState) => ({\r\n      ...prevState,\r\n      startTime: selected.name,\r\n    }));\r\n    setProfileParameters((prevState) => ({\r\n      ...prevState,\r\n      startTime: selected.name,\r\n    }));\r\n\r\n    if (profileParameters.endTimeActive) {\r\n      const start = parseInt(selected.name.replace(':', ''), 10);\r\n      const end = parseInt(profileParameters.endTime.replace(':', ''), 10);\r\n\r\n      if (start > end) {\r\n        setProfileParameters((prevState) => ({\r\n          ...prevState,\r\n          endTime: selected.name,\r\n        }));\r\n        setGetProbabilitiesParameters((prevState) => ({\r\n          ...prevState,\r\n          endTime: selected.name,\r\n        }));\r\n        setProfileFilter((prevSate) => ({\r\n          ...prevSate,\r\n          endTime: selected.name,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangeStartTime = (selected) => {\r\n    if (dirtyForm !== '') {\r\n      setNextChannel({});\r\n      setNextTab('');\r\n      setNext(selected);\r\n      setNextElement('StartTime');\r\n      setModalShow(true);\r\n    } else {\r\n      changeStartTime(selected);\r\n    }\r\n  };\r\n\r\n  const handleChangeEndTime = (selected) => {\r\n    const convertSelected = convertTo12HourFormat(selected.name);\r\n    const start = parseInt(\r\n      convertTo12HourFormat(profileParameters.startTime).replace(':', ''),\r\n      10\r\n    );\r\n    const end = parseInt(convertSelected.replace(':', ''), 10);\r\n\r\n    if (start <= end && profileParameters.endTimeActive) {\r\n      setProfileParameters((prevState) => ({\r\n        ...prevState,\r\n        endTime: selected.name,\r\n      }));\r\n    } else if (!profileParameters.endTimeActive) {\r\n      setProfileParameters((prevState) => ({\r\n        ...prevState,\r\n        endTime: selected.name,\r\n      }));\r\n    }\r\n    setGetProbabilitiesParameters({\r\n      ...getProbabilitiesParameters,\r\n      endTime: selected.name,\r\n    });\r\n    setProfileFilter((prevState) => ({\r\n      ...prevState,\r\n      endTime: selected.name,\r\n    }));\r\n  };\r\n\r\n  const convertTo24HourFormat = (inputTime) => {\r\n    switch (inputTime) {\r\n      case '00:00':\r\n        return '24:00';\r\n        break;\r\n      case '01:00':\r\n        return '25:00';\r\n        break;\r\n      case '02:00':\r\n        return '26:00';\r\n        break;\r\n      case '03:00':\r\n        return '27:00';\r\n        break;\r\n      case '04:00':\r\n        return '28:00';\r\n        break;\r\n      case '05:00':\r\n        return '29:00';\r\n        break;\r\n      default:\r\n        return inputTime;\r\n    }\r\n  };\r\n\r\n  const convertTo12HourFormat = (inputTime) => {\r\n    switch (inputTime) {\r\n      case '24:00':\r\n        return '0:00';\r\n        break;\r\n      case '25:00':\r\n        return '1:00';\r\n        break;\r\n      case '26:00':\r\n        return '2:00';\r\n        break;\r\n      case '27:00':\r\n        return '3:00';\r\n        break;\r\n      case '28:00':\r\n        return '4:00';\r\n        break;\r\n      case '29:00':\r\n        return '5:00';\r\n      default:\r\n        return inputTime;\r\n    }\r\n  };\r\n\r\n  const handleSwitchEndTime = (checked) => {\r\n    setEndTimeCheck(checked);\r\n    setProfileParameters((prevState) => ({\r\n      ...prevState,\r\n      endTimeActive: checked,\r\n    }));\r\n    if (!checked) {\r\n      setProfileParameters((prevState) => ({\r\n        ...prevState,\r\n        endTime: '0:00',\r\n      }));\r\n      setGetProbabilitiesParameters({\r\n        ...getProbabilitiesParameters,\r\n        endTime: '0:00',\r\n      });\r\n    }\r\n  };\r\n\r\n  const [signature, setSignature] = useState({\r\n    genre: 'Yes',\r\n    grade: 'Yes',\r\n    ageCertification: 'Yes',\r\n  });\r\n\r\n  const [certification, setCertification] = useState({\r\n    cert12PinProtected: 'Yes',\r\n    cert15PinProtected: 'Yes',\r\n    cert18After9pm: 'Yes',\r\n    cert18After10pm: 'Yes',\r\n  });\r\n\r\n  const [scheduleTimings, setScheduleTimings] = useState({\r\n    primetimeJunction: 'Yes',\r\n    primetimeHour: '',\r\n    primetimeHourPlaceholder: '',\r\n    primetimeMinutes: '',\r\n    primetimeMinutesPlaceholder: '',\r\n    matureContent: 'Yes',\r\n    matureContentStartTime: '',\r\n    matureContentStartTimePlaceholder: '',\r\n    matureContentEndTime: '',\r\n    matureContentEndTimePlaceholder: '',\r\n    slotAndDurationRounding: 'Yes',\r\n    slotTimeSelect: 'Minutes',\r\n    slotTime: '',\r\n    slotTimePlaceholder: '',\r\n    dailyRefresh: 'Yes',\r\n    dailyRefreshMinSelect: 'Minutes',\r\n    dailyRefreshMin: '',\r\n    dailyRefreshMinPlaceholder: '',\r\n    paddingWithInterstitials: 'Yes',\r\n    interstitialsMinSelect: 'Minutes',\r\n    interstitialsMin: '',\r\n    interstitialsMinPlaceholder: '',\r\n    interstitialsMaxSelect: 'Minutes',\r\n    interstitialsMax: '',\r\n    interstitialsMaxPlaceholder: '',\r\n    interstitialsTargetSelect: 'Minutes',\r\n    interstitialsTarget: '',\r\n    interstitialsTargetPlaceholder: '',\r\n    newPrimetimeJunction: 'Yes',\r\n    newPrimetimeJunctionTime: '',\r\n  });\r\n\r\n  const [assetRepeats, setAssetRepeats] = useState({\r\n    sameChannelRepeats: 'Yes',\r\n    sameChannelRepeatsAfter: '',\r\n    sameChannelRepeatsAfterPlaceholder: '',\r\n    sameChannelRepeatsAfterSelect: 'Days',\r\n    crossChannelRepeats: 'Yes',\r\n    crossChannelRepeatsPeriod: '',\r\n    crossChannelRepeatsPeriodPlaceholder: '',\r\n    crossChannelRepeatsPeriodSelect: 'Hours',\r\n    primeTimeInterval: 'Yes',\r\n    primeTimeIntervalPeriod: '',\r\n    primeTimeIntervalPeriodPlaceholder: '',\r\n    primeTimeIntervalPeriodSelect: 'Weeks',\r\n    highGradeAsset: 'Yes',\r\n    premierGrades: '',\r\n    acrossChannelRepeats: 'Yes',\r\n    differentProgrammesPrimetime: 'Yes',\r\n    primetimePeriodWeeks: '',\r\n    postPremierAssetHoldback: 'Yes',\r\n    postPremierAssetDays: '',\r\n    addFreePlays: 'Yes',\r\n    maximumPlays: 'Yes',\r\n    maximumPlaysPlays: '',\r\n    maximumPlaysPeriodInWeeks: '',\r\n    maximumPlaysPeriodSelect: 'Weeks',\r\n    exceedMaxPlayCount: 'Yes',\r\n  });\r\n\r\n  const [assetProbability, setAssetProbability] = useState({\r\n    checkProbability: 'Yes',\r\n    planningNotes: 'Yes',\r\n    prioritisationFactor: 'Yes',\r\n    playDistribution: 'Yes',\r\n    playDistributionEndProbability: '',\r\n    underplayedWeighting: 'Yes',\r\n    underplayedWeightingWeight: '',\r\n    overplayedWeighting: 'Yes',\r\n    overplayedWeightingWeight: '',\r\n  });\r\n\r\n  const [types, setTypes] = useState({\r\n    fastChannel: 'Yes',\r\n    advertsPerHour: 'Yes',\r\n    advertsMaxSelect: 'Minutes',\r\n    advertsMax: '',\r\n    advertsMaxPlaceholder: '',\r\n    advertsTargetSelect: 'Minutes',\r\n    advertsTarget: '',\r\n    advertsTargetPlaceholder: '',\r\n  });\r\n\r\n  const handleSignatureChange = useCallback(async (checked, name) => {\r\n    setSignature((prevState) => ({\r\n      ...prevState,\r\n      [name]: checked,\r\n    }));\r\n    setDirtyForm('Business Rules');\r\n  }, []);\r\n\r\n  const handleCertificationChange = useCallback(async (checked, name) => {\r\n    setCertification((prevState) => ({\r\n      ...prevState,\r\n      [name]: checked,\r\n    }));\r\n    setDirtyForm('Business Rules');\r\n  }, []);\r\n\r\n  const constructTimeString = (time) => {\r\n    if (moment(time).isValid()) {\r\n      const date = new Date(time);\r\n      let hour = date.getHours();\r\n      let minute = date.getMinutes();\r\n      if (hour.toString().length === 1) hour = `0${hour}`;\r\n      if (minute.toString().length === 1) minute = `0${minute}`;\r\n      return `${hour}:${minute}`;\r\n    } else {\r\n      if (time.toString()?.includes('NaN') || time === 0) return '-';\r\n      let hour = time.toString()?.split(':')[0];\r\n      let minute = time.toString()?.split(':')[1];\r\n      if (!hour) hour = '00';\r\n      if (hour?.length === 1) hour = `0${hour}`;\r\n      if (minute?.length === 1) minute = `0${minute}`;\r\n      return `${hour}:${minute}`;\r\n    }\r\n  };\r\n\r\n  const constructPrimetime = (time) => {\r\n    const hour = time?.split(':')[0];\r\n    const minute = time?.split(':')[1];\r\n\r\n    if (hour && minute) {\r\n      const dateToday = new Date(\r\n        0,\r\n        0,\r\n        0,\r\n        parseInt(hour),\r\n        parseInt(minute),\r\n        0,\r\n        0\r\n      );\r\n      return dateToday;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const handleScheduleChange = (checked, name) => {\r\n    setExecuteDaypartClearValues(false);\r\n    setDirtyForm('Business Rules');\r\n    switch (name) {\r\n      case 'primetimeJunction':\r\n        if (!checked) setExecuteDaypartClearValues(true);\r\n        setScheduleTimings({\r\n          ...scheduleTimings,\r\n          [name]: checked,\r\n          primetimeHour: '',\r\n          primetimeMinutes: '',\r\n          newPrimetimeJunctionTime: '',\r\n        });\r\n        break;\r\n      case 'paddingWithInterstitials':\r\n        setScheduleTimings({\r\n          ...scheduleTimings,\r\n          [name]: checked,\r\n          interstitialsMin: '',\r\n          interstitialsMax: '',\r\n          interstitialsTarget: '',\r\n        });\r\n        break;\r\n      case 'slotAndDurationRounding':\r\n        setScheduleTimings({\r\n          ...scheduleTimings,\r\n          [name]: checked,\r\n          slotTime: '',\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleScheduleTimeRangeChange = (data, isPrimetime) => {\r\n    if (isPrimetime && scheduleTimings.primetimeJunction) {\r\n      setScheduleTimings({\r\n        ...scheduleTimings,\r\n        ...data,\r\n        newPrimetimeJunctionTime:\r\n          data.primetimeHour || scheduleTimings.newPrimetimeJunctionTime,\r\n      });\r\n    } else {\r\n    }\r\n    setDirtyForm('Business Rules');\r\n  };\r\n\r\n  const handleScheduleInputChange = useCallback(async (name, value) => {\r\n    let inputValue = value;\r\n    if (inputValue !== '') {\r\n      switch (name) {\r\n        case 'primetimeHour':\r\n          if (inputValue < 0) inputValue = 0;\r\n          if (inputValue > 23) inputValue = 23;\r\n          break;\r\n        case 'primetimeMinutes':\r\n          if (inputValue < 0) inputValue = 0;\r\n          if (inputValue > 59) inputValue = 59;\r\n          break;\r\n        case 'slotTime':\r\n          if (inputValue > 100) inputValue = 100;\r\n          break;\r\n        case 'advertsMax':\r\n          if (inputValue < 1) inputValue = 1;\r\n          if (inputValue > 9999) inputValue = 9999;\r\n          break;\r\n        case 'advertsTarget':\r\n          if (inputValue < 1) inputValue = 1;\r\n          if (inputValue > 9999) inputValue = 9999;\r\n          break;\r\n        case 'dailyRefreshMin':\r\n          if (inputValue > 9999) inputValue = 9999;\r\n          break;\r\n        case 'interstitialsMin':\r\n          if (inputValue > 100) inputValue = 100;\r\n          break;\r\n        case 'interstitialsMax':\r\n          if (inputValue > 100) inputValue = 100;\r\n          break;\r\n        case 'interstitialsTarget':\r\n          if (inputValue > 100) inputValue = 100;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setScheduleTimings((prevState) => ({\r\n      ...prevState,\r\n      [name]: inputValue,\r\n    }));\r\n    setDirtyForm('Business Rules');\r\n  }, []);\r\n\r\n  const handleAssetChange = useCallback(async (checked, name) => {\r\n    setDirtyForm('Business Rules');\r\n    switch (name) {\r\n      case 'sameChannelRepeats':\r\n        setAssetRepeats({\r\n          ...assetRepeats,\r\n          [name]: checked,\r\n          sameChannelRepeatsAfter: '',\r\n        });\r\n        break;\r\n      case 'crossChannelRepeats':\r\n        setAssetRepeats({\r\n          ...assetRepeats,\r\n          [name]: checked,\r\n          crossChannelRepeatsPeriod: '',\r\n        });\r\n        break;\r\n      case 'primeTimeInterval':\r\n        setAssetRepeats({\r\n          ...assetRepeats,\r\n          [name]: checked,\r\n          primeTimeIntervalPeriod: '',\r\n        });\r\n        break;\r\n      case 'maximumPlays':\r\n        setAssetRepeats({\r\n          ...assetRepeats,\r\n          [name]: checked,\r\n          maximumPlaysPlays: '',\r\n          maximumPlaysPeriodInWeeks: '',\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }, [assetRepeats]);\r\n\r\n  const handleAssetChangeInput = useCallback(async (name, value) => {\r\n    let inputValue = value;\r\n    if (value !== '') {\r\n      if (inputValue > 9999) inputValue = 9999;\r\n    }\r\n\r\n    setDirtyForm('Business Rules');\r\n    setAssetRepeats((prevState) => ({\r\n      ...prevState,\r\n      [name]: inputValue,\r\n    }));\r\n  }, []);\r\n\r\n  const handleAssetRepeatSelectChange = (name, value) => {\r\n    setAssetRepeats({ ...assetRepeats, [name]: value });\r\n    setDirtyForm('Business Rules');\r\n  };\r\n\r\n  const handleAssetProbabilityChange = (checked, name) => {\r\n    setDirtyForm('Business Rules');\r\n    switch (name) {\r\n      case 'playDistribution':\r\n        setAssetProbability({\r\n          ...assetProbability,\r\n          [name]: checked,\r\n          playDistributionEndProbability: '',\r\n        });\r\n        break;\r\n      case 'underplayedWeighting':\r\n        setAssetProbability({\r\n          ...assetProbability,\r\n          [name]: checked,\r\n          underplayedWeightingWeight: '',\r\n        });\r\n        break;\r\n      case 'overplayedWeighting':\r\n        setAssetProbability({\r\n          ...assetProbability,\r\n          [name]: checked,\r\n          overplayedWeightingWeight: '',\r\n        });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleAssetProbabilityChangeInput = useCallback(async (name, value) => {\r\n    let probabilityValue = value;\r\n    if (probabilityValue !== '') {\r\n      if (probabilityValue < 1) probabilityValue = 1;\r\n      if (probabilityValue > 100) probabilityValue = 100;\r\n    }\r\n    setAssetProbability((prevState) => ({\r\n      ...prevState,\r\n      [name]: probabilityValue,\r\n    }));\r\n    setDirtyForm('Business Rules');\r\n  }, []);\r\n\r\n  const handleTypeChange = (checked, name) => {\r\n    setTypes({\r\n      ...types,\r\n      [name]: checked,\r\n      advertsMax: '',\r\n      advertsTarget: '',\r\n    });\r\n    setScheduleTimings({\r\n      ...scheduleTimings,\r\n      dailyRefreshMin: '',\r\n    });\r\n    setDirtyForm('Business Rules');\r\n  };\r\n  const handleTypeInputChange = useCallback(async (name, value) => {\r\n    let inputValue = value;\r\n    if (inputValue > 60) inputValue = 60;\r\n    setTypes({ ...types, [name]: inputValue });\r\n    setDirtyForm('Business Rules');\r\n  }, []);\r\n  const handleTypeSelectChange = (name, value) => {\r\n    setTypes({ ...types, [name]: value });\r\n    setDirtyForm('Business Rules');\r\n  };\r\n\r\n  const handleOnValidatePrimetimeDaypart = (state) => {\r\n    setIsPrimetimeDayPartValid(!state);\r\n  };\r\n\r\n  const handleOnValidatePrimetimeJunction = (state) => {\r\n    setIsPrimetimeJunctionValid(!state);\r\n  };\r\n\r\n  const [scoreChecked, setScoreChecked] = useState({\r\n    neatness: true,\r\n    strengthofprimetime: false,\r\n    averagebreaktime: false,\r\n    youthofasset: false,\r\n    ukboxoffice: false,\r\n    usboxoffice: false,\r\n    adoptimisation: false,\r\n    freeplayutilisation: false,\r\n    prioritytitleutilisation: false,\r\n  });\r\n\r\n  const [neatnessChecked, setNeatnessChecked] = useState(false);\r\n  const [scores, setScores] = useState({});\r\n\r\n  const onChangeInputScores = useCallback(async(e) => {\r\n    let score = e.target.value;\r\n    score = Math.floor(score);\r\n\r\n    if (score > 9) score = 9;\r\n    if (score <= 0) score = '';\r\n\r\n    setScores((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: score,\r\n    }));\r\n    setDirtyForm('Scoring');\r\n  }, [scores, dirtyForm]);\r\n\r\n  const handleCheckBoxChangeScores = useCallback(async (checked, name) => {\r\n    setScoringInvalidFields((prevItems) =>\r\n      prevItems.filter(\r\n        (item) => item.toLowerCase().replace(/\\s/g, '') !== name.toLowerCase()\r\n      )\r\n    );\r\n\r\n    setScoreChecked((prevState) => ({\r\n      ...prevState,\r\n      [name]: checked,\r\n    }));\r\n\r\n    if (!checked) {\r\n      setScores((prevState) => ({\r\n        ...prevState,\r\n        [name]: '',\r\n      }));\r\n    }\r\n\r\n    setDirtyForm('Scoring');\r\n  }, [scoringInvalidFields, scoreChecked, dirtyForm, scores]);\r\n\r\n  const handleSelectChannel = (selected) => {\r\n    if (dirtyForm !== '') {\r\n      setNext({});\r\n      setNextElement('');\r\n      setNextTab('');\r\n      setNextChannel(selected);\r\n      setModalShow(true);\r\n    } else {\r\n      setProfileFilter({\r\n        day: 'Monday',\r\n        startTime: clockType === 'Standard' ? '00:00' : '24:00',\r\n        endTime: '0:00',\r\n        endTimeActive: false,\r\n      });\r\n      setProfileParameters({\r\n        day: 'Monday',\r\n        startTime: clockType === 'Standard' ? '00:00' : '24:00',\r\n        endTime: '0:00',\r\n        endTimeActive: false,\r\n      });\r\n      setChannelID(selected.id);\r\n      setSelectedChannel(selected.name);\r\n      onChangeFormSetChannelProfileSessionParameters({\r\n        channelId: selected.id,\r\n        weekDay: 1,\r\n        startTime: clockType === 'Standard' ? '00:00' : '24:00',\r\n      });\r\n      setGetProbabilitiesParameters({\r\n        ...getProbabilitiesParameters,\r\n        channelId: selected.id,\r\n        endTime: '0:00',\r\n        startTime: clockType === 'Standard' ? '00:00' : '24:00',\r\n        weekDay: 1,\r\n      });\r\n      setNextChannel({});\r\n    }\r\n  };\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const constructGetProbabilitiesParameters = (parameters) => {\r\n    let channelIdParameterString = '';\r\n    if (parameters.channelId !== null && parameters.channelId !== undefined) {\r\n      channelIdParameterString = `?channelId=${parameters.channelId}`;\r\n    } else if (channelID !== null) {\r\n      channelIdParameterString = `?channelId=${channelID}`;\r\n    }\r\n    const channelIdParameter = channelIdParameterString;\r\n    const weekDayParameter =\r\n      channelID && parameters.weekDay\r\n        ? `&weekDay=${parameters.weekDay}`\r\n        : `&weekDay=${1}`;\r\n    const startTimeParameter =\r\n      channelID && `&startTime=${profileFilter.startTime}`;\r\n    const endTimeParameter =\r\n      channelID && profileFilter.endTime\r\n        ? `&endTime=${profileFilter.endTime}`\r\n        : '&endTime=0:00';\r\n\r\n    const queryString =\r\n      channelIdParameter +\r\n      weekDayParameter +\r\n      startTimeParameter +\r\n      endTimeParameter;\r\n\r\n    return queryString;\r\n  };\r\n\r\n  const clearDirtyForm = (boolean) => {\r\n    if (dirtyForm === 'Profile' && boolean === true) {\r\n      return false;\r\n    }\r\n    setBusinessRulesInvalidFields([]);\r\n    setScoringInvalidFields([]);\r\n    if (dirtyForm !== '') {\r\n      setDirtyForm('');\r\n      if (nextTab !== '') setNextTab('');\r\n      setModalShow(false);\r\n      if (Object.keys(nextChannel).length !== 0) {\r\n        setNextChannel({});\r\n      }\r\n      if (nextElement !== '') {\r\n        setNextElement('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGetChannelProfileProbabilities = async () => {\r\n    setIsLoading(true);\r\n    try{\r\n     const response = await ChannelProfileService.getChannelProfileProbabilities(constructGetProbabilitiesParameters(getProbabilitiesParameters));\r\n     if(isMounted){\r\n      setShouldSwitchProfileDivId(true);\r\n      setGetProbabilitiesParameters(response.data);\r\n      setGetProbabilitiesParametersClone(response.data);\r\n      setCategories(response.data.categories);\r\n      clearDirtyForm();      \r\n      setIsLoading(false);\r\n     }\r\n    } catch (error) {\r\n      console.error('Error fetching channel profile probabilities:', error);\r\n    }\r\n  };\r\n  \r\n  const handleGetChannelProbabilities = async (channelId) => {\r\n    try {\r\n      const parameters = {channelId,};\r\n      const response = await ChannelProfileService.getChannelProfileProbabilities(constructGetProbabilitiesParameters(parameters));\r\n        setShouldSwitchProfileDivId(false);\r\n        setGetProbabilitiesParameters(response.data);\r\n        setCategories(response.data.categories);\r\n    } catch (error) {\r\n      console.error('Error fetching channel probabilities:', error);\r\n    }\r\n  };\r\n\r\n  const validateDiryForm = (label) => {\r\n    if (dirtyForm !== '') {\r\n      setModalShow(true);\r\n    } else {\r\n      setActiveTab(label);\r\n      if (label === 'Profile') handleGetChannelProfileProbabilities();\r\n    }\r\n  };\r\n\r\n  const onClickTabItem = (label) => {\r\n    validateDiryForm(label);\r\n    setNextChannel({});\r\n    setNext({});\r\n    setNextElement('');\r\n    setNextTab(label);\r\n  };\r\n\r\n  const getChannels = async () => {\r\n    try {\r\n      const response = await ChannelProfileService.getChannels({\r\n        signal: abortControllerGetChannels.signal\r\n      });\r\n      if(isMounted){\r\n        const channels = response.data;\r\n        const channelList = [];\r\n        channels.map((value) => {\r\n          channelList.push({ id: value.channelId, name: value.channelName });\r\n          return true;\r\n        });\r\n        setChannelOptions(channelList);\r\n      }\r\n        return true;\r\n    } catch (error) {\r\n      console.error('Error fetching channels', error);\r\n    }\r\n  };\r\n  \r\n  const getBusinessRules = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await ChannelProfileService.getBusinessRules(channelID, {\r\n        signal: abortControllerGetBusinessRules.signal\r\n      });\r\n      if(isMounted)\r\n      {\r\n          const bRules = response.data.businessRules;\r\n          setCustomBusinessRules(response.data.customBusinessRules);\r\n          setBusinessrules(bRules);\r\n          const genre = 'Yes';\r\n          const grade = 'Yes';\r\n          const ageCertification = 'Yes';\r\n  \r\n          let primetimeJunction = 'Yes';\r\n          let primetimeHour = 0;\r\n          let newPrimetimeJunction = 'Yes';\r\n          let newPrimetimeJunctionTime = '';\r\n          const primetimeHourPlaceholder = '';\r\n          let primetimeMinutes = 0;\r\n          const primetimeMinutesPlaceholder = '';\r\n          let matureContent = 'Yes';\r\n          let matureContentStartTime = 0;\r\n          const matureContentStartTimePlaceholder = '';\r\n          let matureContentEndTime = '';\r\n          const matureContentEndTimePlaceholder = '';\r\n          let slotAndDurationRounding = 'Yes';\r\n          let slotTimeSelect = 'Minutes';\r\n          let slotTime = 'Yes';\r\n          const slotTimePlaceholder = '';\r\n          let dailyRefresh = 'Yes';\r\n          let dailyRefreshMinSelect = 'Minutes';\r\n          let dailyRefreshMin = '';\r\n          const dailyRefreshMinPlaceholder = '';\r\n          let paddingWithInterstitials = 'Yes';\r\n          let interstitialsMinSelect = 'Minutes';\r\n          let interstitialsMin = 'Yes';\r\n          const interstitialsMinPlaceholder = '';\r\n          let interstitialsMaxSelect = 'Minutes';\r\n          let interstitialsMax = 'Yes';\r\n          const interstitialsMaxPlaceholder = '';\r\n          let interstitialsTargetSelect = 'Minutes';\r\n          let interstitialsTarget = 'Yes';\r\n          const interstitialsTargetPlaceholder = '';\r\n  \r\n          let sameChannelRepeats = 'Yes';\r\n          let sameChannelRepeatsAfterSelect = 'Days';\r\n          let sameChannelRepeatsAfter = 'Yes';\r\n          const sameChannelRepeatsAfterPlaceholder = '';\r\n          let crossChannelRepeats = 'Yes';\r\n          let crossChannelRepeatsPeriodSelect = 'Hours';\r\n          let crossChannelRepeatsPeriod = 'Yes';\r\n          const crossChannelRepeatsPeriodPlaceholder = '';\r\n          let primeTimeInterval = 'Yes';\r\n          let primeTimeIntervalPeriodSelect = 'Weeks';\r\n          let primeTimeIntervalPeriod = 'Yes';\r\n          const primeTimeIntervalPeriodPlaceholder = '';\r\n          const highGradeAsset = 'Yes';\r\n          const premierGrades = '';\r\n          let acrossChannelRepeats = 'Yes';\r\n          const differentProgrammesPrimetime = 'Yes';\r\n          const primetimePeriodWeeks = '';\r\n          const postPremierAssetHoldback = 'Yes';\r\n          const postPremierAssetDays = '';\r\n          const addFreePlays = 'Yes';\r\n          let maximumPlays = 'Yes';\r\n          let maximumPlaysPlays = '';\r\n          let maximumPlaysPeriodInWeeks = '';\r\n          let maximumPlaysPeriodSelect = 'Weeks';\r\n          const exceedMaxPlayCount = 'Yes';\r\n  \r\n          const cert12PinProtected = 'Yes';\r\n          const cert15PinProtected = 'Yes';\r\n          const cert18After9pm = 'Yes';\r\n          const cert18After10pm = 'Yes';\r\n  \r\n          let checkProbability = 'Yes';\r\n          let planningNotes = 'Yes';\r\n          let prioritisationFactor = 'Yes';\r\n          let playDistribution = 'Yes';\r\n          let playDistributionEndProbability = '';\r\n          let underplayedWeighting = 'Yes';\r\n          let underplayedWeightingWeight = '';\r\n          let overplayedWeighting = 'Yes';\r\n          let overplayedWeightingWeight = '';\r\n  \r\n          let fastChannel = 'Yes';\r\n          let advertsPerHour = 'Yes';\r\n          let advertsMaxSelect = 'Minutes';\r\n          let advertsMax = 'Yes';\r\n          const advertsMaxPlaceholder = '';\r\n          let advertsTargetSelect = 'Minutes';\r\n          let advertsTarget = 'Yes';\r\n          const advertsTargetPlaceholder = '';\r\n  \r\n          bRules.map((value) => {\r\n            const name = value.label;\r\n            let jsonData = null;\r\n            switch (name) {\r\n              case 'Primetime junction':\r\n                primetimeJunction = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n  \r\n                if (jsonData.Hours.Value) {\r\n                  primetimeHour = constructPrimetime(jsonData.Hours.Value);\r\n                }\r\n  \r\n                if (jsonData.Minutes.Value) {\r\n                  primetimeMinutes = constructPrimetime(jsonData.Minutes.Value);\r\n                }\r\n                break;\r\n              case 'Prime time junction new':\r\n                newPrimetimeJunction = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                if (jsonData?.Time?.Value)\r\n                  newPrimetimeJunctionTime = constructPrimetime(\r\n                    jsonData.Time.Value\r\n                  );\r\n                break;\r\n              case 'Slot & duration rounding':\r\n                slotAndDurationRounding = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                slotTime = jsonData.TimeInMinutes.Value;\r\n                slotTimeSelect = jsonData.TimeInMinutes.SelectedTime;\r\n                break;\r\n              case 'Adverts per hour':\r\n                advertsPerHour = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                advertsMax = jsonData.AdvertsMax.Value;\r\n                advertsTarget = jsonData.AdvertsTarget.Value;\r\n                advertsMaxSelect = jsonData.AdvertsMax.SelectedTime;\r\n                advertsTargetSelect = jsonData.AdvertsTarget.SelectedTime;\r\n                break;\r\n              case 'Daily refresh':\r\n                dailyRefresh = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                dailyRefreshMin = jsonData.DailyMin.Value;\r\n                dailyRefreshMinSelect = jsonData.DailyMin.SelectedTime;\r\n                break;\r\n              case 'Padding with interstials':\r\n                paddingWithInterstitials = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                interstitialsMin = jsonData.MinInMinutes.Value;\r\n                interstitialsMax = jsonData.MaxInMinutes.Value;\r\n                interstitialsTarget = jsonData.TargetInMinutes.Value;\r\n                interstitialsMinSelect = jsonData.MinInMinutes.SelectedTime;\r\n                interstitialsMaxSelect = jsonData.MaxInMinutes.SelectedTime;\r\n                interstitialsTargetSelect = jsonData.TargetInMinutes.SelectedTime;\r\n                break;\r\n              case 'Same channel repeats':\r\n                sameChannelRepeats = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                sameChannelRepeatsAfter = jsonData.SameChannelRepeatsAfter.Value;\r\n                sameChannelRepeatsAfterSelect =\r\n                  jsonData.SameChannelRepeatsAfter.SelectedTime;\r\n                break;\r\n              case 'Cross-Channel repeats':\r\n                crossChannelRepeats = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                crossChannelRepeatsPeriod = jsonData.CrossChannelPeriod.Value;\r\n                crossChannelRepeatsPeriodSelect =\r\n                  jsonData.CrossChannelPeriod.SelectedTime;\r\n                break;\r\n              case 'Prime time interval':\r\n                primeTimeInterval = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                primeTimeIntervalPeriod = jsonData.PrimeTimePeriod.Value;\r\n                primeTimeIntervalPeriodSelect =\r\n                  jsonData.PrimeTimePeriod.SelectedTime;\r\n                break;\r\n              case 'Across channel repeats':\r\n                acrossChannelRepeats = value.enabled;\r\n                break;\r\n              case 'Maximum plays':\r\n                maximumPlays = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                maximumPlaysPlays = jsonData.Plays.Value;\r\n                maximumPlaysPeriodInWeeks = jsonData.PeriodInWeeks.Value;\r\n                maximumPlaysPeriodSelect = jsonData.PeriodInWeeks.SelectedTime;\r\n                break;\r\n              case 'Play distribution':\r\n                playDistribution = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                playDistributionEndProbability =\r\n                  jsonData['EndProbability%'].Value;\r\n                break;\r\n              case 'Underplayed weighting':\r\n                underplayedWeighting = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                underplayedWeightingWeight = jsonData['Weighting%'].Value;\r\n                break;\r\n              case 'Overplayed weighting':\r\n                overplayedWeighting = value.enabled;\r\n                jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n                overplayedWeightingWeight = jsonData['Weighting%'].Value;\r\n                break;\r\n              case 'FAST channel':\r\n                fastChannel = value.enabled;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            return true;\r\n          });\r\n  \r\n          setSignature({\r\n            genre,\r\n            grade,\r\n            ageCertification,\r\n          });\r\n  \r\n          setCertification({\r\n            cert12PinProtected,\r\n            cert15PinProtected,\r\n            cert18After9pm,\r\n            cert18After10pm,\r\n          });\r\n  \r\n          setScheduleTimings({\r\n            primetimeJunction,\r\n            primetimeHour,\r\n            primetimeHourPlaceholder,\r\n            primetimeMinutes,\r\n            primetimeMinutesPlaceholder,\r\n            newPrimetimeJunction,\r\n            newPrimetimeJunctionTime,\r\n            matureContent,\r\n            matureContentStartTime,\r\n            matureContentStartTimePlaceholder,\r\n            matureContentEndTime,\r\n            matureContentEndTimePlaceholder,\r\n            slotAndDurationRounding,\r\n            slotTimeSelect,\r\n            slotTime,\r\n            slotTimePlaceholder,\r\n            dailyRefresh,\r\n            dailyRefreshMinSelect,\r\n            dailyRefreshMin,\r\n            dailyRefreshMinPlaceholder,\r\n            paddingWithInterstitials,\r\n            interstitialsMinSelect,\r\n            interstitialsMin,\r\n            interstitialsMinPlaceholder,\r\n            interstitialsMaxSelect,\r\n            interstitialsMax,\r\n            interstitialsMaxPlaceholder,\r\n            interstitialsTargetSelect,\r\n            interstitialsTarget,\r\n            interstitialsTargetPlaceholder,\r\n          });\r\n  \r\n          setAssetRepeats({\r\n            sameChannelRepeats,\r\n            sameChannelRepeatsAfter,\r\n            sameChannelRepeatsAfterSelect,\r\n            sameChannelRepeatsAfterPlaceholder,\r\n            crossChannelRepeats,\r\n            crossChannelRepeatsPeriod,\r\n            crossChannelRepeatsPeriodSelect,\r\n            crossChannelRepeatsPeriodPlaceholder,\r\n            primeTimeInterval,\r\n            primeTimeIntervalPeriod,\r\n            primeTimeIntervalPeriodSelect,\r\n            primeTimeIntervalPeriodPlaceholder,\r\n            highGradeAsset,\r\n            premierGrades,\r\n            acrossChannelRepeats,\r\n            differentProgrammesPrimetime,\r\n            primetimePeriodWeeks,\r\n            postPremierAssetHoldback,\r\n            postPremierAssetDays,\r\n            addFreePlays,\r\n            maximumPlays,\r\n            maximumPlaysPlays,\r\n            maximumPlaysPeriodInWeeks,\r\n            maximumPlaysPeriodSelect,\r\n            exceedMaxPlayCount,\r\n          });\r\n  \r\n          setAssetProbability({\r\n            checkProbability,\r\n            planningNotes,\r\n            prioritisationFactor,\r\n            playDistribution,\r\n            playDistributionEndProbability,\r\n            underplayedWeighting,\r\n            underplayedWeightingWeight,\r\n            overplayedWeighting,\r\n            overplayedWeightingWeight,\r\n          });\r\n  \r\n          setTypes({\r\n            fastChannel,\r\n            advertsPerHour,\r\n            advertsMaxSelect,\r\n            advertsMax,\r\n            advertsMaxPlaceholder,\r\n            advertsTargetSelect,\r\n            advertsTarget,\r\n            advertsTargetPlaceholder,\r\n          });\r\n        }\r\n    } catch (error) {\r\n      console.error('Error fetching business rules:', error);\r\n    }\r\n    setIsLoading(false)\r\n  };\r\n\r\n  const getScoring = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await ChannelProfileService.getChannelScoring(channelID, {\r\n        signal: abortControllerGetScoring.signal\r\n\r\n      });\r\n        const scoreList = response.data.scores;\r\n        if(isMounted){\r\n     \r\n        setScoring(scoreList);\r\n        let neatness = false;\r\n        let strengthofprimetime = false;\r\n        let averagebreaktime = false;\r\n        let youthofasset = false;\r\n        let ukboxoffice = false;\r\n        let usboxoffice = false;\r\n        let adoptimisation = false;\r\n        let freeplayutilisation = false;\r\n        let prioritytitleutilisation = false;\r\n\r\n        let neatnessScore = 0;\r\n        let strengthofprimetimeScore = 0;\r\n        let averagebreaktimeScore = 0;\r\n        let youthofassetScore = 0;\r\n        let ukboxofficeScore = 0;\r\n        let usboxofficeScore = 0;\r\n        let adoptimisationofficeScore = 0;\r\n        let freeplayutilisationScore = 0;\r\n        let prioritytitleutilisationScore = 0;\r\n        \r\n        scoreList.map((value) => {\r\n          const { name } = value;\r\n          switch (name) {\r\n            case 'Neatness':\r\n              neatness = value.enabled;\r\n              neatnessScore = value.weight;\r\n              setNeatnessChecked(value.enabled);\r\n              break;\r\n            case 'Strength of Primetime':\r\n              strengthofprimetime = value.enabled;\r\n              strengthofprimetimeScore = value.weight;\r\n              break;\r\n            case 'Average Break Time':\r\n              averagebreaktime = value.enabled;\r\n              averagebreaktimeScore = value.weight;\r\n              break;\r\n            case 'Youth of Asset':\r\n              youthofasset = value.enabled;\r\n              youthofassetScore = value.weight;\r\n              break;\r\n            case 'UK Box Office':\r\n              ukboxoffice = value.enabled;\r\n              ukboxofficeScore = value.weight;\r\n              break;\r\n            case 'US Box Office':\r\n              usboxoffice = value.enabled;\r\n              usboxofficeScore = value.weight;\r\n              break;\r\n            case 'Ad Optimisation':\r\n              adoptimisation = value.enabled;\r\n              adoptimisationofficeScore = value.weight;\r\n              break;\r\n            case 'Free Play Utilisation':\r\n              freeplayutilisation = value.enabled;\r\n              freeplayutilisationScore = value.weight;\r\n              break;\r\n            case 'Priority Title Utilisation':\r\n              prioritytitleutilisation = value.enabled;\r\n              prioritytitleutilisationScore = value.weight;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          return true;\r\n        });\r\n\r\n        setScoreChecked({\r\n          neatness,\r\n          strengthofprimetime,\r\n          averagebreaktime,\r\n          youthofasset,\r\n          ukboxoffice,\r\n          usboxoffice,\r\n          adoptimisation,\r\n          freeplayutilisation,\r\n          prioritytitleutilisation,\r\n        });\r\n\r\n        setScores({\r\n          neatness: neatnessScore,\r\n          strengthofprimetime: strengthofprimetimeScore,\r\n          averagebreaktime: averagebreaktimeScore,\r\n          youthofasset: youthofassetScore,\r\n          ukboxoffice: ukboxofficeScore,\r\n          usboxoffice: usboxofficeScore,\r\n          adoptimisation: adoptimisationofficeScore,\r\n          freeplayutilisation: freeplayutilisationScore,\r\n          prioritytitleutilisation: prioritytitleutilisationScore,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching channel scoring:', error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const changeChannel = (nextChannelSelected) => {\r\n    setChannelID(nextChannelSelected.id);\r\n    setSelectedChannel(nextChannelSelected.name);\r\n    setProfileFilter({\r\n      day: 'Monday',\r\n      startTime: clockType === 'Standard' ? '0:00' : '24:00',\r\n      endTime: '0:00',\r\n      endTimeActive: false,\r\n    });\r\n    setProfileParameters({\r\n      day: 'Monday',\r\n      startTime: clockType === 'Standard' ? '0:00' : '24:00',\r\n      endTime: '0:00',\r\n      endTimeActive: false,\r\n    });\r\n    onChangeFormSetChannelProfileSessionParameters({\r\n      channelId: nextChannelSelected.id,\r\n      weekDay: 1,\r\n      startTime: clockType === 'Standard' ? '0:00' : '24:00',\r\n    });\r\n    setGetProbabilitiesParameters({\r\n      ...getProbabilitiesParameters,\r\n      channelId: nextChannelSelected.id,\r\n    });\r\n    setNextChannel({});\r\n  };\r\n\r\n  const changeTab = () => {\r\n    if (nextTab !== '') {\r\n      setActiveTab(nextTab);\r\n    }\r\n    if (Object.keys(nextChannel).length !== 0) {\r\n      changeChannel(nextChannel);\r\n    } else if (nextElement === 'Day') {\r\n      changeDay(next);\r\n    } else if (nextElement === 'StartTime') {\r\n      changeStartTime(next);\r\n    } else if (nextElement === 'ProfileValues') {\r\n      setSelectedProfile(next);\r\n    }\r\n  };\r\n\r\n  const saveProfile = () => {\r\n    profileComponentRef?.current?.saveProbabilityValues();\r\n  };\r\n\r\n  const isValidCustomBusinessRules = () => {\r\n    if (\r\n      customBusinessRules.length > 0 &&\r\n      customBusinessRules.some((rule) => !rule.values)\r\n    ) {\r\n      const mappedBusinessRules = customBusinessRules.map((rule) => ({\r\n        ...rule,\r\n        isInvalid: !rule.values,\r\n      }));\r\n      setCustomBusinessRules(mappedBusinessRules);\r\n      return false;\r\n    }\r\n\r\n    const mappedBusinessRules = customBusinessRules.map((rule) => ({\r\n      ...rule,\r\n      isInvalid: false,\r\n    }));\r\n    setCustomBusinessRules(mappedBusinessRules);\r\n    return true;\r\n  };\r\n\r\n  const getBusinessRulesInvalidInputs = (data) => {\r\n    let invalidFields = [];\r\n    for (const item in data) {\r\n      if (!data[item]) invalidFields.push(item);\r\n    }\r\n\r\n    if (!isPrimetimeDayPartValid) invalidFields.push('primetimeHour');\r\n    if (!isPrimetimeJunctionValid)\r\n      invalidFields.push('newPrimetimeJunctionTime');\r\n\r\n    setBusinessRulesInvalidFields(invalidFields);\r\n  };\r\n\r\n  const getScoringInvalidInputs = (data) => {\r\n    let invalidFields = [];\r\n    for (const item in data) {\r\n      if (data[item].enabled && !data[item].weight)\r\n        invalidFields.push(data[item].name);\r\n    }\r\n\r\n    setScoringInvalidFields(invalidFields);\r\n  };\r\n\r\n  const saveBusinessRules = async () => {\r\n    let hasError = false;\r\n    const businessruleList = [];\r\n    let focus = '';\r\n    let jsonData = null;\r\n    businessrules.map((value) => {\r\n      const name = value.label;\r\n      const bRule = value;\r\n      switch (name) {\r\n        case 'Primetime junction':\r\n          bRule.enabled =\r\n            scheduleTimings.primetimeJunction === 'Yes' ||\r\n            scheduleTimings.primetimeJunction;\r\n          jsonData = JSON.parse(value.settings);\r\n          jsonData.Hours.Value =\r\n            scheduleTimings.primetimeHour &&\r\n            scheduleTimings.primetimeHour\r\n              .getHours()\r\n              .toString()\r\n              .padStart(2, '0') +\r\n              ':' +\r\n              scheduleTimings.primetimeHour\r\n                .getMinutes()\r\n                .toString()\r\n                .padStart(2, '0');\r\n          jsonData.Minutes.Value =\r\n            scheduleTimings.primetimeMinutes &&\r\n            scheduleTimings.primetimeMinutes\r\n              .getHours()\r\n              .toString()\r\n              .padStart(2, '0') +\r\n              ':' +\r\n              scheduleTimings.primetimeMinutes\r\n                .getMinutes()\r\n                .toString()\r\n                .padStart(2, '0');\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (\r\n            !checkString(scheduleTimings.primetimeHour?.toString()) ||\r\n            !checkString(scheduleTimings.primetimeMinutes?.toString()) ||\r\n            scheduleTimings.primetimeHour === 0 ||\r\n            scheduleTimings.primetimeMinutes === 0\r\n          ) {\r\n            hasError = value.enabled ? true : hasError;\r\n            if (!checkString(scheduleTimings.primetimeHour?.toString())) {\r\n              focus = 'primetimeHour';\r\n            } else if (\r\n              !checkString(scheduleTimings.primetimeMinutes?.toString())\r\n            ) {\r\n              focus = focus === '' ? 'primetimeMinutes' : focus;\r\n            }\r\n          }\r\n          if (!isPrimetimeDayPartValid) focus = focus || 'primetimeHour';\r\n          break;\r\n        case 'Prime time junction new':\r\n          bRule.enabled =\r\n            scheduleTimings.primetimeJunction === 'Yes' ||\r\n            scheduleTimings.primetimeJunction;\r\n          jsonData = JSON.parse(value.settings);\r\n          jsonData.Time.Value =\r\n            scheduleTimings.newPrimetimeJunctionTime &&\r\n            scheduleTimings.newPrimetimeJunctionTime\r\n              .getHours()\r\n              .toString()\r\n              .padStart(2, '0') +\r\n              ':' +\r\n              scheduleTimings.newPrimetimeJunctionTime\r\n                .getMinutes()\r\n                .toString()\r\n                .padStart(2, '0');\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (\r\n            !checkString(scheduleTimings.newPrimetimeJunctionTime?.toString())\r\n          ) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus || 'newPrimetimeJunctionTime';\r\n          }\r\n          if (!isPrimetimeJunctionValid)\r\n            focus = focus || 'newPrimetimeJunctionTime';\r\n          break;\r\n        case 'Slot & duration rounding':\r\n          bRule.enabled =\r\n            scheduleTimings.slotAndDurationRounding === 'Yes' ||\r\n            scheduleTimings.slotAndDurationRounding;\r\n          jsonData = JSON.parse(value.settings);\r\n          jsonData.TimeInMinutes.Value = scheduleTimings.slotTime;\r\n          jsonData.TimeInMinutes.SelectedTime = scheduleTimings.slotTimeSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(jsonData.TimeInMinutes.Value)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'slotDurationMinutes' : focus;\r\n          }\r\n          break;\r\n        case 'Adverts per hour':\r\n          bRule.enabled = types.fastChannel === 'Yes' || types.fastChannel;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData.AdvertsMax.Value = types.advertsMax;\r\n          jsonData.AdvertsTarget.Value = types.advertsTarget;\r\n          jsonData.AdvertsMax.SelectedTime = types.advertsMaxSelect;\r\n          jsonData.AdvertsTarget.SelectedTime = types.advertsTargetSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (\r\n            !checkString(jsonData.AdvertsMax.Value) ||\r\n            !checkString(jsonData.AdvertsTarget.Value)\r\n          ) {\r\n            hasError = value.enabled ? true : hasError;\r\n            if (!checkString(jsonData.AdvertsMax.Value)) {\r\n              focus = focus === '' ? 'advertsMax' : focus;\r\n            } else if (!checkString(jsonData.AdvertsTarget.Value)) {\r\n              focus = focus === '' ? 'advertsTarget' : focus;\r\n            }\r\n          }\r\n          break;\r\n        case 'Daily refresh':\r\n          bRule.enabled = types.fastChannel === 'Yes' || types.fastChannel;\r\n          jsonData = JSON.parse(value.settings);\r\n          jsonData.DailyMin.Value = scheduleTimings.dailyRefreshMin;\r\n          jsonData.DailyMin.SelectedTime =\r\n            scheduleTimings.dailyRefreshMinSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(jsonData.DailyMin.Value)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'dailyRefreshMin' : focus;\r\n          }\r\n          break;\r\n        case 'Padding with interstials':\r\n          bRule.enabled =\r\n            scheduleTimings.paddingWithInterstitials === 'Yes' ||\r\n            scheduleTimings.paddingWithInterstitials;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData.MinInMinutes.Value = scheduleTimings.interstitialsMin;\r\n          jsonData.MaxInMinutes.Value = scheduleTimings.interstitialsMax;\r\n          jsonData.TargetInMinutes.Value = scheduleTimings.interstitialsTarget;\r\n          jsonData.MinInMinutes.SelectedTime =\r\n            scheduleTimings.interstitialsMinSelect;\r\n          jsonData.MaxInMinutes.SelectedTime =\r\n            scheduleTimings.interstitialsMaxSelect;\r\n          jsonData.TargetInMinutes.SelectedTime =\r\n            scheduleTimings.interstitialsTargetSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (\r\n            !checkString(jsonData.MinInMinutes.Value) ||\r\n            !checkString(jsonData.MaxInMinutes.Value) ||\r\n            !checkString(jsonData.TargetInMinutes.Value)\r\n          ) {\r\n            hasError = value.enabled ? true : hasError;\r\n            if (!checkString(jsonData.MinInMinutes.Value)) {\r\n              focus = focus === '' ? 'paddingMin' : focus;\r\n            } else if (!checkString(jsonData.MaxInMinutes.Value)) {\r\n              focus = focus === '' ? 'paddingMax' : focus;\r\n            } else if (!checkString(jsonData.TargetInMinutes.Value)) {\r\n              focus = focus === '' ? 'paddingTarget' : focus;\r\n            }\r\n          }\r\n          break;\r\n        case 'Same channel repeats':\r\n          bRule.enabled =\r\n            assetRepeats.sameChannelRepeats === 'Yes' ||\r\n            assetRepeats.sameChannelRepeats;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData.SameChannelRepeatsAfter.Value =\r\n            assetRepeats.sameChannelRepeatsAfter;\r\n          jsonData.SameChannelRepeatsAfter.SelectedTime =\r\n            assetRepeats.sameChannelRepeatsAfterSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(jsonData.SameChannelRepeatsAfter.Value)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'sameChannelRepeatsAfter' : focus;\r\n          }\r\n          break;\r\n        case 'Cross-Channel repeats':\r\n          bRule.enabled =\r\n            assetRepeats.crossChannelRepeats === 'Yes' ||\r\n            assetRepeats.crossChannelRepeats;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData.CrossChannelPeriod.Value =\r\n            assetRepeats.crossChannelRepeatsPeriod;\r\n          jsonData.CrossChannelPeriod.SelectedTime =\r\n            assetRepeats.crossChannelRepeatsPeriodSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(jsonData.CrossChannelPeriod.Value)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'crossChannelRepeatsPeriod' : focus;\r\n          }\r\n          break;\r\n        case 'Prime time interval':\r\n          bRule.enabled =\r\n            assetRepeats.primeTimeInterval === 'Yes' ||\r\n            assetRepeats.primeTimeInterval;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData.PrimeTimePeriod.Value = assetRepeats.primeTimeIntervalPeriod;\r\n          jsonData.PrimeTimePeriod.SelectedTime =\r\n            assetRepeats.primeTimeIntervalPeriodSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(jsonData.PrimeTimePeriod.Value)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'primeTimeIntervalPeriod' : focus;\r\n          }\r\n          break;\r\n        case 'Across channel repeats':\r\n          bRule.enabled =\r\n            assetRepeats.acrossChannelRepeats === 'Yes' ||\r\n            assetRepeats.acrossChannelRepeats;\r\n          break;\r\n        case 'Maximum plays':\r\n          bRule.enabled =\r\n            assetRepeats.maximumPlays === 'Yes' || assetRepeats.maximumPlays;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData.Plays.Value = assetRepeats.maximumPlaysPlays;\r\n          jsonData.PeriodInWeeks.Value = assetRepeats.maximumPlaysPeriodInWeeks;\r\n          jsonData.PeriodInWeeks.SelectedTime =\r\n            assetRepeats.maximumPlaysPeriodSelect;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (\r\n            !checkString(jsonData.Plays.Value) ||\r\n            !checkString(jsonData.PeriodInWeeks.Value)\r\n          ) {\r\n            hasError = value.enabled ? true : hasError;\r\n            if (!checkString(jsonData.Plays.Value)) {\r\n              focus = focus === '' ? 'maximumPlays' : focus;\r\n            } else if (!checkString(jsonData.PeriodInWeeks.Value)) {\r\n              focus = focus === '' ? 'maximumPeriod' : focus;\r\n            }\r\n          }\r\n          break;\r\n        case 'Play distribution':\r\n          bRule.enabled =\r\n            assetProbability.playDistribution === 'Yes' ||\r\n            assetProbability.playDistribution;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData['EndProbability%'].Value =\r\n            assetProbability.playDistributionEndProbability;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(assetProbability.playDistributionEndProbability)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'endProbability' : focus;\r\n          }\r\n          break;\r\n        case 'Underplayed weighting':\r\n          bRule.enabled =\r\n            assetProbability.underplayedWeighting === 'Yes' ||\r\n            assetProbability.underplayedWeighting;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData['Weighting%'].Value =\r\n            assetProbability.underplayedWeightingWeight;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(assetProbability.underplayedWeightingWeight)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'underplayedWeighting' : focus;\r\n          }\r\n          break;\r\n        case 'Overplayed weighting':\r\n          bRule.enabled =\r\n            assetProbability.overplayedWeighting === 'Yes' ||\r\n            assetProbability.overplayedWeighting;\r\n          jsonData = JSON.parse(value.settings.replaceAll('\\\\', ''));\r\n          jsonData['Weighting%'].Value =\r\n            assetProbability.overplayedWeightingWeight;\r\n          bRule.settings = JSON.stringify(jsonData);\r\n          if (!checkString(assetProbability.overplayedWeightingWeight)) {\r\n            hasError = value.enabled ? true : hasError;\r\n            focus = focus === '' ? 'overplayedWeighting' : focus;\r\n          }\r\n          break;\r\n        case 'FAST channel':\r\n          bRule.enabled = types.fastChannel === 'Yes' || types.fastChannel;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      businessruleList.push(bRule);\r\n      return true;\r\n    });\r\n\r\n    let primetimeEnabled =\r\n      scheduleTimings.primetimeJunction === 'Yes' ||\r\n      scheduleTimings.primetimeJunction;\r\n    let primetimeError =\r\n      primetimeEnabled &&\r\n      (!isPrimetimeDayPartValid || !isPrimetimeJunctionValid);\r\n    if (!isValidCustomBusinessRules() || hasError || primetimeError) {\r\n      getBusinessRulesInvalidInputs({\r\n        ...scheduleTimings,\r\n        ...assetRepeats,\r\n        ...assetProbability,\r\n        ...types,\r\n      });\r\n      setModalShow(false);\r\n      cancelNavigation();\r\n      if (!isValidCustomBusinessRules())\r\n        danger('Please fill up all values field from custom business rules.');\r\n      if (!isPrimetimeDayPartValid && primetimeEnabled)\r\n        danger('Invalid time range');\r\n      if (\r\n        !isPrimetimeJunctionValid &&\r\n        checkString(\r\n          scheduleTimings.newPrimetimeJunctionTime?.toString() &&\r\n            primetimeEnabled\r\n        )\r\n      ) {\r\n        danger(\r\n          'Primetime junction cannot be outside the range of Primetime daypart'\r\n        );\r\n      }\r\n      if (hasError) danger('Conditional values are required');\r\n    } else {\r\n      const businessForm = {\r\n        channelId: channelID,\r\n        businessRules: businessruleList,\r\n        customBusinessRules,\r\n      };\r\n      try {\r\n        await ChannelProfileService.saveBusinessRules(businessForm);\r\n        if (nextTab === 'Profile') handleGetChannelProfileProbabilities();\r\n        if (!fromCancel) changeTab();\r\n        clearDirtyForm();\r\n        success('Business rules saved');\r\n        getBusinessRules();\r\n        confirmNavigation();\r\n      } catch (error) {\r\n        console.error('Error saving business rules:', error);\r\n        danger(error.response.data.message)\r\n      }\r\n      hidePrompt()\r\n      setFocusInput('');\r\n    }\r\n  };\r\n\r\n  const saveScoring = useCallback(async () => {\r\n    let hasError = false;\r\n    const scoreList = scoring;\r\n    let focus = '';\r\n    setFocusScoring(focus);\r\n    const scoreValues = [];\r\n    scoreList.map((value) => {\r\n      const { name } = value;\r\n      const scoreValue = value;\r\n      switch (name) {\r\n        case 'Neatness':\r\n          scoreValue.enabled = scoreChecked.neatness;\r\n          scoreValue.weight = scores.neatness;\r\n          break;\r\n        case 'Strength of Primetime':\r\n          scoreValue.enabled = scoreChecked.strengthofprimetime;\r\n          scoreValue.weight = scores.strengthofprimetime;\r\n          break;\r\n        case 'Average Break Time':\r\n          scoreValue.enabled = scoreChecked.averagebreaktime;\r\n          scoreValue.weight = scores.averagebreaktime;\r\n          break;\r\n        case 'Youth of Asset':\r\n          scoreValue.enabled = scoreChecked.youthofasset;\r\n          scoreValue.weight = scores.youthofasset;\r\n          break;\r\n        case 'UK Box Office':\r\n          scoreValue.enabled = scoreChecked.ukboxoffice;\r\n          scoreValue.weight = scores.ukboxoffice;\r\n          break;\r\n        case 'US Box Office':\r\n          scoreValue.enabled = scoreChecked.usboxoffice;\r\n          scoreValue.weight = scores.usboxoffice;\r\n          break;\r\n        case 'Ad Optimisation':\r\n          scoreValue.enabled = scoreChecked.adoptimisation;\r\n          scoreValue.weight =\r\n            scores.adoptimisation === '' ? null : scores.adoptimisation;\r\n          break;\r\n        case 'Free Play Utilisation':\r\n          scoreValue.enabled = scoreChecked.freeplayutilisation;\r\n          scoreValue.weight = scores.freeplayutilisation;\r\n          break;\r\n        case 'Priority Title Utilisation':\r\n          scoreValue.enabled = scoreChecked.prioritytitleutilisation;\r\n          scoreValue.weight = scores.prioritytitleutilisation;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (scoreValue.enabled) {\r\n        if (scoreValue.weight === '' || scoreValue.weight === null) {\r\n          hasError = true;\r\n          focus = focus === '' ? name : focus;\r\n        }\r\n      } else if (scoreValue.weight === '') {\r\n        scoreValue.weight = null;\r\n      }\r\n      scoreValues.push(scoreValue);\r\n      return true;\r\n    });\r\n    if (hasError) {\r\n      setModalShow(false);\r\n      danger('Scoring value is required');\r\n      getScoringInvalidInputs(scoreValues);\r\n    } else {\r\n      const scoreForm = {\r\n        channelId: channelID,\r\n        scores: scoreValues,\r\n      };\r\n      try {\r\n        await ChannelProfileService.saveChannelScoring(scoreForm);\r\n          if (nextTab === 'Profile') handleGetChannelProfileProbabilities();\r\n          if (!fromCancel) changeTab();\r\n          clearDirtyForm();\r\n          success('Scoring saved');\r\n          confirmNavigation();\r\n          hidePrompt();\r\n      } catch (error) {\r\n        console.error('Error saving channel scoring:', error);\r\n      }\r\n    }\r\n  }, [channelID,scores]);\r\n\r\n  const renderModifyProfileComponent = () => {\r\n    profileComponentRef.current.renderModifyProfileComponent();\r\n  };\r\n\r\n  const saveDiryForm = () => {\r\n    switch (dirtyForm) {\r\n      case 'Profile':\r\n        saveProfile();\r\n        break;\r\n      case 'Business Rules':\r\n        saveBusinessRules();\r\n        break;\r\n      case 'Scoring':\r\n        saveScoring();\r\n        break;\r\n      case 'Manage Profile':\r\n        saveProfile();\r\n        renderModifyProfileComponent();\r\n        break;\r\n      case 'Add/Insert Channel Profile':\r\n        profileComponentRef.current.saveChannelProfileProbabilities();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const discardChanges = () => {\r\n    if (dirtyForm !== '') {\r\n      if (nextElement === '') {\r\n        if (dirtyForm === 'Profile') {\r\n          handleGetChannelProbabilities(channelID);\r\n        } else if (dirtyForm === 'Business Rules') {\r\n          getBusinessRules();\r\n          if (nextTab === 'Profile') handleGetChannelProfileProbabilities();\r\n        } else if (dirtyForm === 'Scoring') {\r\n          getScoring();\r\n          if (nextTab === 'Profile') handleGetChannelProfileProbabilities();\r\n        } else if (dirtyForm === 'Manage Profile') {\r\n          renderModifyProfileComponent();\r\n        } else if (dirtyForm === 'Add/Insert Channel Profile') {\r\n          handleGetChannelProfileProbabilities();\r\n        }\r\n      }\r\n      if (Object.keys(nextChannel).length !== 0) {\r\n        changeChannel(nextChannel);\r\n      } else if (nextElement !== '') {\r\n        if (nextElement === 'Day') {\r\n          changeDay(next);\r\n        } else if (nextElement === 'StartTime') {\r\n          changeStartTime(next);\r\n        } else if (nextElement === 'ProfileValues') {\r\n          setSelectedProfile(next);\r\n        }\r\n      } else {\r\n        setActiveTab(nextTab);\r\n      }\r\n      clearDirtyForm();\r\n    }\r\n  };\r\n\r\n  const getStartTimeByClockType = () => {\r\n    if (clockType === 'Standard') {\r\n      return '&startTime=00:00';\r\n    } else {\r\n      return '&startTime=24:00';\r\n    }\r\n  };\r\n\r\n  const constructChannelProfileSessionParameters = (parameters) => {\r\n    const channelIdParam =\r\n      parameters.channelId || parameters.channelID\r\n        ? `?channelId=${\r\n            parameters.channelId ? parameters.channelId : parameters.channelID\r\n          }`\r\n        : '';\r\n    const weekDayParam = parameters.weekDay\r\n      ? `&weekDay=${parameters.weekDay}`\r\n      : '';\r\n    const startTimeParam = parameters.startTime\r\n      ? `&startTime=${parameters.startTime}`\r\n      : getStartTimeByClockType();\r\n\r\n    return `${channelIdParam}${weekDayParam}${startTimeParam}`;\r\n  };\r\n\r\n  const fetchScheduleSession = async () => {\r\n    try {\r\n      const response = await ScheduleService.getScheduleSession();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching schedule session:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleGetChannelProfileSession = async () => {\r\n    try {\r\n      const response = await ChannelProfileService.getChannelProfileSession();\r\n        const channel = channelOptions.find(\r\n          (o) => o.id === response.data.channelID\r\n        );\r\n        const day =\r\n          response.data.weekDay > 0\r\n            ? ProfileForms.dayList.find(\r\n                (o) => o.id === response.data.weekDay.toString()\r\n              )\r\n            : ProfileForms.dayList[0];\r\n  \r\n        setChannelProfileSessionParameters(response.data);\r\n        setGetProbabilitiesParameters({\r\n          ...getProbabilitiesParameters,\r\n          weekDay: response.data.weekDay,\r\n        });\r\n  \r\n        if (channel) {\r\n          setChannelID(channel.id);\r\n          setSelectedChannel(channel.name);\r\n        }\r\n        setProfileFilter({\r\n          ...profileFilter,\r\n          day: day.name,\r\n          startTime: response.data.startTime ? response.data.startTime : '0:00',\r\n        });\r\n  \r\n        setProfileParameters({\r\n          ...profileParameters,\r\n          day: day.name,\r\n          startTime: response.data.startTime ? response.data.startTime : '0:00',\r\n        });\r\n    } catch (error) {\r\n      console.error('Error fetching channel profile session:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveChannelProfileSession = async () => {\r\n    try {\r\n      await ChannelProfileService.saveChannelProfileSession(\r\n        constructChannelProfileSessionParameters(channelProfileSessionParameters)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error saving channel profile session:', error);\r\n    }\r\n\r\n  };\r\n\r\n  const isProbabilitiesValid = (probabilities) => {\r\n    if (probabilities.some((o) => o.probabilities.length === 0)) {\r\n      danger('Please add at least one profile to each categories');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleOnClickSaveProbabilities = async (\r\n    data,\r\n    shouldNotGetChannelProfileProbabilities\r\n  ) => {\r\n    const parameters = {\r\n      channelID,\r\n      categories: data,\r\n    };\r\n    if (isProbabilitiesValid(data)) {\r\n      const isFormValid = data.every(\r\n        (o) =>\r\n          o.name.length !== 0 &&\r\n          o.probabilities.length !== 0 &&\r\n          o.probabilities.every((p) => p.name.length !== 0)\r\n      );\r\n\r\n      if (isFormValid) {\r\n        try {\r\n          await ChannelProfileService.saveChannelProfileProbabilities(parameters);\r\n          if (!shouldNotGetChannelProfileProbabilities) {\r\n            handleGetChannelProfileProbabilities();\r\n          }\r\n          if (!fromCancel) confirmNavigation();\r\n          success('Probabilities saved');\r\n          if (Object.keys(nextChannel).length !== 0) {\r\n            changeChannel(nextChannel);\r\n          }\r\n          if (Object.keys(nextTab).length !== 0) {\r\n            changeTab(nextTab);\r\n          }\r\n          clearDirtyForm();\r\n        } catch (error) {\r\n          console.error('Error saving channel profile probabilities:', error);\r\n          if (profileComponentRef.current !== null) {\r\n            profileComponentRef.current.hideConfirmationModal();\r\n          }\r\n          setTimeout(() => {\r\n            danger(error.response.data.message);\r\n          }, 500);\r\n        }\r\n\r\n        setModalShow(false);\r\n        hidePrompt();\r\n      } else {\r\n        danger('Please provide a value to all category and profile fields.');\r\n        hidePrompt();\r\n        setModalShow(false);\r\n      }\r\n    } else {\r\n      hidePrompt();\r\n      setModalShow(false);\r\n    }\r\n  };\r\n\r\n  const onChangeGetProbabilityParameters = (e) => {\r\n    const removeFirstCharIfStartsWithZero =\r\n      e.target.value[0] === '0' &&\r\n      (e.target.value[0].length > 1 || e.target.value[1] === '0')\r\n        ? e.target.value.substring(1).replace(/[^0-9]/g, '')\r\n        : e.target.value.replace(/[^0-9]/g, '') || '0';\r\n\r\n    const profileProbabilities = JSON.parse(\r\n      JSON.stringify(getProbabilitiesParameters)\r\n    );\r\n    const columnPosition = e.target.name.split(',')[0];\r\n    const orderNumber = e.target.name.split(',')[1];\r\n    const name = e.target.name.split(',')[2];\r\n\r\n    const columnIndex = profileProbabilities.categories.findIndex(\r\n      (o) =>\r\n        o.columnPosition === parseInt(columnPosition, 10) &&\r\n        o.probabilities.findIndex((p) => p.name === name) !== -1\r\n    );\r\n\r\n    profileProbabilities.categories[columnIndex].probabilities[\r\n      orderNumber - 1\r\n    ].value = parseInt(removeFirstCharIfStartsWithZero);\r\n    if (\r\n      profileProbabilities.categories[columnIndex].probabilities[\r\n        orderNumber - 1\r\n      ].value > 100\r\n    ) {\r\n      profileProbabilities.categories[columnIndex].probabilities[\r\n        orderNumber - 1\r\n      ].value = 100;\r\n    }\r\n\r\n    setCategories(profileProbabilities.categories);\r\n    setGetProbabilitiesParameters(profileProbabilities);\r\n    if (\r\n      JSON.stringify(profileProbabilities.categories) !==\r\n      JSON.stringify(getProbabilitiesParametersClone.categories)\r\n    ) {\r\n      setDirtyForm('Profile');\r\n    } else {\r\n      clearDirtyForm();\r\n    }\r\n  };\r\n\r\n  const handleOnShowImportConfirmationModal = () => {\r\n    setShowImportConfirmationModal(true);\r\n  };\r\n\r\n  const handleOnHideShowImportConfirmationModal = () => {\r\n    setShowImportConfirmationModal(false);\r\n  };\r\n\r\n  const handleOnImportBusinessRules = (file, proceed) => {\r\n    ChannelProfileService.uploadImportedFile(channelID, file)\r\n      .then((response) => {\r\n        if (\r\n          ((customBusinessRules.length > 0 &&\r\n            JSON.stringify(customBusinessRules) !==\r\n              JSON.stringify(response.data.customBusinessRulesModel)) ||\r\n            response.data.customBusinessRulesExist) &&\r\n          !proceed\r\n        ) {\r\n          handleOnShowImportConfirmationModal();\r\n          setSavedFile(file);\r\n        } else {\r\n          setCustomBusinessRules(response.data.customBusinessRulesModel);\r\n          setDirtyForm('Business Rules');\r\n        }\r\n      })\r\n      .catch((error) => danger(error.response.data.message))\r\n      .finally(() => setClearFileName(true));\r\n  };\r\n\r\n  const handleOnChangeCustomBusinessRules = (value, index) => {\r\n    const customBusinessRulesClone = [...customBusinessRules];\r\n    customBusinessRulesClone[index].values = value;\r\n    setCustomBusinessRules(customBusinessRulesClone);\r\n    setDirtyForm('Business Rules');\r\n  };\r\n\r\n  const HandleOnExportCustomBusinessRules = useCallback(async () => {\r\n    setIsExportingCustomBusinessRules(true);\r\n\r\n    if (!isExportingCustomBusinessRules) {\r\n      try {\r\n        const response = await ChannelProfileService.exportCustomBusinessRules(channelID);\r\n          const blob = new Blob([response.data], {\r\n            type:\r\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n          });\r\n          saveAs(\r\n            blob,\r\n            `op2mise_custom_business_rules_export_${DateService.toExportFormat(\r\n              new Date()\r\n            )}.xlsx`\r\n          );\r\n      } catch(error) {\r\n        console.error('Error exporting custom business rules:', error);\r\n      }\r\n      setIsExportingCustomBusinessRules(false);\r\n    }\r\n  }, [channelID]);\r\n  \r\n  useEffect(() => {\r\n    return () => {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setClockType(AuthService.getUserIdentity().clockType);\r\n  }, [clockType]);\r\n\r\n  const handleCheckIfCanRenderModifyProfileComponent = () => {\r\n    if (dirtyForm) {\r\n      setDirtyForm('Manage Profile');\r\n      setNextTab('Profile');\r\n      setModalShow(true);\r\n    } else {\r\n      renderModifyProfileComponent();\r\n    }\r\n  };\r\n\r\n  const handleCheckIfCanCloseManageProfile = (state) => {\r\n    if (state) {\r\n      setNextTab('Profile');\r\n      setModalShow(true);\r\n    } else {\r\n      handleGetChannelProfileProbabilities();\r\n    }\r\n  };\r\n\r\n  const onClearFileSelected = () => {\r\n    setClearFileName(true);\r\n    setSavedFile();\r\n  };\r\n\r\n  const handleOnHidePrompt = () => {\r\n    setModalShow(false);\r\n    setFromCancel(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (modalShow) setFromCancel(false);\r\n  }, [modalShow]);\r\n\r\n  useEffect(() => {\r\n    if (channelID) {\r\n      if (activeTab === 'Business Rules') getBusinessRules();\r\n      if (activeTab === 'Scoring') getScoring();\r\n    \r\n      return () => {\r\n        abortControllerGetBusinessRules.abort();\r\n        abortControllerGetScoring.abort();\r\n      };\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    getChannels();\r\n\r\n    return () => {\r\n      abortControllerGetChannels.abort();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (channelID && profileFilter && profileFilter.startTime) {\r\n      handleGetChannelProfileProbabilities();\r\n      getBusinessRules();\r\n      getScoring();\r\n      setActiveTab('Profile');\r\n\r\n      return () => {\r\n        abortControllerGetBusinessRules.abort();\r\n        abortControllerGetScoring.abort();\r\n      };\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [channelID, profileFilter]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      channelOptions.length > 0 &&\r\n      !Object.keys(channelOptions[0]).length == 0\r\n    ) {\r\n      handleGetChannelProfileSession();\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [channelOptions]);\r\n\r\n  useEffect(() => {\r\n    if (channelProfileSessionParameters) {\r\n      if (renderTimes > 0) {\r\n        handleSaveChannelProfileSession();\r\n      }\r\n      setRenderTimes(renderTimes + 1);\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [channelProfileSessionParameters, getProbabilitiesParameters.clockType]);\r\n\r\n  const showActiveTab = () => {\r\n    if (isLoading) {\r\n      return <BootstrapSpinner />;\r\n    }\r\n    if (activeTab === 'Profile') {\r\n      return (\r\n        <ProfileComponent\r\n          ref={profileComponentRef}\r\n          genreData={genreData}\r\n          certificationData={certificationData}\r\n          ageCertificationData={ageCertificationData}\r\n          gradesData={gradesData}\r\n          profileFilter={profileParameters}\r\n          handleChangeDay={handleChangeDay}\r\n          handleChangeStartTime={handleChangeStartTime}\r\n          handleChangeEndTime={handleChangeEndTime}\r\n          handleChangeInputGenre={handleChangeInputGenre}\r\n          handleChangeCertification={handleChangeCertification}\r\n          handleChangeInputAgeCertification={handleChangeInputAgeCertification}\r\n          handleChangeInputGrade={handleChangeInputGrade}\r\n          callbackSaveProfile={saveProfile}\r\n          handleSwitchEndTime={handleSwitchEndTime}\r\n          onClickSaveProbabilities={handleOnClickSaveProbabilities}\r\n          categories={categories}\r\n          onChangeGetProbabilityParameters={onChangeGetProbabilityParameters}\r\n          checkIfCanRenderModifyProfileComponent={\r\n            handleCheckIfCanRenderModifyProfileComponent\r\n          }\r\n          getChannelProbabilities={handleGetChannelProbabilities}\r\n          channelId={channelID}\r\n          shouldSwitchProfileDivId={shouldSwitchProfileDivId}\r\n          setDirtyForm={setDirtyForm}\r\n          onCloseForm={handleCheckIfCanCloseManageProfile}\r\n          selectedDay={getProbabilitiesParameters.weekDay}\r\n          timeInterval={getProbabilitiesParameters.timeInterval}\r\n          clockType={getProbabilitiesParameters.clockType}\r\n          changeTab={changeTab}\r\n          clearDirtyForm={clearDirtyForm}\r\n          confirmNavigation={confirmNavigation}\r\n          hidePrompt={hidePrompt}\r\n          fromCancel={fromCancel}\r\n          setModalShow={setModalShow}\r\n          selectedProfile={selectedProfile}\r\n          setSelectedProfile={handleSelectedProfile}\r\n        />\r\n      );\r\n    }\r\n    if (activeTab === 'Scoring') {\r\n      return (\r\n        <ScoringComponent\r\n          scoreChecked={scoreChecked}\r\n          scores={scores}\r\n          onChangeInputScores={onChangeInputScores}\r\n          handleCheckBoxChangeScores={handleCheckBoxChangeScores}\r\n          callbackSaveScoring={saveScoring}\r\n          neatnessChecked={neatnessChecked}\r\n          channelID={channelID}\r\n          focusScoring={focusScoring}\r\n          invalidFields={scoringInvalidFields}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <BusinessRulesComponent\r\n        customBusinessRules={customBusinessRules}\r\n        signature={signature}\r\n        handleSignatureChange={handleSignatureChange}\r\n        scheduleTimings={scheduleTimings}\r\n        handleScheduleChange={handleScheduleChange}\r\n        handleScheduleInputChange={handleScheduleInputChange}\r\n        handleScheduleTimeRangeChange={handleScheduleTimeRangeChange}\r\n        handleAssetRepeatSelectChange={handleAssetRepeatSelectChange}\r\n        assetRepeats={assetRepeats}\r\n        handleAssetChange={handleAssetChange}\r\n        handleAssetChangeInput={handleAssetChangeInput}\r\n        certification={certification}\r\n        handleCertificationChange={handleCertificationChange}\r\n        assetProbability={assetProbability}\r\n        handleAssetProbabilityChange={handleAssetProbabilityChange}\r\n        handleAssetProbabilityChangeInput={handleAssetProbabilityChangeInput}\r\n        types={types}\r\n        handleTypeChange={handleTypeChange}\r\n        handleTypeInputChange={handleTypeInputChange}\r\n        handleTypeSelectChange={handleTypeSelectChange}\r\n        callbackSaveBusinessRules={saveBusinessRules}\r\n        focusInput={focusInput}\r\n        onImportBusinessRules={handleOnImportBusinessRules}\r\n        onExportBusinessRules={HandleOnExportCustomBusinessRules}\r\n        onChangeCustomBusinessRules={handleOnChangeCustomBusinessRules}\r\n        clearFileName={clearFileName}\r\n        setClearFileName={setClearFileName}\r\n        onClearFileSelected={onClearFileSelected}\r\n        channelId={channelID}\r\n        invalidFields={businessRulesInvalidFields}\r\n        handleOnValidatePrimetimeDaypart={handleOnValidatePrimetimeDaypart}\r\n        executeDaypartClearValues={executeDaypartClearValues}\r\n        clearDirtyForm={clearDirtyForm}\r\n        handleOnValidatePrimetimeJunction={handleOnValidatePrimetimeJunction}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BannerComponent\r\n        componentName=\"Channel Setup\"\r\n        addButtonText=\"\"\r\n        isAddButtonHidden\r\n        isSearchHidden\r\n      />\r\n      <hr className={Styles.divider} />\r\n      <div className={`row ${Styles.marginBottom}`}>\r\n        <div className={Styles.channelLabel}>Channel:</div>\r\n        <div className={Styles.daySelect}>\r\n          <SelectComponent\r\n            text={selectedChannel}\r\n            list={channelOptions}\r\n            onSelect={handleSelectChannel}\r\n            width=\"100%\"\r\n            withSearch\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={`row ${Styles.marginBottom}`} />\r\n      {selectedChannel !== 'Please select a channel' ? (\r\n        <div className=\"row\">\r\n          <div className=\"tabs\">\r\n            <ol className={TabStyles.tabList}>\r\n              <TabHeaderComponent\r\n                activeTab={activeTab}\r\n                label=\"Profile\"\r\n                onClick={onClickTabItem}\r\n              />\r\n              <TabHeaderComponent\r\n                activeTab={activeTab}\r\n                label=\"Business Rules\"\r\n                onClick={onClickTabItem}\r\n              />\r\n              <TabHeaderComponent\r\n                activeTab={activeTab}\r\n                label=\"Scoring\"\r\n                onClick={onClickTabItem}\r\n              />\r\n            </ol>\r\n            <div className={`${'tab-content'} ${TabStyles.tabContent}`}>\r\n              <div className={Styles.activeTabContent}>{showActiveTab()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      <ImportConfirmationModalComponent\r\n        show={showImportConfirmationModal}\r\n        onHide={handleOnHideShowImportConfirmationModal}\r\n        onProceed={() => {\r\n          handleOnImportBusinessRules(savedFile, true);\r\n          handleOnHideShowImportConfirmationModal();\r\n        }}\r\n      />\r\n\r\n      {/*For changing the tabs/select inside the page */}\r\n      <ConfirmLeaveModal\r\n        show={modalShow}\r\n        onSave={saveDiryForm}\r\n        onDiscard={discardChanges}\r\n        onHide={handleOnHidePrompt}\r\n      />\r\n\r\n      {/*For leaving the page */}\r\n      <ConfirmLeaveModal\r\n        show={showPrompt}\r\n        onSave={saveDiryForm}\r\n        onDiscard={confirmNavigation}\r\n        onHide={hidePrompt}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChannelProfileComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"bootstrapSpinner\":\"styles_bootstrapSpinner__Rq0Tl\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction BootstrapSpinner({ size }) {\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            <div className={styles.bootstrapSpinner} style={{ width: size, height: size }}>\r\n                <i\r\n                    className=\"fas fa-circle-notch fa-spin\"\r\n                    style={{ fontSize: size, color: '#008662' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBootstrapSpinner.propTypes = {\r\n    size: PropTypes.string,\r\n};\r\n  \r\nBootstrapSpinner.defaultProps = {\r\n    size: '40px',\r\n};\r\n\r\nexport default BootstrapSpinner;","import { Modal } from \"react-bootstrap\";\r\nimport styles from './styles.module.css';\r\nimport Button from \"../button/Button\";\r\n\r\nconst ConfirmLeaveModal = ({ show, onSave, onDiscard, onHide, isSaving }) => {\r\n    return (\r\n        <Modal\r\n            size=\"md\"\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"confirm-leave-modal\"\r\n        >\r\n            <Modal.Body className={styles.promptModalBody}>\r\n                <div>\r\n                    You have unsaved changes, are you sure you want to navigate away\r\n                    from this page?\r\n                </div>\r\n                <div>\r\n                    <div className={styles.button}>\r\n                        <Button\r\n                            isLoading={isSaving}\r\n                            text=\"Save and proceed\"\r\n                            onClick={onSave}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.button}>\r\n                        <Button\r\n                            text=\"Discard changes and proceed\"\r\n                            onClick={onDiscard}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.button}>\r\n                        <Button\r\n                            text=\"Cancel\"\r\n                            defaultBtn\r\n                            onClick={onHide}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ConfirmLeaveModal;","// extracted by mini-css-extract-plugin\nexport default {\"timeInput\":\"styles_timeInput__GBAx4\",\"timeInputWrapper\":\"styles_timeInputWrapper__GFyGF\",\"hourInput\":\"styles_hourInput__I3zdk\",\"minuteInput\":\"styles_minuteInput__NrxBH\",\"inputDivider\":\"styles_inputDivider__QJbWQ\",\"invalidInput\":\"styles_invalidInput__M3CH7\",\"errorMessage\":\"styles_errorMessage__SVjpw\",\"disabledInput\":\"styles_disabledInput__ngBKX\"};","import { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport moment from 'moment';\r\nimport styles from './styles.module.css';\r\n\r\nconst CustomTimeInput = forwardRef(\r\n  (\r\n    {\r\n      value,\r\n      onChange,\r\n      disabled,\r\n      validate,\r\n      onValidate,\r\n      errorMessage,\r\n      clearValues,\r\n      min,\r\n      max,\r\n      defaultValue,\r\n      customWrapper,\r\n      channelForms,\r\n    },\r\n    ref\r\n  ) => {\r\n    const hourInputRef = useRef();\r\n    const minuteInputRef = useRef();\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    const [hour, setHour] = useState('');\r\n    const [minute, setMinute] = useState('');\r\n    const [changeTimes, setChangeTimes] = useState(0);\r\n    const [isInvalid, setIsInvalid] = useState(false);\r\n    const shouldValidate = typeof onValidate === 'function' && validate;\r\n\r\n    // Restricting characters that is not convertable to number\r\n    const getNumbersOnly = (string) => {\r\n      const stringArray = string.split('');\r\n      const result = stringArray.filter(\r\n        (char) => !isNaN(char) && !isNaN(parseFloat(char))\r\n      );\r\n      return result.join('');\r\n    };\r\n\r\n    // Change cursor\r\n    const focusToHour = () => {\r\n      setTimeout(() => {\r\n        hourInputRef.current.focus();\r\n        hourInputRef.current.select();\r\n      }, 1);\r\n    };\r\n\r\n    const focusToMinute = () => {\r\n      setTimeout(() => {\r\n        minuteInputRef.current.focus();\r\n        minuteInputRef.current.select();\r\n      }, 1);\r\n    };\r\n\r\n    const handleOnFocus = (e) => e.target.select();\r\n\r\n    const handleOnClick = (e) => e.stopPropagation();\r\n\r\n    const handleOnBlur = () => setChangeTimes(0);\r\n\r\n    // Checking and setting values\r\n    const isTwoDigit = (value) => value.length === 3;\r\n\r\n    const pad = (value) => {\r\n      if (value.length === 1) return `0${value}`;\r\n      else if (value[0] === '0') return value.substring(1, 3);\r\n      else return value;\r\n    };\r\n\r\n    const isValueValid = (value, inputName) => {\r\n      const number = parseInt(value);\r\n      if (inputName === 'hour') return number <= 23;\r\n      else return number <= 59;\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n      const name = e.target.name;\r\n      let value = getNumbersOnly(e.target.value);\r\n      value = pad(value);\r\n      const isFirstDigitZero = value[0] === '0';\r\n      const isNotValid = value && !isValueValid(value, name);\r\n\r\n      if (\r\n        name === 'hour' &&\r\n        (changeTimes === 1 || value.length === 3) &&\r\n        (value.length === 2 || isNotValid)\r\n      )\r\n        focusToMinute();\r\n      if (!isFirstDigitZero && (isTwoDigit(value) || isNotValid)) return false;\r\n\r\n      if (name === 'hour') {\r\n        setHour(value);\r\n        if (!hour && !minute) setMinute('00');\r\n      } else setMinute(value);\r\n      setChangeTimes(changeTimes + 1);\r\n      setIsChanged(true);\r\n    };\r\n\r\n    const constructTime = (value) => {\r\n      const date = new Date(value);\r\n      const dateHour = date.getHours();\r\n      const dateMinute = date.getMinutes();\r\n      const dateHourValue = pad(dateHour.toString());\r\n      const dateMinuteValue = pad(dateMinute.toString());\r\n      setHour(dateHourValue);\r\n      setMinute(dateMinuteValue);\r\n    };\r\n\r\n    // Keyboard arrow navigations\r\n    const onKeyDownHour = (e) => {\r\n      if (e.key === 'ArrowRight') focusToMinute();\r\n      if (e.key === 'ArrowUp') {\r\n        let incremented = parseInt(hour) + 1;\r\n        if (incremented <= 23) setHour(pad(incremented.toString()));\r\n      }\r\n      if (e.key === 'ArrowDown') {\r\n        let decremented = parseInt(hour) - 1;\r\n        if (decremented >= 0) setHour(pad(decremented.toString()));\r\n      }\r\n      if (e.key === 'Backspace') {\r\n        setHour('');\r\n        setChangeTimes(0);\r\n        setIsChanged(true);\r\n      }\r\n    };\r\n\r\n    const onKeyDownMinute = (e) => {\r\n      if (e.key === 'ArrowLeft') focusToHour();\r\n      if (e.key === 'ArrowUp') {\r\n        let incremented = parseInt(minute) + 1;\r\n        if (incremented <= 59) setMinute(pad(incremented.toString()));\r\n      }\r\n      if (e.key === 'ArrowDown') {\r\n        let decremented = parseInt(minute) - 1;\r\n        if (decremented >= 0) setMinute(pad(decremented.toString()));\r\n      }\r\n      if (e.key === 'Backspace') {\r\n        setMinute('');\r\n        setIsChanged(true);\r\n      }\r\n    };\r\n\r\n    const checkIfOutsideOfMinMax = (time) => {\r\n      var isMaxTime = false;\r\n      if (max) {\r\n        let dateSplit = max.toLocaleString().split(' ');\r\n        isMaxTime = dateSplit[2] == 'AM' && dateSplit[1] == '12:00:00';\r\n      }\r\n      return (\r\n        (min ? time < min : false) || (max ? time > max && !isMaxTime : false)\r\n      );\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (defaultValue) {\r\n        const isValidDate = defaultValue && moment(defaultValue).isValid();\r\n        if (isValidDate) constructTime(defaultValue);\r\n      }\r\n    }, [defaultValue]);\r\n\r\n    useEffect(() => {\r\n      if(channelForms){\r\n        if ((value && !isChanged) || !hour || !minute) {\r\n          const isValidDate = value && moment(value).isValid();\r\n          if (isValidDate) constructTime(value);\r\n        }\r\n        else if(!value){\r\n          setHour('');\r\n          setMinute('');\r\n        }\r\n      }\r\n      else{\r\n      if ((value && !isChanged) || !hour || !minute) {\r\n        const isValidDate = value && moment(value).isValid();\r\n        if (isValidDate) constructTime(value);\r\n      }\r\n    }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n      if (isChanged) {\r\n        if (hour && minute) {\r\n          const time = new Date(\r\n            0,\r\n            0,\r\n            0,\r\n            parseInt(hour),\r\n            parseInt(minute),\r\n            0,\r\n            0\r\n          );\r\n          if (typeof onChange === 'function') onChange(time);\r\n          const isOutSideOfMinMax = checkIfOutsideOfMinMax(time);\r\n          if (typeof onValidate === 'function') onValidate(isOutSideOfMinMax);\r\n        } else {\r\n          if (typeof onChange === 'function') onChange(null);\r\n          setIsInvalid(!hour || !minute);\r\n          if (typeof onValidate === 'function') onValidate(!hour || !minute);\r\n        }\r\n      } else {\r\n        if (typeof onValidate === 'function') onValidate(false);\r\n      }\r\n    }, [hour, minute]);\r\n\r\n    useEffect(() => {\r\n      if (clearValues) {\r\n        setHour('');\r\n        setMinute('');\r\n      }\r\n    }, [clearValues]);\r\n\r\n    return (\r\n      <div className={styles.timeInput}>\r\n        <div\r\n          ref={ref}\r\n          className={`\r\n                    ${styles.timeInputWrapper}\r\n                    ${shouldValidate && !disabled && styles.invalidInput}\r\n                    ${disabled && styles.disabledInput}\r\n                    ${customWrapper && customWrapper}\r\n                `}\r\n          onClick={focusToHour}\r\n        >\r\n          <input\r\n            ref={hourInputRef}\r\n            className={styles.hourInput}\r\n            style={{ marginLeft: hour && '-5px' }}\r\n            value={hour}\r\n            name=\"hour\"\r\n            type=\"text\"\r\n            placeholder=\"HH\"\r\n            autoComplete=\"off\"\r\n            onChange={handleOnChange}\r\n            onKeyDown={onKeyDownHour}\r\n            onFocus={handleOnFocus}\r\n            onClick={handleOnClick}\r\n            onBlur={handleOnBlur}\r\n            disabled={disabled}\r\n          />\r\n          <span className={styles.inputDivider}>:</span>\r\n          <input\r\n            ref={minuteInputRef}\r\n            className={styles.minuteInput}\r\n            value={minute}\r\n            name=\"minute\"\r\n            type=\"text\"\r\n            placeholder=\"MM\"\r\n            autoComplete=\"off\"\r\n            onChange={handleOnChange}\r\n            onKeyDown={onKeyDownMinute}\r\n            onFocus={handleOnFocus}\r\n            onClick={handleOnClick}\r\n            onBlur={handleOnBlur}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n        {shouldValidate && isInvalid && !disabled && (\r\n          <span className={styles.errorMessage}>{errorMessage}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomTimeInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"styles_input__wLU5u\",\"label\":\"styles_label__46S-k\",\"errorInput\":\"styles_errorInput__8Ly1J\",\"errorMessage\":\"styles_errorMessage__O6AC0\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction InputComponent({\r\n  label,\r\n  name,\r\n  type,\r\n  placeHolder,\r\n  value,\r\n  showErrorMessage,\r\n  errorMessage,\r\n  maxLength,\r\n  isRequired,\r\n  width,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <>\r\n      {label && (\r\n        <div className={styles.label}>\r\n          {label}\r\n          {' '}\r\n          {isRequired && <span style={{ color: '#FF7878' }}>*</span>}\r\n        </div>\r\n      )}\r\n\r\n      <input\r\n        className={`${styles.input} ${showErrorMessage && styles.errorInput}`}\r\n        style={{ width }}\r\n        name={name && name}\r\n        type={type && type}\r\n        placeholder={placeHolder && placeHolder}\r\n        value={value && value}\r\n        maxLength={maxLength && maxLength}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n      />\r\n\r\n      {showErrorMessage && (\r\n        <small className={styles.errorMessage}>{errorMessage}</small>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nInputComponent.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  placeHolder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  showErrorMessage: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  maxLength: PropTypes.string,\r\n  isRequired: PropTypes.bool,\r\n  width: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nInputComponent.defaultProps = {\r\n  label: '',\r\n  name: '',\r\n  type: 'text',\r\n  placeHolder: '',\r\n  value: '',\r\n  showErrorMessage: false,\r\n  errorMessage: '',\r\n  maxLength: '',\r\n  isRequired: false,\r\n  width: '',\r\n  onChange: null,\r\n};\r\n\r\nexport default InputComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"switchDiv\":\"styles_switchDiv__BFlSt\",\"switch\":\"styles_switch__WEbw-\",\"activeSwitch\":\"styles_activeSwitch__Xfrjf\",\"disabledSwitch\":\"styles_disabledSwitch__v-DsA\",\"disabledActiveSwitch\":\"styles_disabledActiveSwitch__W0s-J\",\"switchWithText\":\"styles_switchWithText__jmrhn\",\"activeSwitchWithText\":\"styles_activeSwitchWithText__1m7j7\",\"switchModal\":\"styles_switchModal__JNY4V\",\"text\":\"styles_text__3Lc+8\",\"activeText\":\"styles_activeText__TO-0g\",\"isModalText\":\"styles_isModalText__oj3SH\",\"label\":\"styles_label__vZEX8\",\"disabledLabel\":\"styles_disabledLabel__rErxZ\"};","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction SwitchComponent({\r\n  label,\r\n  text,\r\n  active,\r\n  disabled,\r\n  onSwitch,\r\n  customWidth,\r\n  right,\r\n  name,\r\n  blurredOnInactive,\r\n  isModal,\r\n}) {\r\n  const [isActiveSwitch, setIsActiveSwitch] = useState(active);\r\n\r\n  useEffect(() => {\r\n    setIsActiveSwitch(active);\r\n  }, [active]);\r\n\r\n  const executeOnSwitch = () => {\r\n    if (!disabled) {\r\n      // typeof onSwitch === 'function' && onSwitch(!isActiveSwitch, name);\r\n      if (typeof onSwitch === 'function') onSwitch(!isActiveSwitch, name);\r\n      setIsActiveSwitch(!isActiveSwitch);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.switchDiv}>\r\n      {!right && (\r\n        <div\r\n          className={`${styles.label} ${blurredOnInactive &&\r\n            styles.disabledLabel}`}\r\n        >\r\n          {label}\r\n        </div>\r\n      )}\r\n      {text ? (\r\n        <div>\r\n          {isActiveSwitch ? (\r\n            <div\r\n              className={`${styles.activeSwitch} ${disabled &&\r\n                (isActiveSwitch\r\n                  ? styles.disabledActiveSwitch\r\n                  : styles.disabledSwitch)} ${\r\n                styles.activeSwitchWithText\r\n              } ${isModal && styles.switchModal}`}\r\n              onClick={executeOnSwitch}\r\n              style={{ width: customWidth || null }}\r\n              onKeyDown={executeOnSwitch}\r\n              role=\"presentation\"\r\n            >\r\n              <span\r\n                className={`${styles.activeText} ${isModal &&\r\n                  styles.isModalText}`}\r\n              >\r\n                {text && text[0]}\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className={`${styles.switch} ${disabled &&\r\n                (isActiveSwitch\r\n                  ? styles.disabledActiveSwitch\r\n                  : styles.disabledSwitch)} ${\r\n                styles.switchWithText\r\n              } ${isModal && styles.switchModal}`}\r\n              onClick={executeOnSwitch}\r\n              style={{ width: customWidth || null }}\r\n              onKeyDown={executeOnSwitch}\r\n              role=\"presentation\"\r\n            >\r\n              <span\r\n                className={`${styles.text} ${isModal && styles.isModalText}`}\r\n              >\r\n                {text[1]}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={`${\r\n            isActiveSwitch ? styles.activeSwitch : styles.switch\r\n          } ${disabled &&\r\n            (isActiveSwitch\r\n              ? styles.disabledActiveSwitch\r\n              : styles.disabledSwitch)}`}\r\n          onClick={executeOnSwitch}\r\n          onKeyDown={executeOnSwitch}\r\n          role=\"presentation\"\r\n        />\r\n      )}\r\n\r\n      {right && (\r\n        <div\r\n          className={`${styles.label} ${blurredOnInactive &&\r\n            styles.disabledLabel}`}\r\n          role=\"presentation\"\r\n        >\r\n          {label}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSwitchComponent.propTypes = {\r\n  label: PropTypes.string,\r\n  text: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  disabled: PropTypes.bool,\r\n  onSwitch: PropTypes.func.isRequired,\r\n  customWidth: PropTypes.string,\r\n  right: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  active: PropTypes.bool.isRequired,\r\n  isModal: PropTypes.bool,\r\n};\r\n\r\nSwitchComponent.defaultProps = {\r\n  label: '',\r\n  text: '',\r\n  disabled: false,\r\n  customWidth: '',\r\n  right: true,\r\n  name: '',\r\n  isModal: false,\r\n};\r\n\r\nexport default React.memo(SwitchComponent);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tabList\":\"Tabs_tabList__LI4lM\",\"tabListItem\":\"Tabs_tabListItem__6kYs+\",\"tabListActive\":\"Tabs_tabListActive__HaX2v\",\"tabHeader\":\"Tabs_tabHeader__htETO\",\"tabContent\":\"Tabs_tabContent__5440A\"};","// extracted by mini-css-extract-plugin\nexport default {\"promptModalBody\":\"styles_promptModalBody__PSuKN\",\"button\":\"styles_button__x0Yl0\"};"],"names":["useCallbackPrompt","when","navigate","useNavigate","location","useLocation","useState","showPrompt","setShowPrompt","lastLocation","setLastLocation","confirmedNavigation","setConfirmedNavigation","cancelNavigation","useCallback","handleBlockedNavigation","nextLocation","pathname","confirmNavigation","useEffect","blocker","navigator","React","UNSAFE_NavigationContext","unblock","block","tx","autoUnblockingTx","retry","useBlocker","TabHeaderComponent","props","activeTab","onClick","label","customClassActiveHeader","className","setClassName","handleOnClick","labelName","Styles","onKeyDown","role","defaultProps","ChannelService","addChannel","json","url","process","axios","updateChannel","ID","getChannelGroups","parameters","getChannel","exportChannels","responseType","getOrganisations","getChannels","getTimezoneLookup","exportSampleTemplate","ProfileTooltipComponent","scheduleList","map","value","style","margin","id","ProfileForms","genreFields","type","certificationFields","ageCertificationFields","gradeFields","dayList","name","switchOptions","timeOptions","start","end","ButtonComponent","text","size","defaultBtn","disabled","largeButton","styles","mediumButton","smallButton","ProfileFormComponent","preDefinedCategories","columnPosition","onFormChange","categories","setCategories","onClickRemoveCategory","categoryId","mappedCategories","filter","category","orderNumber","onClickRemoveProbability","probabilityId","filteredCategories","selectedCategory","find","o","mapped","probabilities","probability","probablity","onChangeSetCategorysName","e","parseInt","target","length","setTimeout","sort","a","b","src","trashIcon","alt","maxLength","onChange","filtered","selectedProbability","onChangeSetProbabilitysName","push","onClickAddProbability","marginLeft","marginBottom","getChannelProfiles","channelId","day","getBusinessRules","getChannelScoring","saveChannelProfile","saveBusinessRules","saveChannelScoring","getChannelProfileSession","saveChannelProfileSession","saveChannelProfileProbabilities","getChannelProfileProbabilities","getChannelLookupWithPredefinedProfile","applyProfileToSelectedDays","uploadImportedFile","file","formData","FormData","append","headers","exportCustomBusinessRules","getAssetListAttributesLookup","saveChannelProfileValues","getChannelProfileValues","profileAttributeID","getChannelList","applyProfilePreCheck","applyProfile","SelectChannelsModalComponent","show","onHide","onShow","isDirtyForm","channels","setChannels","channelsHistory","setChannelsHistory","selectedChannels","setSelectedChannels","searchIsActive","setSearchIsActive","searchKey","setSearchKey","showConfirmationModal","setShowConfirmationModal","showSuccessfullyAppliedModal","setSuccessfullyAppliedModal","showUnsavedChangesModal","setShowUnsavedChangesModal","successMessage","setSuccessMessage","isSaving","setIsSaving","onSelectSetSelectedChannels","includes","channel","onSearch","channelName","toLowerCase","onClearSearch","onApplyToOtherChannels","channelIds","AddProfileComponentService","then","response","data","onProceedApplyToOtherChannels","hideConfirmationModal","Modal","contentClassName","centered","width","marginTop","placeholder","key","textAlign","catch","error","danger","message","padding","fontSize","fontWeight","AddProfileComponent","forwardRef","ref","onClickSaveProbabilities","onClickCloseForm","getChannelProbabilities","formType","setDirtyForm","setParameters","channelsWithPredefinedProfile","setChannelsWithPredefinedProfile","showSelectChannelsModal","setShowSelectChannelsModal","saveIsDisabled","setSaveIsDisabled","selectedChannelName","setSelectedChannelName","columnOne","setColumnOne","columnTwo","setColumnTwo","columnThree","setColumnThree","modalDirtyShow","setModalDirtyShow","selectedChannel","setSelectedChannel","isDirty","setIsDirty","isClose","setIsClose","useImperativeHandle","compareArrays","JSON","stringify","onFormChangeSetParameters","isNaN","removedDuplicateData","some","openSelectChannelsModal","ChannelProfileService","isFormValid","every","p","validateForm","categoryID","deepClonedDreDefinedCategories","parse","columnOneData","columnTwoData","columnThreeData","whiteSpace","list","buttonStyle","height","onSelect","withSearch","state","paddingTop","background","displayName","ProfileViewComponent","onChangeGetProbabilityParameters","cardRef","useRef","probabilityItemRef","categoryLabelWidth","setCategoryLabelWidth","probabilityLabelWidth","setProbabilityLabelWidth","resizeWidth","current","offsetWidth","handleOnChangeProbabilityParameters","renderData","title","max","window","addEventListener","ProfileProbabilitiesBodyComponent","selectedProfile","channelID","selectedDay","changeTab","clearDirtyForm","hidePrompt","fromCancel","setModalShow","saveProbabilityValues","handleSaveValues","lastColumnRef","attributeValues","setAttributeValues","profileValues","setProfileValues","runningID","setRunningID","isAdding","setIsAdding","isMounted","setIsMounted","setProfileRenderTimes","addRow","attribute","startTime","endTime","startTimeValidation","endTimeValidation","valueValidation","deleteRow","item","changeTime","index","tempProfile","dateTimeToString","dateTime","dateSplit","toLocaleString","split","replaceAll","isNullOrEmpty","val","dateTimeToTimeString","timeSplit","valid","tempValues","i","hasError","attributeID","filterValuesStart","filterValuesEnd","toString","validateValues","formValue","weekDay","success","finally","values","attribtues","profileAttributes","startSplit","endSplit","newValues","Date","scrollIntoView","behavior","attributes","atributeArray","attributeTypeId","profileStyles","handleSelectProfile","CustomTimeInput","defaultValue","customWrapper","handleOnChangeProbability","cursor","deleteIcon","plusCircleIcon","ProfileProbabilitiesComponent","tableBodyRef","ProfileComponent","profileFilter","handleChangeDay","callbackSaveProfile","handleChangeStartTime","handleChangeEndTime","handleSwitchEndTime","onCloseForm","checkIfCanRenderModifyProfileComponent","shouldSwitchProfileDivId","timeInterval","clockType","setSelectedProfile","daySelect","selectedDayIds","setSelectedDayIds","showSelectDaysModal","setShowSelectDaysModal","showApplySelectedDayConfirmationModal","setShowApplySelectedDayConfirmationModal","divId","setDivId","addProfileFormRef","profileViewRef","profileProbabilityRef","appliedProfileValuesMessage","setAppliedProfileValuesMessage","profiles","setProfiles","hideSelectDaysModal","switchComponent","renderModifyProfileComponent","profileArray","copyIcon","ProfileStyles","backgroundColor","event","dialogClassName","checkId","dayId","remainingDayIds","handleOnSelectDay","checkIcon","Button","weekDayIds","undefined","BusinessRulesForms","scheduleFields","assetFields","assetProbabilityFields","typeFields","timeList","hoursMin","hoursMax","minutesMin","minutesMax","premierGradesMin","premierGradesMax","postPremierDaysMin","postPremierDaysMax","playWeightMin","playWeightMax","maximumPlaysPlayMin","maximumPlaysPlayMax","maximumPlaysPeriodMin","maximumPlaysPeriodMax","ImportBusinessRulesModalComponent","onImportBusinessRules","setClearFileName","clearFileName","chooseFileRef","acceptableFiles","selectedFile","setSelectedFile","errorMessage","setErrorMessage","wb","Sheets","Sheet1","XLSX","Description","Values","SheetNames","excelBuffer","bookType","Blob","saveAs","color","click","hidden","accept","files","fileExtension","pop","validate","onValidate","clearValues","startRef","endRef","setStartTime","setEndTime","shouldValidate","handleOnChange","isAfter","startTimeHour","children","hour","setHours","endTimeHour","isMaxTime","isStartAfterOrEqualEnd","shortArrowRightIcon","BusinessRulesComponent","customBusinessRules","scheduleTimings","handleScheduleChange","handleScheduleInputChange","handleScheduleTimeRangeChange","assetRepeats","handleAssetChange","handleAssetChangeInput","handleAssetRepeatSelectChange","certification","handleCertificationChange","assetProbability","handleAssetProbabilityChange","handleAssetProbabilityChangeInput","types","handleTypeChange","handleTypeInputChange","callbackSaveBusinessRules","focusInput","onChangeCustomBusinessRules","onExportBusinessRules","onClearFileSelected","invalidFields","handleOnValidatePrimetimeDaypart","executeDaypartClearValues","handleOnValidatePrimetimeJunction","switchBox","slotDurationMinutesRef","advertsMaxRef","advertsTargetRef","dailyRefreshMinRef","paddingMinRef","paddingMaxRef","paddingTargetRef","premierGradesRef","primetimePeriodWeeksRef","premierDaysRef","maximumPlaysRef","maximumPeriodRef","endProbabilityRef","underplayedWeightingRef","overplayedWeightingRef","customBusinessSearchRef","sameChannelRepeatsRef","crossChannelRepeatsRef","primeTimeIntervalRef","bodyRef","isBrowserSmall","setIsBrowserSmall","isBrowserExtraSmall","setIsBrowserExtraSmall","showImportBusinessRulesModal","setShowImportBusinessRulesModal","customBusinessRulesSearchKey","setCustomBusinessRulesSearchKey","customBusinessRulesSavedSearchKey","setCustomBusinessRulesSavedSearchKey","importedBusinessRules","setImportedBusinessRules","customBusinessSearchIsActive","setCustomBusinessSearchIsActive","inputTypeNumberInvalidInputs","getSelectionType","removedDecimal","includeDecimal","scheduleInputChange","decimalValue","Number","assetRepeatsSelectChange","assetRepeatInputChange","assetProbabilityInputChange","typeInputChange","isInvalid","fieldName","getBodyWidth","handleResize","document","removeEventListener","assetProbabilityData","assetProbabilityDisable","min","playDistributionEndProbability","onKeyUp","evt","preventDefault","underplayedWeightingWeight","overplayedWeightingWeight","assetDataDiv","assetDisable","premierGrades","primetimePeriodWeeks","postPremierAssetDays","maximumPlaysPlays","maximumPlaysPeriodSelect","obj","maximumPlaysPeriodInWeeks","sameChannelRepeatsAfterSelect","sameChannelRepeatsAfter","crossChannelRepeatsPeriodSelect","crossChannelRepeatsPeriod","primeTimeIntervalPeriodSelect","primeTimeIntervalPeriod","disabledTypeFields","typeField","disabledTargetInMinutes","scheduleField","activeSwitchMinutes","handleOnHideImportBusinessRulesModal","handleOnSearchCustomBusinessRules","filteredBusinessRules","rule","Object","inputName","focus","focusRequiredField","backdropClicked","contains","active","blurredOnInactive","onSwitch","CustomTimeRange","primetimeHour","primetimeMinutes","matureContentStartTime","matureContentEndTime","handleOnChangeTimeRange","newPrimetimeJunctionTime","interstitialsMin","interstitialsMax","interstitialsTarget","slotTime","sameChannelRepeats","crossChannelRepeats","primeTimeInterval","acrossChannelRepeats","differentProgrammesPrimetime","postPremierAssetHoldback","addFreePlays","maximumPlays","exceedMaxPlayCount","certificationDisabled","cert12PinProtected","cert15PinProtected","cert18After9pm","cert18After10pm","checkProbability","planningNotes","prioritisationFactor","playDistribution","underplayedWeighting","overplayedWeighting","advertsMax","advertsTarget","dailyRefreshMin","uploadFileIcon","downloadFileIcon","timesIcon","magnifyingGlassSmIcon","referenceUid","description","trashCanSmIcon","signature","ScoringForms","scoringFields","placeHolder","ScoringComponent","memo","scoreChecked","scores","onChangeInputScores","handleCheckBoxChangeScores","callbackSaveScoring","focusScoring","scoringData","scoringData1","slice","scoringData2","neatnessRef","primetimeRef","breakRef","youthRef","ukRef","usRef","adRef","fpRef","useMemo","neatness","strengthofprimetime","averagebreaktime","youthofasset","ukboxoffice","usboxoffice","adoptimisation","freeplayutilisation","dataDisabled","dataInputValue","dataInputRef","paddingRight","overflow","checkString","countDecimals","ImportConfirmationModalComponent","onProceed","setClockType","profileComponentRef","ChannelProfileForms","setChannelID","channelOptions","setChannelOptions","businessrules","setBusinessrules","scoring","setScoring","setFocusInput","setFocusScoring","dirtyForm","modalShow","setActiveTab","nextTab","setNextTab","nextChannel","setNextChannel","next","setNext","nextElement","setNextElement","setEndTimeCheck","abortControllerGetBusinessRules","AbortController","abortControllerGetChannels","abortControllerGetScoring","endTimeActive","setProfileFilter","profileParameters","setProfileParameters","getProbabilitiesParameters","setGetProbabilitiesParameters","getProbabilitiesParametersClone","setGetProbabilitiesParametersClone","isLoading","setIsLoading","setShouldSwitchProfileDivId","setCustomBusinessRules","showImportConfirmationModal","setShowImportConfirmationModal","savedFile","setSavedFile","isExportingCustomBusinessRules","setIsExportingCustomBusinessRules","businessRulesInvalidFields","setBusinessRulesInvalidFields","scoringInvalidFields","setScoringInvalidFields","genreData","setGenreData","certificationData","setCertificationData","ageCertificationData","setAgeCertificationData","gradesData","setGradesData","renderTimes","setRenderTimes","setFromCancel","channelProfileSessionParameters","setChannelProfileSessionParameters","isPrimetimeDayPartValid","setIsPrimetimeDayPartValid","isPrimetimeJunctionValid","setIsPrimetimeJunctionValid","setExecuteDaypartClearValues","handleChangeInputGenre","inputValue","prevState","handleChangeCertification","handleChangeInputAgeCertification","handleChangeInputGrade","onChangeFormSetChannelProfileSessionParameters","changeDay","selected","handleSelectedProfile","changeStartTime","replace","prevSate","convertSelected","convertTo12HourFormat","inputTime","checked","genre","grade","ageCertification","setSignature","setCertification","primetimeJunction","primetimeHourPlaceholder","primetimeMinutesPlaceholder","matureContent","matureContentStartTimePlaceholder","matureContentEndTimePlaceholder","slotAndDurationRounding","slotTimeSelect","slotTimePlaceholder","dailyRefresh","dailyRefreshMinSelect","dailyRefreshMinPlaceholder","paddingWithInterstitials","interstitialsMinSelect","interstitialsMinPlaceholder","interstitialsMaxSelect","interstitialsMaxPlaceholder","interstitialsTargetSelect","interstitialsTargetPlaceholder","newPrimetimeJunction","setScheduleTimings","sameChannelRepeatsAfterPlaceholder","crossChannelRepeatsPeriodPlaceholder","primeTimeIntervalPeriodPlaceholder","highGradeAsset","setAssetRepeats","setAssetProbability","fastChannel","advertsPerHour","advertsMaxSelect","advertsMaxPlaceholder","advertsTargetSelect","advertsTargetPlaceholder","setTypes","handleSignatureChange","constructPrimetime","time","minute","isPrimetime","probabilityValue","handleTypeSelectChange","prioritytitleutilisation","setScoreChecked","neatnessChecked","setNeatnessChecked","setScores","score","Math","floor","prevItems","constructGetProbabilitiesParameters","channelIdParameterString","boolean","keys","handleGetChannelProfileProbabilities","console","handleGetChannelProbabilities","onClickTabItem","validateDiryForm","signal","channelList","bRules","businessRules","jsonData","enabled","settings","Hours","Value","Minutes","Time","TimeInMinutes","SelectedTime","AdvertsMax","AdvertsTarget","DailyMin","MinInMinutes","MaxInMinutes","TargetInMinutes","SameChannelRepeatsAfter","CrossChannelPeriod","PrimeTimePeriod","Plays","PeriodInWeeks","getScoring","scoreList","neatnessScore","strengthofprimetimeScore","averagebreaktimeScore","youthofassetScore","ukboxofficeScore","usboxofficeScore","adoptimisationofficeScore","freeplayutilisationScore","prioritytitleutilisationScore","weight","changeChannel","nextChannelSelected","saveProfile","isValidCustomBusinessRules","mappedBusinessRules","getBusinessRulesInvalidInputs","getScoringInvalidInputs","businessruleList","bRule","getHours","padStart","getMinutes","primetimeEnabled","primetimeError","businessForm","saveScoring","scoreValues","scoreValue","scoreForm","saveDiryForm","constructChannelProfileSessionParameters","channelIdParam","weekDayParam","startTimeParam","handleGetChannelProfileSession","handleSaveChannelProfileSession","handleOnClickSaveProbabilities","shouldNotGetChannelProfileProbabilities","removeFirstCharIfStartsWithZero","substring","profileProbabilities","columnIndex","findIndex","handleOnHideShowImportConfirmationModal","handleOnImportBusinessRules","proceed","customBusinessRulesModel","customBusinessRulesExist","handleOnChangeCustomBusinessRules","customBusinessRulesClone","HandleOnExportCustomBusinessRules","blob","DateService","AuthService","handleCheckIfCanRenderModifyProfileComponent","handleCheckIfCanCloseManageProfile","abort","BannerComponent","componentName","addButtonText","isAddButtonHidden","isSearchHidden","TabStyles","BootstrapSpinner","ConfirmLeaveModal","onSave","onDiscard","position","channelForms","hourInputRef","minuteInputRef","isChanged","setIsChanged","setHour","setMinute","changeTimes","setChangeTimes","setIsInvalid","focusToHour","select","focusToMinute","handleOnFocus","stopPropagation","handleOnBlur","pad","char","parseFloat","join","isFirstDigitZero","isNotValid","number","isValueValid","isTwoDigit","constructTime","date","dateHour","dateMinute","dateHourValue","dateMinuteValue","moment","isValid","isOutSideOfMinMax","checkIfOutsideOfMinMax","autoComplete","incremented","decremented","onFocus","onBlur","InputComponent","showErrorMessage","isRequired","SwitchComponent","customWidth","right","isModal","isActiveSwitch","setIsActiveSwitch","executeOnSwitch"],"sourceRoot":""}
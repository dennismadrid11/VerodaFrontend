{"version":3,"file":"static/js/255.978ade40.chunk.js","mappings":"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","sources":["components/_reusable/loading/LoadingComponent.jsx","components/_reusable/uploader/ImageUploaderComponent.jsx","webpack://sky/./src/components/user/user-banner/UserBanner.module.css?587d","components/user/user-banner/UserBannerComponent.jsx","components/user/UserStorage.js","components/user/UserService.js","webpack://sky/./src/components/user/user.module.css?fd4a","components/user/UserPasswordForm.js","components/user/UserAddedComponent.jsx","components/user/organisational-user/add-user/AddUserComponent.jsx","components/user/super-user/add-user/AddUserComponent.jsx","webpack://sky/./src/components/user/organisational-user/edit-delete-user/EditDeleteUser.module.css?ab63","components/user/organisational-user/edit-delete-user/EditDeleteUserComponent.jsx","webpack://sky/./src/components/user/super-user/edit-delete-user/EditDeleteUser.module.css?5916","components/user/super-user/edit-delete-user/EditDeleteUserComponent.jsx","components/user/UserComponent.jsx","shared/elements/select/select.componentcustom.jsx"],"sourcesContent":["import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport hourglassIcon from '../../../assets/lotties/3671-hour-glass-animation';\r\n\r\nfunction LoadingComponent() {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: hourglassIcon,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n    <Lottie options={defaultOptions} height={120} width={120} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingComponent;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { danger } from '../../../shared/elements/notification/NotifyComponent';\r\n\r\nfunction ImageUploaderComponent({ imageSource, callbackChangeImage, styles }) {\r\n  const uploadNameRef = useRef(null);\r\n\r\n  const handleUploadButton = () => {\r\n    uploadNameRef.current.click();\r\n  };\r\n\r\n  const getBase64 = (file) => new Promise((resolve) => {\r\n    let baseURL = '';\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      baseURL = reader.result;\r\n      resolve(baseURL);\r\n    };\r\n  });\r\n\r\n  const onFileChangeCapture = (e) => {\r\n    let { file } = '';\r\n    // eslint-disable-next-line\r\n    file = e.target.files[0];\r\n    const fileExtension = file.name.split('.').pop();\r\n\r\n    if (\r\n      fileExtension === 'tif'\r\n      || fileExtension === 'pjp'\r\n      || fileExtension === 'xbm'\r\n      || fileExtension === 'jxl'\r\n      || fileExtension === 'svgz'\r\n      || fileExtension === 'jpg'\r\n      || fileExtension === 'jpeg'\r\n      || fileExtension === 'ico'\r\n      || fileExtension === 'tiff'\r\n      || fileExtension === 'gif'\r\n      || fileExtension === 'svg'\r\n      || fileExtension === 'jfif'\r\n      || fileExtension === 'webp'\r\n      || fileExtension === 'png'\r\n      || fileExtension === 'bmp'\r\n      || fileExtension === 'pjep'\r\n      || fileExtension === 'avif'\r\n    ) {\r\n      getBase64(file)\r\n        .then((result) => {\r\n          file.base64 = result;\r\n          callbackChangeImage(result, fileExtension, file.size);\r\n        })\r\n        .catch((err) => {\r\n          danger(err);\r\n        });\r\n    } else {\r\n      danger(\r\n        'Uploaded file type is not supported. Please use files in image format (jpg, png)',\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <i>\r\n        <img className={styles.userPhoto} src={imageSource} alt=\"\" />\r\n      </i>\r\n      <button\r\n        className={styles.uploadPhotoButton}\r\n        onClick={handleUploadButton}\r\n        type=\"button\"\r\n        aria-label=\"upload photo\"\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        style={{ display: 'none' }}\r\n        ref={uploadNameRef}\r\n        onChange={onFileChangeCapture}\r\n      />\r\n    </>\r\n  );\r\n}\r\nImageUploaderComponent.propTypes = {\r\n  imageSource: PropTypes.string,\r\n  callbackChangeImage: PropTypes.func.isRequired,\r\n  styles: PropTypes.shape.isRequired,\r\n};\r\nImageUploaderComponent.defaultProps = {\r\n  imageSource: null,\r\n};\r\nexport default ImageUploaderComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"UserBanner_header__uOEUz\",\"headerText\":\"UserBanner_headerText__TWeR5\",\"addButton\":\"UserBanner_addButton__rHwuq\",\"headerSearch\":\"UserBanner_headerSearch__5xiwJ\",\"searchIcon\":\"UserBanner_searchIcon__kDMzW\",\"searchInputSearchIcon\":\"UserBanner_searchInputSearchIcon__Xz74H\",\"searchInputCloseIcon\":\"UserBanner_searchInputCloseIcon__HMMG-\",\"headerLabelDiv\":\"UserBanner_headerLabelDiv__i8piJ\",\"headerLabel\":\"UserBanner_headerLabel__Eai3K\"};","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Styles from './UserBanner.module.css';\r\nimport searchIcon from '../../../assets/icons/Header-Search.png';\r\nimport closeIcon from '../../../assets/icons/Close.png';\r\n\r\nfunction BannerComponent({\r\n  isAddButtonHidden,\r\n  searchUser,\r\n  isTableBodyLoading,\r\n  componentName,\r\n  headerText,\r\n  callbackAddButtonFunction,\r\n  addButtonText,\r\n}) {\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const [clearSearchIsActive, setClearSearchIsActive] = useState();\r\n  const [saveSearchKey, setSaveSearchKey] = useState('');\r\n  const searchRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const backdropClicked = (e) => {\r\n      if (\r\n        saveSearchKey\r\n        && searchRef.current\r\n        && !searchRef.current.contains(e.target)\r\n      ) {\r\n        setSearchKey(saveSearchKey);\r\n        setClearSearchIsActive(true);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  }, [searchRef, saveSearchKey]);\r\n\r\n  const onChangeSearchKey = (e) => {\r\n    setSearchKey(e.target.value);\r\n    setClearSearchIsActive(false);\r\n  };\r\n\r\n  const searchUserBanner = () => {\r\n    setSaveSearchKey(searchKey);\r\n    searchUser(searchKey);\r\n    setClearSearchIsActive(true);\r\n  };\r\n\r\n  const triggerSearchUser = (e) => {\r\n    if (e.key === 'Enter') searchUserBanner();\r\n  };\r\n\r\n  const clearSearchUser = () => {\r\n    setSearchKey('');\r\n    setSaveSearchKey('');\r\n    searchUser(undefined);\r\n    setClearSearchIsActive(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${Styles.header}`}\r\n      style={{ pointerEvents: isTableBodyLoading && 'none' }}\r\n    >\r\n      <div>\r\n        <div className={Styles.headerText}>{componentName}</div>\r\n      </div>\r\n      <div className={Styles.headerLabelDiv}>\r\n        <div className={`${Styles.headerLabel}`} title={headerText}>\r\n          {headerText}\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex\" style={{ width: '100%' }}>\r\n        <div\r\n          ref={searchRef}\r\n          className=\"d-flex\"\r\n          style={{ paddingRight: '20px', width: '100%' }}\r\n        >\r\n          <div style={{ width: '100%' }}>\r\n            <input\r\n              type=\"text\"\r\n              style={{ textIndent: '5px', width: '100%' }}\r\n              className={Styles.headerSearch}\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              aria-describedby=\"search-addon\"\r\n              value={searchKey}\r\n              onChange={onChangeSearchKey}\r\n              onKeyDown={triggerSearchUser}\r\n              // disabled={clearSearchIsActive}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              backgroundColor: '#ffffff',\r\n              borderTop: '1px solid #ced4da',\r\n              borderBottom: '1px solid #ced4da',\r\n              paddingTop: '5px',\r\n              height: '38px',\r\n            }}\r\n          >\r\n            {clearSearchIsActive && (\r\n              <img\r\n                className={Styles.searchInputCloseIcon}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  paddingLeft: '7px',\r\n                  paddingRight: '15px',\r\n                }}\r\n                src={closeIcon}\r\n                alt=\"CloseIcon\"\r\n                onClick={clearSearchUser}\r\n                onKeyDown={clearSearchUser}\r\n                role=\"presentation\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={`${Styles.searchIcon}`}>\r\n            <img\r\n              className={Styles.searchInputSearchIcon}\r\n              style={{\r\n                cursor: 'pointer',\r\n                pointerEvents: searchKey.length === 0 ? 'none' : null,\r\n              }}\r\n              src={searchIcon}\r\n              alt=\"SearchIcon\"\r\n              onClick={searchUserBanner}\r\n              onKeyDown={searchUserBanner}\r\n              role=\"presentation\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {!isAddButtonHidden && (\r\n          <button\r\n            className={`${Styles.addButton}`}\r\n            onClick={callbackAddButtonFunction}\r\n            type=\"button\"\r\n          >\r\n            {addButtonText}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nBannerComponent.propTypes = {\r\n  isAddButtonHidden: PropTypes.bool,\r\n  searchUser: PropTypes.func.isRequired,\r\n  isTableBodyLoading: PropTypes.bool,\r\n  componentName: PropTypes.string,\r\n  headerText: PropTypes.string,\r\n  callbackAddButtonFunction: PropTypes.func.isRequired,\r\n  addButtonText: PropTypes.string,\r\n};\r\nBannerComponent.defaultProps = {\r\n  isAddButtonHidden: true,\r\n  isTableBodyLoading: true,\r\n  componentName: '',\r\n  headerText: '',\r\n  addButtonText: '',\r\n};\r\nexport default BannerComponent;\r\n","const UserStorage = {\r\n  tableHeaders: [\r\n    {\r\n      headerId: 1,\r\n      headerName: 'Firstname',\r\n      filter: {\r\n        type: 1,\r\n        queryNames: ['firstNameFilter', 'firstNameFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 2,\r\n      headerName: 'Lastname',\r\n      filter: {\r\n        type: 1,\r\n        queryNames: ['lastNameFilter', 'lastNameFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 3,\r\n      headerName: 'Email',\r\n      filter: {\r\n        type: 1,\r\n        queryNames: ['emailFilter', 'emailFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 4,\r\n      headerName: 'Role',\r\n      filter: {\r\n        type: 2,\r\n        queryNames: ['roleFilter'],\r\n        list: [\r\n          { id: 1, name: 'Super Admin' },\r\n          { id: 2, name: 'Organisation Admin' },\r\n          { id: 3, name: 'Organisation User' },\r\n        ],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 7,\r\n      headerName: 'Organisation',\r\n      filter: {\r\n        type: 1,\r\n        queryNames: ['organisationFilter', 'organisationFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 5,\r\n      headerName: 'Date Created',\r\n      filter: {\r\n        type: 3,\r\n        queryNames: [\r\n          'dateCreatedFilter',\r\n          'dateCreatedFilterStartRange',\r\n          'dateCreatedFilterEndRange',\r\n        ],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 6,\r\n      headerName: 'Last Seen',\r\n      filter: {\r\n        type: 3,\r\n        queryNames: [\r\n          'lastSeenFilter',\r\n          'lastSeenFilterStartRange',\r\n          'lastSeenFilterEndRange',\r\n        ],\r\n      },\r\n      sortable: true,\r\n    },\r\n  ],\r\n\r\n  formFields: [\r\n    {\r\n      name: 'First Name',\r\n      parameterName: 'firstName',\r\n      type: 'text',\r\n      placeHolder: \"Enter the user's first name\",\r\n      isRequired: true,\r\n      maxLength: 99,\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      parameterName: 'lastName',\r\n      type: 'text',\r\n      placeHolder: \"Enter the user's last name\",\r\n      isRequired: true,\r\n      maxLength: 99,\r\n    },\r\n    {\r\n      name: 'Email',\r\n      parameterName: 'email',\r\n      type: 'text',\r\n      placeHolder: \"Enter the user's email\",\r\n      isRequired: true,\r\n      maxLength: 99,\r\n    },\r\n    {\r\n      name: 'Job Title',\r\n      parameterName: 'jobTitle',\r\n      type: 'text',\r\n      placeHolder: \"Enter the user's job title\",\r\n      isRequired: false,\r\n      maxLength: 99,\r\n    },\r\n  ],\r\n\r\n  roles: [\r\n    { id: 1, value: 'Super Admin' },\r\n    { id: 2, value: 'Organisation Admin' },\r\n    { id: 3, value: 'Organisation User' },\r\n  ],\r\n\r\n  validateEmail(email) {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n      );\r\n  },\r\n};\r\n\r\n// const userStorage = new UserStorage();\r\nexport default UserStorage;\r\n","import axios from 'axios';\r\n\r\nconst UserService = {\r\n  addUser(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  resendInvitation(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/ResendInvitation`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  updateUser(userId, json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/${userId}`;\r\n    return axios.put(url, json);\r\n  },\r\n\r\n  deleteuser(userId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/${userId}`;\r\n    return axios.delete(url);\r\n  },\r\n\r\n  getUsers(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user${parameters}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getAllUsers(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/GetAllUsers/${parameters}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getUser(userId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/${userId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  exportUsers(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/export${parameters}`;\r\n    return axios.get(url, { responseType: 'arraybuffer' });\r\n  },\r\n\r\n  exporAlltUsers(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/exportallusers${parameters}`;\r\n    return axios.get(url, { responseType: 'arraybuffer' });\r\n  },\r\n\r\n  getOrganisation(ID) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/${ID}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getOrganisations() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Organisation/GetAllOrganisations`;\r\n    return axios.get(url);\r\n  },\r\n};\r\n\r\n// const userService = new UserService();\r\nexport default UserService;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"user_box__fZOoi\",\"closeIcon\":\"user_closeIcon__eHqns\",\"headerText\":\"user_headerText__xwhNe\",\"userPhoto\":\"user_userPhoto__+4EmC\",\"uploadPhotoButton\":\"user_uploadPhotoButton__FDvNF\",\"formLabel\":\"user_formLabel__BnbXS\",\"formInput\":\"user_formInput__AyhZg\",\"roleButton\":\"user_roleButton__kjpEW\",\"roleSelectionItem\":\"user_roleSelectionItem__98Yia\",\"saveIcon\":\"user_saveIcon__+AYI-\",\"trashcanIcon\":\"user_trashcanIcon__qzW9r\",\"closeCircleIcon\":\"user_closeCircleIcon__ISZfc\",\"eyeIcon\":\"user_eyeIcon__xiu+u\",\"passworthStrengthBarDiv\":\"user_passworthStrengthBarDiv__QQ95w\",\"hasError\":\"user_hasError__LoHS6\",\"required\":\"user_required__X5XOn\",\"loadingHeight\":\"user_loadingHeight__024Yv\",\"formWrapper\":\"user_formWrapper__Qr3xU\",\"userAddedComponent\":\"user_userAddedComponent__1dM13\",\"userAddedProfile\":\"user_userAddedProfile__E3LDV\",\"userDetails\":\"user_userDetails__SYlK9\",\"name\":\"user_name__x2Dzv\",\"email\":\"user_email__Z22oX\",\"successMessage\":\"user_successMessage__u4AvC\",\"createdMessage\":\"user_createdMessage__b60ug\",\"invitationMessage\":\"user_invitationMessage__1j9-Z\",\"link\":\"user_link__qA9+j\",\"userAddedComponentDetails\":\"user_userAddedComponentDetails__Ug6-K\",\"userAddedFooter\":\"user_userAddedFooter__s9QCd\",\"divLoadingPanel\":\"user_divLoadingPanel__w2KJS\"};","const UserPasswordForm = {\r\n  onChangePassword(password) {\r\n    let passwordStrengthMeter = '';\r\n    let passwordStrengthText = '';\r\n    if (password.length === 0) {\r\n      passwordStrengthText = 'too short';\r\n    }\r\n    if (password.length >= 8) {\r\n      passwordStrengthMeter = 1;\r\n      passwordStrengthText = 'weak';\r\n    }\r\n    if (password.length >= 8 && /\\d/.test(password)) {\r\n      passwordStrengthMeter = 2;\r\n      passwordStrengthText = 'okay';\r\n    }\r\n    if (password.length >= 8 && /\\d/.test(password) && /[A-Z]/.test(password)) {\r\n      passwordStrengthMeter = 3;\r\n      passwordStrengthText = 'good';\r\n    }\r\n    // prettier-ignore\r\n    if (\r\n      password.length >= 8\r\n      && /\\d/.test(password)\r\n      && /[A-Z]/.test(password)\r\n      && password.match(/[ `!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>?~]/)\r\n    ) {\r\n      passwordStrengthMeter = 4;\r\n      passwordStrengthText = 'strong';\r\n    }\r\n    return {\r\n      passwordStrengthMeter,\r\n      passwordStrengthText,\r\n    };\r\n  },\r\n\r\n  checkString(text) {\r\n    return text !== '' && text !== null && text !== undefined;\r\n  },\r\n};\r\n\r\nexport default UserPasswordForm;\r\n","import styles from './user.module.css'\r\nimport { defaultAvatar, closeCircleIcon } from '../../assets';\r\n\r\nconst UserAddedComponent = ({ userInfo, onHide, profilePhoto }) => {\r\n    return (\r\n        <div className={styles.userAddedComponent}>\r\n            <div className={styles.userAddedComponentDetails}>\r\n                <div className={styles.imageDiv}>\r\n                    <img className={styles.userAddedProfile} src={profilePhoto || defaultAvatar} alt=\"\" />\r\n                </div>\r\n\r\n                <div className={styles.userDetails}>\r\n                    <div className={styles.name}>{userInfo.fullName}</div>\r\n                    <div className={styles.email}>{userInfo.email}</div>\r\n                </div>\r\n\r\n                <div className={styles.successMessage}>\r\n                    <p className={styles.createdMessage}>User created successfully</p>\r\n                    <p className={styles.invitationMessage}>An invitation email containing the following link with 24 hours validity has also been sent:</p>\r\n                    <p className={styles.link}>{userInfo.requestLink}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.userAddedFooter}>\r\n                <img src={closeCircleIcon} alt=\"\" onClick={onHide} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UserAddedComponent;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './password-strength-meter.css';\r\n\r\nimport UserStyles from '../../user.module.css';\r\nimport closeIcon from '../../../../assets/icons/Close.svg';\r\nimport saveIcon from '../../../../assets/icons/Save.svg';\r\nimport closeCircleIcon from '../../../../assets/icons/Close-Circle.svg';\r\nimport defaultAvatar from '../../../../assets/icons/DefaultAvatar.png';\r\n\r\nimport ImageUploaderComponent from '../../../_reusable/uploader/ImageUploaderComponent';\r\nimport UserService from '../../UserService';\r\nimport UserStorage from '../../UserStorage';\r\nimport UserPasswordForm from '../../UserPasswordForm';\r\n\r\nimport AuthService from '../../../../core/auth.service';\r\nimport { danger } from '../../../../shared/elements/notification/NotifyComponent';\r\nimport SelectComponentCustom from '../../../../shared/elements/select/select.componentcustom';\r\nimport UserAddedComponent from '../../UserAddedComponent';\r\nimport LoadingComponent from '../../../_reusable/loading/LoadingComponent';\r\n\r\nfunction AddUserComponent({ callbackClosePanel, callbackGetUsers, users }) {\r\n  const { formFields } = UserStorage;\r\n  const { roles } = UserStorage;\r\n  delete roles[0];\r\n  const { checkString } = UserPasswordForm;\r\n  const userIdentity = AuthService.getUserIdentity();\r\n  const creatorName = `${userIdentity.firstName} ${userIdentity.lastName}`;\r\n\r\n  const [selectedRole, setSelectedRole] = useState('Organisation User');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [userParameters, setUserParameters] = useState({\r\n    organisationId: userIdentity.organisationId,\r\n    roleId: 3,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    jobTitle: '',\r\n    base64ProfileImage: '',\r\n    fileExtension: '',\r\n  });\r\n  const [userImage, setUserImage] = useState(defaultAvatar);\r\n  const [imageFileSize, setImageFileSize] = useState(0);\r\n  const [userValidation, setUserValidation] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    email: false,\r\n    jobTitle: false,\r\n    image: false,\r\n  });\r\n  const [firstNameErrorText, setFirstNameErrorText] = useState('');\r\n  const [lastNameErrorText, setLastNameErrorText] = useState('');\r\n  const [emailErrorText, setEmailErrorText] = useState('');\r\n  const [jobTitleErrorText, setJobTitleErrorText] = useState('');\r\n  const [isUserAdded, setIsUserAdded] = useState(false);\r\n  const [addUserResult, setAddUserResult] = useState({});\r\n\r\n  const onChangeuserParameters = (e) => {\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const selectRole = (selected) => {\r\n    setSelectedRole(selected.value);\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      roleId: selected.id,\r\n    }));\r\n  };\r\n\r\n  const fieldValue = (parameterName) => {\r\n    if (parameterName === 'firstName') return userParameters.firstName;\r\n    if (parameterName === 'lastName') return userParameters.lastName;\r\n    if (parameterName === 'email') return userParameters.email;\r\n    if (parameterName === 'jobTitle') return userParameters.jobTitle;\r\n    return '';\r\n  };\r\n\r\n  const handleCheck = (value) => {\r\n    let isTrue = users.some((user) => user.email === value);\r\n    return isTrue;\r\n  };\r\n\r\n  const validateUserDetails = () => {\r\n    let valid = true;\r\n    setUserValidation({\r\n      firstName: false,\r\n      lastName: false,\r\n      email: false,\r\n      image: false,\r\n    });\r\n\r\n    if (!checkString(userParameters.firstName)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        firstName: true,\r\n      }));\r\n      setFirstNameErrorText('First Name is required');\r\n    } else if (userParameters.firstName.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        firstName: true,\r\n      }));\r\n      setFirstNameErrorText('100 Max Character exceeded');\r\n    }\r\n    if (!checkString(userParameters.lastName)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        lastName: true,\r\n      }));\r\n      setLastNameErrorText('Last Name is required');\r\n    } else if (userParameters.lastName.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        lastName: true,\r\n      }));\r\n      setLastNameErrorText('100 Max Character exceeded');\r\n    }\r\n\r\n    if (!checkString(userParameters.email)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n      setEmailErrorText('Email is required');\r\n    } else if (handleCheck(userParameters.email)) {\r\n      valid = false;\r\n      setEmailErrorText(\r\n        `Email address ${userParameters.email} is already used`\r\n      );\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n    } else if (!UserStorage.validateEmail(userParameters.email)) {\r\n      valid = false;\r\n      setEmailErrorText('Email address is invalid');\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n    }\r\n    if (imageFileSize > 2) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        image: true,\r\n      }));\r\n    }\r\n\r\n    if (userParameters.jobTitle.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        jobTitle: true,\r\n      }));\r\n      setJobTitleErrorText('100 Max Character exceeded');\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setErrorMessage('');\r\n    if (!isSubmitting) {\r\n      setIsSubmitting(true);\r\n      if (validateUserDetails()) {\r\n        UserService.addUser({ ...userParameters, creatorName })\r\n          .then((response) => {\r\n            callbackGetUsers();\r\n            setIsUserAdded(true);\r\n            setAddUserResult(response.data);\r\n          })\r\n          .finally(() => {\r\n            setIsSubmitting(false);\r\n          });\r\n      } else {\r\n        danger('Please check required fields');\r\n        setIsSubmitting(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeImage = (file, fileExtension, size) => {\r\n    const extension = fileExtension === 'svg' ? 'svg+xml' : fileExtension;\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      base64ProfileImage: `data:image/${extension};base64,${\r\n        file.split(',')[1]\r\n      }`,\r\n      fileExtension: fileExtension,\r\n    }));\r\n    setUserImage(file);\r\n    setImageFileSize(size / (1024 * 1024).toFixed(2));\r\n  };\r\n\r\n  const fieldHasError = (parameterName) => {\r\n    if (parameterName === 'firstName') return userValidation.firstName;\r\n    if (parameterName === 'lastName') return userValidation.lastName;\r\n    if (parameterName === 'email') return userValidation.email;\r\n    if (parameterName === 'jobTitle') return userValidation.jobTitle;\r\n    return false;\r\n  };\r\n\r\n  const errorText = (parameterName) => {\r\n    if (parameterName === 'firstName') return firstNameErrorText;\r\n    if (parameterName === 'lastName') return lastNameErrorText;\r\n    if (parameterName === 'email') return emailErrorText;\r\n    if (parameterName === 'jobTitle') return jobTitleErrorText;\r\n    return '';\r\n  };\r\n\r\n  const buildField = (field) => (\r\n    <div>\r\n      <input\r\n        className={UserStyles.formInput}\r\n        name={field.parameterName && field.parameterName}\r\n        type={field.type}\r\n        placeholder={field.placeHolder}\r\n        onChange={onChangeuserParameters}\r\n        value={fieldValue(field.parameterName)}\r\n        maxLength={field.maxLength}\r\n      />\r\n      {fieldHasError(field.parameterName) && (\r\n        <span className={UserStyles.hasError}>\r\n          {errorText(field.parameterName)}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={UserStyles.box}>\r\n      {isSubmitting ? (\r\n        <>\r\n          <div className={UserStyles.divLoadingPanel}>\r\n            <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n              <div>\r\n                <LoadingComponent />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"position-relative\">\r\n            <i>\r\n              <img\r\n                className={UserStyles.closeIcon}\r\n                src={closeIcon}\r\n                alt=\"\"\r\n                onClick={() => callbackClosePanel()}\r\n                onKeyDown={() => callbackClosePanel()}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n          </div>\r\n\r\n          {!isUserAdded ? (\r\n            <>\r\n              <div className={UserStyles.formWrapper}>\r\n                <div className=\"d-flex position-relative\">\r\n                  <p className={UserStyles.headerText}>New User</p>\r\n                  <ImageUploaderComponent\r\n                    imageSource={userImage}\r\n                    callbackChangeImage={onChangeImage}\r\n                    styles={UserStyles}\r\n                  />\r\n                </div>\r\n                {userValidation.image && (\r\n                  <span className={UserStyles.hasError}>\r\n                    {' '}\r\n                    Image file size exceeds 2MB{' '}\r\n                  </span>\r\n                )}\r\n\r\n                <form>\r\n                  {formFields.map((field) => (\r\n                    <div key={field.id}>\r\n                      <div className={UserStyles.formLabel}>\r\n                        {field.name}{' '}\r\n                        {field.isRequired ? (\r\n                          <span className={UserStyles.required}>*</span>\r\n                        ) : (\r\n                          undefined\r\n                        )}\r\n                      </div>\r\n                      {buildField(field)}\r\n                    </div>\r\n                  ))}\r\n                </form>\r\n\r\n                <div>\r\n                  <div className={UserStyles.formLabel}>Role</div>\r\n                  <SelectComponentCustom\r\n                    text={selectedRole}\r\n                    list={roles}\r\n                    onSelect={selectRole}\r\n                    width=\"100%\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className=\"position-absolute start-0 bottom-0 text-center\"\r\n                style={{\r\n                  width: '100%',\r\n                  marginBottom: '20px',\r\n                }}\r\n              >\r\n                <i\r\n                  className={UserStyles.saveIcon}\r\n                  style={{ pointerEvent: isSubmitting && 'none' }}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Save\"\r\n                >\r\n                  <img\r\n                    src={saveIcon}\r\n                    alt=\"\"\r\n                    onClick={handleSubmit}\r\n                    onKeyDown={handleSubmit}\r\n                    role=\"presentation\"\r\n                  />\r\n                </i>\r\n                <i\r\n                  className={UserStyles.closeCircleIcon}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Cancel\"\r\n                >\r\n                  <img\r\n                    src={closeCircleIcon}\r\n                    alt=\"\"\r\n                    onClick={() => callbackClosePanel()}\r\n                    onKeyDown={() => callbackClosePanel()}\r\n                    role=\"presentation\"\r\n                  />\r\n                </i>\r\n                {errorMessage !== '' && errorMessage}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <UserAddedComponent\r\n              userInfo={addUserResult}\r\n              onHide={callbackClosePanel}\r\n              profilePhoto={userImage}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nAddUserComponent.propTypes = {\r\n  callbackClosePanel: PropTypes.func.isRequired,\r\n  callbackGetUsers: PropTypes.func.isRequired,\r\n  users: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n};\r\nexport default AddUserComponent;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\nimport './password-strength-meter.css';\r\n\r\nimport UserStyles from '../../user.module.css';\r\nimport closeIcon from '../../../../assets/icons/Close.svg';\r\nimport saveIcon from '../../../../assets/icons/Save.svg';\r\nimport closeCircleIcon from '../../../../assets/icons/Close-Circle.svg';\r\nimport defaultAvatar from '../../../../assets/icons/DefaultAvatar.png';\r\nimport eyeIcon from '../../../../assets/icons/Eye.png';\r\nimport eyeOnIcon from '../../../../assets/icons/Eye-On.png';\r\n\r\nimport ImageUploaderComponent from '../../../_reusable/uploader/ImageUploaderComponent';\r\nimport UserService from '../../UserService';\r\nimport UserStorage from '../../UserStorage';\r\nimport UserPasswordForm from '../../UserPasswordForm';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../../../shared/elements/notification/NotifyComponent';\r\nimport SelectComponentCustom from '../../../../shared/elements/select/select.componentcustom';\r\nimport SelectComponent from '../../../../shared/elements/select/select.component';\r\nimport UserAddedComponent from '../../UserAddedComponent';\r\nimport AuthService from '../../../../core/auth.service';\r\nimport LoadingComponent from '../../../_reusable/loading/LoadingComponent';\r\n\r\nfunction AddUserComponent({\r\n  callbackClosePanel,\r\n  callbackGetUsers,\r\n  users,\r\n  organisations,\r\n}) {\r\n  const { formFields } = UserStorage;\r\n  const { roles } = UserStorage;\r\n  const { checkString } = UserPasswordForm;\r\n\r\n  const [selectedRole, setSelectedRole] = useState('Organisation User');\r\n  const [selectedOrganisation, setSelectedOrganisation] = useState(\r\n    'Select Organisation'\r\n  );\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [disabledOrganisation, setDisabledOrganisation] = useState(false);\r\n  const userIdentity = AuthService.getUserIdentity();\r\n  const creatorName = `${userIdentity.firstName} ${userIdentity.lastName}`;\r\n\r\n  const [userParameters, setUserParameters] = useState({\r\n    roleId: 3,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    jobTitle: '',\r\n    base64ProfileImage: '',\r\n    organisationID: null,\r\n    fileExtension: '',\r\n  });\r\n  const [userImage, setUserImage] = useState(defaultAvatar);\r\n  const [imageFileSize, setImageFileSize] = useState(0);\r\n  const [userValidation, setUserValidation] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    email: false,\r\n    password: false,\r\n    confirmpassword: false,\r\n    image: false,\r\n    organisation: false,\r\n  });\r\n  const [emailErrorText, setEmailErrorText] = useState('');\r\n  const [passwordErrorText, setPasswordErrorText] = useState('');\r\n  const [confirmpasswordErrorText, setConfirmPasswordErrorText] = useState('');\r\n  const [organisationErrorText, setOrganisationErrorText] = useState('');\r\n\r\n  const [firstNameErrorText, setFirstNameErrorText] = useState('');\r\n  const [lastNameErrorText, setLastNameErrorText] = useState('');\r\n  const [isUserAdded, setIsUserAdded] = useState(false);\r\n  const [addUserResult, setAddUserResult] = useState({});\r\n\r\n  const onChangeuserParameters = (e) => {\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const selectRole = (selected) => {\r\n    const { id } = selected;\r\n    const name = selected.value;\r\n    setSelectedRole(name);\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      roleId: id,\r\n    }));\r\n\r\n    if (id === 1) {\r\n      setDisabledOrganisation(true);\r\n      setSelectedOrganisation('Select Organisation');\r\n      setUserParameters((prevState) => ({\r\n        ...prevState,\r\n        organisationID: null,\r\n      }));\r\n    } else {\r\n      setDisabledOrganisation(false);\r\n    }\r\n  };\r\n\r\n  const selectOrganisation = (selected) => {\r\n    setSelectedOrganisation(selected.name);\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      organisationID: selected.id,\r\n    }));\r\n  };\r\n\r\n  const handleCheck = (value) => users.some((user) => user.email === value);\r\n\r\n  const validateUserDetails = () => {\r\n    let valid = true;\r\n    setUserValidation({\r\n      firstName: false,\r\n      lastName: false,\r\n      email: false,\r\n      image: false,\r\n      organisation: false,\r\n    });\r\n    setOrganisationErrorText('');\r\n    if (!checkString(userParameters.firstName)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        firstName: true,\r\n      }));\r\n      setFirstNameErrorText('First Name is required');\r\n    } else if (userParameters.firstName.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        firstName: true,\r\n      }));\r\n      setFirstNameErrorText('100 Max Character exceeded');\r\n    }\r\n    if (!checkString(userParameters.lastName)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        lastName: true,\r\n      }));\r\n      setLastNameErrorText('Last Name is required');\r\n    } else if (userParameters.lastName.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        lastName: true,\r\n      }));\r\n      setLastNameErrorText('100 Max Character exceeded');\r\n    }\r\n    if (!checkString(userParameters.email)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n      setEmailErrorText('Email is required');\r\n    } else if (handleCheck(userParameters.email)) {\r\n      valid = false;\r\n      setEmailErrorText(\r\n        `Email address ${userParameters.email} is already used`\r\n      );\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n    } else if (!UserStorage.validateEmail(userParameters.email)) {\r\n      valid = false;\r\n      setEmailErrorText('Email address is invalid');\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n    }\r\n    if (imageFileSize > 2) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        image: true,\r\n      }));\r\n    }\r\n\r\n    if (userParameters.roleId !== 1) {\r\n      if (\r\n        userParameters.organisationID === 0 ||\r\n        userParameters.organisationID === null\r\n      ) {\r\n        valid = false;\r\n        setOrganisationErrorText('Organisation is required');\r\n        setUserValidation((prevState) => ({\r\n          ...prevState,\r\n          organisation: true,\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (userParameters.jobTitle.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        jobTitle: true,\r\n      }));\r\n    }\r\n\r\n    return valid;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setErrorMessage('');\r\n    if (!isSubmitting) {\r\n      if (validateUserDetails()) {\r\n        setIsSubmitting(true);\r\n        UserService.addUser({ ...userParameters, creatorName })\r\n          .then((response) => {\r\n            callbackGetUsers();\r\n            setIsUserAdded(true);\r\n            setAddUserResult(response.data);\r\n          })\r\n          .catch((error) => {})\r\n          .finally(() => {\r\n            setIsSubmitting(false);\r\n          });\r\n      } else {\r\n        setIsSubmitting(false);\r\n        danger('Please check required fields');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeImage = (file, fileExtension, size) => {\r\n    const extension = fileExtension === 'svg' ? 'svg+xml' : fileExtension;\r\n\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      base64ProfileImage: `data:image/${extension};base64,${\r\n        file.split(',')[1]\r\n      }`,\r\n      fileExtension: fileExtension,\r\n    }));\r\n    setUserImage(file);\r\n    setImageFileSize(size / (1024 * 1024).toFixed(2));\r\n  };\r\n\r\n  const hasValidationError = (field) => {\r\n    if (field.parameterName === 'firstName') return userValidation.firstName;\r\n    if (field.parameterName === 'lastName') return userValidation.lastName;\r\n    if (field.parameterName === 'email') return userValidation.email;\r\n    return false;\r\n  };\r\n\r\n  const spanErrorText = (field) => {\r\n    if (field.parameterName === 'firstName') return firstNameErrorText;\r\n    if (field.parameterName === 'lastName') return lastNameErrorText;\r\n    if (field.parameterName === 'email') return emailErrorText;\r\n    return '';\r\n  };\r\n\r\n  const fieldValue = (parameterName) => {\r\n    if (parameterName === 'firstName') return userParameters.firstName;\r\n    if (parameterName === 'lastName') return userParameters.lastName;\r\n    if (parameterName === 'email') return userParameters.email;\r\n    if (parameterName === 'jobTitle') return userParameters.jobTitle;\r\n    return '';\r\n  };\r\n\r\n  const renderInputs = (field) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          className={UserStyles.formInput}\r\n          name={field.parameterName && field.parameterName}\r\n          type={field.type}\r\n          placeholder={field.placeHolder}\r\n          onChange={onChangeuserParameters}\r\n          value={fieldValue(field.parameterName)}\r\n          maxLength={field.maxLength}\r\n        />\r\n        {hasValidationError(field) && (\r\n          <span className={UserStyles.hasError}>{spanErrorText(field)}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={UserStyles.box}>\r\n      {isSubmitting ? (\r\n        <>\r\n          <div className={UserStyles.divLoadingPanel}>\r\n            <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n              <div>\r\n                <LoadingComponent />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"position-relative\">\r\n            <i>\r\n              <img\r\n                className={UserStyles.closeIcon}\r\n                src={closeIcon}\r\n                alt=\"\"\r\n                onClick={() => callbackClosePanel()}\r\n                onKeyDown={() => callbackClosePanel()}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n          </div>\r\n\r\n          {!isUserAdded ? (\r\n            <>\r\n              <div className={UserStyles.formWrapper}>\r\n                <div className=\"d-flex position-relative\">\r\n                  <p className={UserStyles.headerText}>New User</p>\r\n                  <ImageUploaderComponent\r\n                    imageSource={userImage}\r\n                    callbackChangeImage={onChangeImage}\r\n                    styles={UserStyles}\r\n                  />\r\n                </div>\r\n                {userValidation.image && (\r\n                  <span className={UserStyles.hasError}>\r\n                    {' '}\r\n                    Image file size exceeds 2MB{' '}\r\n                  </span>\r\n                )}\r\n                <form>\r\n                  {formFields.map((field) => (\r\n                    <div key={field.id}>\r\n                      <div className={UserStyles.formLabel}>\r\n                        {field.name}{' '}\r\n                        {field.isRequired ? (\r\n                          <span className={UserStyles.required}>*</span>\r\n                        ) : (\r\n                          undefined\r\n                        )}\r\n                      </div>\r\n                      {renderInputs(field)}\r\n                    </div>\r\n                  ))}\r\n                </form>\r\n\r\n                <div>\r\n                  <SelectComponentCustom\r\n                    label=\"Role\"\r\n                    text={selectedRole}\r\n                    list={roles}\r\n                    onSelect={selectRole}\r\n                    width=\"100%\"\r\n                  />\r\n                </div>\r\n\r\n                <div style={{ height: 'auto' }}>\r\n                  <SelectComponent\r\n                    label=\"Organisation\"\r\n                    text={selectedOrganisation}\r\n                    list={organisations}\r\n                    onSelect={selectOrganisation}\r\n                    width=\"100%\"\r\n                    disabled={disabledOrganisation}\r\n                    withSearch\r\n                  />\r\n\r\n                  {userValidation.organisation && (\r\n                    <span className={UserStyles.hasError}>\r\n                      {organisationErrorText}{' '}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className=\"position-absolute start-0 bottom-0 text-center\"\r\n                style={{\r\n                  width: '100%',\r\n                  marginBottom: '20px',\r\n                }}\r\n              >\r\n                <i\r\n                  className={UserStyles.saveIcon}\r\n                  style={{ pointerEvent: isSubmitting && 'none' }}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Save\"\r\n                >\r\n                  <img\r\n                    src={saveIcon}\r\n                    alt=\"\"\r\n                    onClick={handleSubmit}\r\n                    onKeyDown={handleSubmit}\r\n                    role=\"presentation\"\r\n                  />\r\n                </i>\r\n                <i\r\n                  className={UserStyles.closeCircleIcon}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Cancel\"\r\n                >\r\n                  <img\r\n                    src={closeCircleIcon}\r\n                    alt=\"\"\r\n                    onClick={() => callbackClosePanel()}\r\n                    onKeyDown={() => callbackClosePanel()}\r\n                    role=\"presentation\"\r\n                  />\r\n                </i>\r\n                {errorMessage !== '' && errorMessage}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <UserAddedComponent\r\n              userInfo={addUserResult}\r\n              onHide={callbackClosePanel}\r\n              profilePhoto={userImage}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nAddUserComponent.propTypes = {\r\n  callbackClosePanel: PropTypes.func.isRequired,\r\n  callbackGetUsers: PropTypes.func.isRequired,\r\n  users: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  organisations: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n};\r\nexport default AddUserComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"EditDeleteUser_userPhoto__q0Ldw\",\"uploadPhotoButton\":\"EditDeleteUser_uploadPhotoButton__WeZZI\",\"userInfo\":\"EditDeleteUser_userInfo__RrS+h\",\"deleteButton\":\"EditDeleteUser_deleteButton__abq57\",\"cancelButton\":\"EditDeleteUser_cancelButton__uD9Dj\",\"divLoadingPanel\":\"EditDeleteUser_divLoadingPanel__o4h53\",\"invitationDescription\":\"EditDeleteUser_invitationDescription__lhVUM\",\"invitationLink\":\"EditDeleteUser_invitationLink__j0FXR\"};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal } from 'react-bootstrap';\r\nimport LoadingComponent from '../../../_reusable/loading/LoadingComponent';\r\n\r\nimport DateService from '../../../../core/date.service';\r\nimport Styles from './EditDeleteUser.module.css';\r\nimport UserStyles from '../../user.module.css';\r\nimport closeCircleIcon from '../../../../assets/icons/Close-Circle.svg';\r\nimport closeIcon from '../../../../assets/icons/Close.svg';\r\nimport saveIcon from '../../../../assets/icons/Save.svg';\r\nimport trashcanIcon from '../../../../assets/icons/Trash-Can.svg';\r\nimport defaultAvatar from '../../../../assets/icons/DefaultAvatar.png';\r\n\r\nimport ImageUploaderComponent from '../../../_reusable/uploader/ImageUploaderComponent';\r\nimport UserService from '../../UserService';\r\nimport UserStorage from '../../UserStorage';\r\nimport UserPasswordForm from '../../UserPasswordForm';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../../../shared/elements/notification/NotifyComponent';\r\nimport SelectComponentCustom from '../../../../shared/elements/select/select.componentcustom';\r\nimport AuthService from '../../../../core/auth.service';\r\nimport Button from '../../../../shared/components/button/Button';\r\n\r\nfunction EditDeleteUserComponent({\r\n  selectedUser,\r\n  callbackClosePanel,\r\n  callbackGetUsers,\r\n  users,\r\n  setIsProfileUpdated,\r\n}) {\r\n  const { formFields } = UserStorage;\r\n  const { roles } = UserStorage;\r\n  delete roles[0];\r\n  const { checkString } = UserPasswordForm;\r\n\r\n  const [selectedRole, setSelectedRole] = useState(selectedUser.role);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [userParameters, setUserParameters] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    jobTitle: '',\r\n    roleId: 3,\r\n    base64ProfileImage: '',\r\n    organisationId: 0,\r\n    fileExtension: '',\r\n  });\r\n  const [userValidation, setUserValidation] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    email: false,\r\n    image: false,\r\n    jobTitle: false,\r\n  });\r\n  const [emailErrorText, setEmailErrorText] = useState('');\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [userImage, setUserImage] = useState(defaultAvatar);\r\n  const [imageFileSize, setImageFileSize] = useState(0);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [firstNameErrorText, setFirstNameErrorText] = useState('');\r\n  const [lastNameErrorText, setLastNameErrorText] = useState('');\r\n  const [jobTitleErrorText, setJobTitleErrorText] = useState('');\r\n  const [isResendingInvitation, setIsResendingInvitation] = useState(false);\r\n  const [userIdentity, setUserIdentity] = useState(AuthService.getUserIdentity());\r\n  const creatorName = `${userIdentity.firstName} ${userIdentity.lastName}`;\r\n  const [invitationResult, setInvitationResult] = useState('');\r\n\r\n  const getRole = (role) => {\r\n    switch (role) {\r\n      case 'Organisation Admin':\r\n        setSelectedRole('Organisation Admin');\r\n        return 2;\r\n      case 'Organisation User':\r\n        setSelectedRole('Organisation User');\r\n        return 3;\r\n      default:\r\n        break;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const onChangeuserParameters = (e) => {\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const selectRole = (selected) => {\r\n    setSelectedRole(selected.value);\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      roleId: selected.id,\r\n    }));\r\n  };\r\n\r\n  const resendInvitation = () => {\r\n    setIsResendingInvitation(true);\r\n    UserService.resendInvitation({\r\n      firstName: userParameters.firstName,\r\n      email: userParameters.email,\r\n      creatorName: creatorName,\r\n    })\r\n      .then((response) => setInvitationResult(response.data.requestLink))\r\n      .finally(() => setIsResendingInvitation(false));\r\n  };\r\n\r\n  const handleDeleteSubmit = () => {\r\n    if (!isSubmitting) {\r\n      setErrorMessage('');\r\n      setIsSubmitting(true);\r\n\r\n      UserService.deleteuser(selectedUser.userId)\r\n        .then(() => {\r\n          callbackClosePanel();\r\n          callbackGetUsers();\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.response.data.message);\r\n        })\r\n        .finally(() => {\r\n          setIsSubmitting(false);\r\n          success('User deleted successfully');\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleCheck = (value) =>\r\n    users.some(\r\n      (user) => user.email === value && user.userId !== selectedUser.userId\r\n    );\r\n\r\n  const validateUserDetails = () => {\r\n    let valid = true;\r\n    setUserValidation({\r\n      firstName: false,\r\n      lastName: false,\r\n      email: false,\r\n      image: false,\r\n    });\r\n    if (!checkString(userParameters.firstName)) {\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        firstName: true,\r\n      }));\r\n      valid = false;\r\n      setFirstNameErrorText('First Name is required');\r\n    } else if (userParameters.firstName.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        firstName: true,\r\n      }));\r\n      setFirstNameErrorText('100 Max Character exceeded');\r\n    }\r\n    if (!checkString(userParameters.lastName)) {\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        lastName: true,\r\n      }));\r\n      valid = false;\r\n      setLastNameErrorText('Last Name is required');\r\n    } else if (userParameters.lastName.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        lastName: true,\r\n      }));\r\n      setLastNameErrorText('100 Max Character exceeded');\r\n    }\r\n\r\n    if (!checkString(userParameters.email)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n      setEmailErrorText('Email is required');\r\n    } else if (handleCheck(userParameters.email)) {\r\n      valid = false;\r\n      setEmailErrorText(\r\n        `Email address ${userParameters.email} is already used`\r\n      );\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n    } else if (!UserStorage.validateEmail(userParameters.email)) {\r\n      valid = false;\r\n      setEmailErrorText('Email address is invalid');\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n    }\r\n    if (imageFileSize > 2) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        image: true,\r\n      }));\r\n    }\r\n\r\n    if (userParameters.jobTitle.length > 100) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        jobTitle: true,\r\n      }));\r\n      setJobTitleErrorText('100 Max Character exceeded');\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleEditSubmit = () => {\r\n    if (!isSubmitting) {\r\n      setIsSubmitting(true);\r\n      setIsLoading(true);\r\n      if (!validateUserDetails()) {\r\n        danger('Please check required fields');\r\n        setIsSubmitting(false);\r\n        setIsLoading(false);\r\n      } else {\r\n        UserService.updateUser(selectedUser.userId, userParameters)\r\n          .then(() => {\r\n            callbackClosePanel();\r\n            callbackGetUsers();\r\n            success('User details successfully updated.');\r\n            if (selectedUser.userId === AuthService.getUserIdentity().userId) {\r\n              setIsProfileUpdated(true);\r\n              let newUserIdentity = { ...userIdentity };\r\n              newUserIdentity.roleId = userParameters.roleId;\r\n              setUserIdentity(newUserIdentity);\r\n              AuthService.setUserIdentity(newUserIdentity);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            danger(error.response.data.message);\r\n          })\r\n          .finally(() => {\r\n            setIsSubmitting(false);\r\n            setIsLoading(false);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeImage = (file, fileExtension, size) => {\r\n    const extension = fileExtension === 'svg' ? 'svg+xml' : fileExtension;\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      base64ProfileImage: `data:image/${extension};base64,${\r\n        file.split(',')[1]\r\n      }`,\r\n      fileExtension: fileExtension,\r\n    }));\r\n    setUserImage(file);\r\n    setImageFileSize(size / (1024 * 1024).toFixed(2));\r\n  };\r\n\r\n  const fieldValue = (parameterName) => {\r\n    if (parameterName === 'firstName') return userParameters.firstName;\r\n    if (parameterName === 'lastName') return userParameters.lastName;\r\n    if (parameterName === 'email') return userParameters.email;\r\n    if (parameterName === 'jobTitle') return userParameters.jobTitle;\r\n    return '';\r\n  };\r\n\r\n  const fieldHasError = (parameterName) => {\r\n    if (parameterName === 'firstName') return userValidation.firstName;\r\n    if (parameterName === 'lastName') return userValidation.lastName;\r\n    if (parameterName === 'email') return userValidation.email;\r\n    return false;\r\n  };\r\n\r\n  const errorText = (parameterName) => {\r\n    if (parameterName === 'firstName') return firstNameErrorText;\r\n    if (parameterName === 'lastName') return lastNameErrorText;\r\n    if (parameterName === 'email') return emailErrorText;\r\n    if (parameterName === 'jobTitle') return jobTitleErrorText;\r\n    return '';\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    UserService.getUser(selectedUser.userId).then((response) => {\r\n      setUserParameters({\r\n        firstName: response.data.firstName,\r\n        lastName: response.data.lastName,\r\n        email: response.data.email,\r\n        jobTitle: response.data.jobTitle,\r\n        roleId: getRole(response.data.role),\r\n        base64ProfileImage: response.data.profilePic,\r\n        organisationId: response.data.organisationID,\r\n        isNewAccount: response.data.isNewAccount,\r\n      });\r\n      setUserInfo({\r\n        dateCreated: DateService.toLocalFormat(response.data.dateCreated),\r\n        loggedOutDate:\r\n          response.data.lastSeenDate === null\r\n            ? ''\r\n            : DateService.toLocalFormat(response.data.lastSeenDate),\r\n      });\r\n      setUserImage(\r\n        response.data.profilePic !== null && response.data.profilePic !== ''\r\n          ? response.data.profilePic\r\n          : defaultAvatar\r\n      );\r\n      setUserValidation(() => ({\r\n        firstName: false,\r\n        lastName: false,\r\n        email: false,\r\n        image: false,\r\n      }));\r\n      setImageFileSize(0);\r\n      setIsLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedUser.userId]);\r\n\r\n  return (\r\n    <div className={UserStyles.box}>\r\n      <div className=\"position-relative\">\r\n        <i>\r\n          <img\r\n            className={UserStyles.closeIcon}\r\n            src={closeIcon}\r\n            alt=\"\"\r\n            onClick={() => callbackClosePanel()}\r\n            onKeyDown={() => callbackClosePanel()}\r\n            role=\"presentation\"\r\n          />\r\n        </i>\r\n      </div>\r\n      {isLoading ? (\r\n        <>\r\n          <div\r\n            className={`${Styles.divLoadingPanel}`}\r\n            style={{ fontSize: '28px' }}\r\n          >\r\n            <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n              <div>\r\n                <LoadingComponent />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={UserStyles.formWrapper}>\r\n            <div\r\n              className=\"d-flex position-relative\"\r\n              style={{ height: '113px' }}\r\n            >\r\n              <ImageUploaderComponent\r\n                imageSource={userImage}\r\n                callbackChangeImage={onChangeImage}\r\n                styles={Styles}\r\n              />\r\n            </div>\r\n            {userValidation.image && (\r\n              <span className={UserStyles.hasError}>\r\n                {' '}\r\n                Image file size exceeds 2MB{' '}\r\n              </span>\r\n            )}\r\n\r\n            <form>\r\n              {formFields.map((field) => (\r\n                <div key={field.id} hidden={field.type === 'password'}>\r\n                  <div className={UserStyles.formLabel}>\r\n                    {field.name}{' '}\r\n                    {field.isRequired ? (\r\n                      <span className={UserStyles.required}>*</span>\r\n                    ) : (\r\n                      undefined\r\n                    )}\r\n                  </div>\r\n                  <input\r\n                    className={`${UserStyles.formInput} ${fieldHasError}`}\r\n                    maxLength={field.maxLength}\r\n                    name={field.parameterName && field.parameterName}\r\n                    value={fieldValue(field.parameterName)}\r\n                    type={field.type}\r\n                    placeholder={field.placeHolder}\r\n                    onChange={onChangeuserParameters}\r\n                  />\r\n\r\n                  {fieldHasError(field.parameterName) && (\r\n                    <span className={UserStyles.hasError}>\r\n                      {errorText(field.parameterName)}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </form>\r\n\r\n            <div>\r\n              <div className={UserStyles.formLabel}>Role</div>\r\n              <SelectComponentCustom\r\n                text={selectedRole}\r\n                list={roles}\r\n                onSelect={selectRole}\r\n                width=\"100%\"\r\n              />\r\n            </div>\r\n\r\n            {userParameters.isNewAccount && (\r\n              <div className=\"mt-2\">\r\n                <Button\r\n                  text=\"Re-send invitation\"\r\n                  onClick={resendInvitation}\r\n                  isLoading={isResendingInvitation}\r\n                />\r\n                {invitationResult && (\r\n                  <div>\r\n                    <p className={Styles.invitationDescription}>\r\n                      An invitation email containing the following link: with 24\r\n                      hours validity has been sent:\r\n                    </p>\r\n                    <p className={Styles.invitationLink}>{invitationResult}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <div className={`${Styles.userInfo} d-flex`}>\r\n              <div className=\"row col-12\">\r\n                <p className=\"col-6\">\r\n                  Date Created <br /> <span>{userInfo.dateCreated}</span>\r\n                </p>\r\n                <p className=\"col-6\">\r\n                  Last Seen <br /> <span>{userInfo.loggedOutDate}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"position-absolute start-0 bottom-0 text-center\"\r\n            style={{\r\n              width: '100%',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            <i\r\n              className={UserStyles.saveIcon}\r\n              style={{ pointerEvent: isSubmitting && 'none' }}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Update user details\"\r\n            >\r\n              <img\r\n                src={saveIcon}\r\n                alt=\"\"\r\n                onClick={handleEditSubmit}\r\n                onKeyDown={handleEditSubmit}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n            <i\r\n              className={UserStyles.trashcanIcon}\r\n              style={{ pointerEvent: isSubmitting && 'none' }}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Delete user\"\r\n            >\r\n              <img\r\n                src={trashcanIcon}\r\n                alt=\"\"\r\n                onClick={() => setModalShow(true)}\r\n                onKeyDown={() => setModalShow(true)}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n            <i className={UserStyles.closeCircleIcon}>\r\n              <img\r\n                src={closeCircleIcon}\r\n                alt=\"\"\r\n                onClick={() => callbackClosePanel()}\r\n                onKeyDown={() => callbackClosePanel()}\r\n                role=\"presentation\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Cancel\"\r\n              />\r\n            </i>\r\n            {errorMessage !== '' && errorMessage}\r\n          </div>\r\n        </>\r\n      )}\r\n      <Modal\r\n        size=\"md\"\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            You are permanently deleting this user\r\n          </div>\r\n          <div style={{ textAlign: 'center', fontSize: '20px' }}>\r\n            Are you sure you want to proceed?\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.cancelButton}\r\n              onClick={() => setModalShow(false)}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className={Styles.deleteButton}\r\n              onClick={handleDeleteSubmit}\r\n              type=\"button\"\r\n            >\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nEditDeleteUserComponent.propTypes = {\r\n  selectedUser: PropTypes.shape.isRequired,\r\n  callbackClosePanel: PropTypes.func.isRequired,\r\n  callbackGetUsers: PropTypes.func.isRequired,\r\n  users: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n};\r\nexport default EditDeleteUserComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"EditDeleteUser_userPhoto__H0zWS\",\"uploadPhotoButton\":\"EditDeleteUser_uploadPhotoButton__nXFMH\",\"userInfo\":\"EditDeleteUser_userInfo__R1hMn\",\"deleteButton\":\"EditDeleteUser_deleteButton__39K7s\",\"cancelButton\":\"EditDeleteUser_cancelButton__UYyHO\",\"divLoadingPanel\":\"EditDeleteUser_divLoadingPanel__PlJjE\",\"invitationDescription\":\"EditDeleteUser_invitationDescription__PcH0w\",\"invitationLink\":\"EditDeleteUser_invitationLink__jm0Ff\"};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal } from 'react-bootstrap';\r\nimport LoadingComponent from '../../../_reusable/loading/LoadingComponent';\r\n\r\nimport DateService from '../../../../core/date.service';\r\nimport Styles from './EditDeleteUser.module.css';\r\nimport UserStyles from '../../user.module.css';\r\nimport closeCircleIcon from '../../../../assets/icons/Close-Circle.svg';\r\nimport closeIcon from '../../../../assets/icons/Close.svg';\r\nimport saveIcon from '../../../../assets/icons/Save.svg';\r\nimport trashcanIcon from '../../../../assets/icons/Trash-Can.svg';\r\nimport defaultAvatar from '../../../../assets/icons/DefaultAvatar.png';\r\n\r\nimport ImageUploaderComponent from '../../../_reusable/uploader/ImageUploaderComponent';\r\nimport UserService from '../../UserService';\r\nimport UserStorage from '../../UserStorage';\r\nimport UserPasswordForm from '../../UserPasswordForm';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../../../shared/elements/notification/NotifyComponent';\r\nimport SelectComponentCustom from '../../../../shared/elements/select/select.componentcustom';\r\nimport SelectComponent from '../../../../shared/elements/select/select.component';\r\nimport AuthService from '../../../../core/auth.service';\r\nimport Button from '../../../../shared/components/button/Button';\r\n\r\nfunction EditDeleteUserComponent({\r\n  selectedUser,\r\n  callbackClosePanel,\r\n  callbackGetUsers,\r\n  users,\r\n  organisations,\r\n  setIsProfileUpdated,\r\n}) {\r\n  const { formFields } = UserStorage;\r\n  const { roles } = UserStorage;\r\n  const { checkString } = UserPasswordForm;\r\n\r\n  const [selectedRole, setSelectedRole] = useState(\r\n    selectedUser.role === 'Admin' ? 'Admin' : 'Regular User'\r\n  );\r\n  const [selectedOrganisation, setSelectedOrganisation] = useState(\r\n    'Select Organisation'\r\n  );\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [disabledOrganisation, setDisabledOrganisation] = useState(false);\r\n  const [userParameters, setUserParameters] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    jobTitle: '',\r\n    roleId: 1,\r\n    base64ProfileImage: '',\r\n    organisationID: null,\r\n    fileExtension: '',\r\n  });\r\n  const [userValidation, setUserValidation] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    email: false,\r\n    image: false,\r\n    organisation: false,\r\n  });\r\n  const [emailErrorText, setEmailErrorText] = useState('');\r\n  const [organisationErrorText, setOrganisationErrorText] = useState('');\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [userImage, setUserImage] = useState(defaultAvatar);\r\n  const [imageFileSize, setImageFileSize] = useState(0);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [isResendingInvitation, setIsResendingInvitation] = useState(false);\r\n  const [userIdentity, setUserIdentity] = useState(AuthService.getUserIdentity());\r\n  const creatorName = `${userIdentity.firstName} ${userIdentity.lastName}`;\r\n  const [invitationResult, setInvitationResult] = useState('');\r\n\r\n  const getRole = (role) => {\r\n    switch (role) {\r\n      case 'Super Admin':\r\n        setSelectedRole('Super Admin');\r\n        return 1;\r\n      case 'Organisation Admin':\r\n        setSelectedRole('Organisation Admin');\r\n        return 2;\r\n      case 'Organisation User':\r\n        setSelectedRole('Organisation User');\r\n        return 3;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  const onChangeuserParameters = (e) => {\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const selectRole = (selected) => {\r\n    const { id } = selected;\r\n    const name = selected.value;\r\n    setSelectedRole(name);\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      roleId: id,\r\n    }));\r\n    if (id === 1) {\r\n      setDisabledOrganisation(true);\r\n      setSelectedOrganisation('Select Organisation');\r\n      setUserParameters((prevState) => ({\r\n        ...prevState,\r\n        organisationID: 0,\r\n      }));\r\n    } else {\r\n      setDisabledOrganisation(false);\r\n    }\r\n  };\r\n\r\n  const selectOrganisation = (selected) => {\r\n    setSelectedOrganisation(selected.name);\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      organisationID: selected.id,\r\n    }));\r\n  };\r\n\r\n  const handleCheck = (value) =>\r\n    users.some(\r\n      (user) => user.email === value && user.userId !== selectedUser.userId\r\n    );\r\n\r\n  const validateUserDetails = () => {\r\n    let valid = true;\r\n    setUserValidation({\r\n      firstName: false,\r\n      lastName: false,\r\n      email: false,\r\n      image: false,\r\n      organisation: false,\r\n    });\r\n    setOrganisationErrorText('');\r\n    if (!checkString(userParameters.firstName)) {\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        firstName: true,\r\n      }));\r\n      valid = false;\r\n    }\r\n    if (!checkString(userParameters.lastName)) {\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        lastName: true,\r\n      }));\r\n      valid = false;\r\n    }\r\n\r\n    if (!checkString(userParameters.email)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n      setEmailErrorText('Email is required');\r\n    } else if (handleCheck(userParameters.email)) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n      setEmailErrorText(\r\n        `Email address ${userParameters.email} is already used`\r\n      );\r\n    } else if (!UserStorage.validateEmail(userParameters.email)) {\r\n      valid = false;\r\n      setEmailErrorText('Email address is invalid');\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        email: true,\r\n      }));\r\n    }\r\n    if (imageFileSize > 2) {\r\n      valid = false;\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        image: true,\r\n      }));\r\n    }\r\n\r\n    if (userParameters.roleId !== 1) {\r\n      if (\r\n        userParameters.organisationID === 0 ||\r\n        userParameters.organisationID === null\r\n      ) {\r\n        valid = false;\r\n        setOrganisationErrorText('Organisation is required');\r\n        setUserValidation((prevState) => ({\r\n          ...prevState,\r\n          organisation: true,\r\n        }));\r\n      }\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleEditSubmit = () => {\r\n    if (!isSubmitting) {\r\n      setIsSubmitting(true);\r\n      if (!validateUserDetails()) {\r\n        danger('Please check required fields');\r\n        setIsSubmitting(false);\r\n      } else {\r\n        UserService.updateUser(selectedUser.userId, userParameters)\r\n          .then(() => {\r\n            callbackClosePanel();\r\n            callbackGetUsers();\r\n            success('User details successfully updated.');\r\n            if (selectedUser.userId === AuthService.getUserIdentity().userId) {\r\n              setIsProfileUpdated(true);\r\n              let newUserIdentity = { ...userIdentity };\r\n              newUserIdentity.roleId = userParameters.roleId;\r\n              setUserIdentity(newUserIdentity);\r\n              AuthService.setUserIdentity(newUserIdentity);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            danger(error.response.data.message);\r\n          })\r\n          .finally(() => {\r\n            setIsSubmitting(false);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const resendInvitation = () => {\r\n    setIsResendingInvitation(true);\r\n    UserService.resendInvitation({\r\n      firstName: userParameters.firstName,\r\n      email: userParameters.email,\r\n      creatorName: creatorName,\r\n    })\r\n      .then((response) => setInvitationResult(response.data.requestLink))\r\n      .finally(() => setIsResendingInvitation(false));\r\n  };\r\n\r\n  const handleDeleteSubmit = () => {\r\n    setErrorMessage('');\r\n    setIsSubmitting(true);\r\n\r\n    UserService.deleteuser(selectedUser.userId)\r\n      .then(() => {\r\n        callbackClosePanel();\r\n        callbackGetUsers();\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error.response.data.message);\r\n      })\r\n      .finally(() => {\r\n        setIsSubmitting(false);\r\n        success('User deleted successfully');\r\n      });\r\n  };\r\n\r\n  const onChangeImage = (file, fileExtension, size) => {\r\n    const extension = fileExtension === 'svg' ? 'svg+xml' : fileExtension;\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      base64ProfileImage: `data:image/${extension};base64,${\r\n        file.split(',')[1]\r\n      }`,\r\n      fileExtension: fileExtension,\r\n    }));\r\n    setUserImage(file);\r\n    setImageFileSize(size / (1024 * 1024).toFixed(2));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setSelectedOrganisation('Select Organisation');\r\n    setUserParameters((prevState) => ({\r\n      ...prevState,\r\n      organisationID: null,\r\n    }));\r\n    UserService.getUser(selectedUser.userId).then((response) => {\r\n      setUserParameters({\r\n        firstName: response.data.firstName,\r\n        lastName: response.data.lastName,\r\n        email: response.data.email,\r\n        jobTitle: response.data.jobTitle,\r\n        roleId: getRole(response.data.role),\r\n        base64ProfileImage: response.data.profilePic,\r\n        organisationID: response.data.organisationID,\r\n        isNewAccount: response.data.isNewAccount,\r\n      });\r\n      setUserInfo({\r\n        dateCreated: DateService.toLocalFormat(response.data.dateCreated),\r\n        loggedOutDate:\r\n          response.data.lastSeenDate == null\r\n            ? ''\r\n            : DateService.toLocalFormat(response.data.lastSeenDate),\r\n      });\r\n      setUserImage(\r\n        response.data.profilePic !== null && response.data.profilePic !== ''\r\n          ? response.data.profilePic\r\n          : defaultAvatar\r\n      );\r\n      organisations.map((o) => {\r\n        if (o.id === response.data.organisationID) {\r\n          setSelectedOrganisation(o.name);\r\n          setUserParameters((prevState) => ({\r\n            ...prevState,\r\n            organisationID: o.id,\r\n          }));\r\n        }\r\n        return true;\r\n      });\r\n      setUserValidation({\r\n        firstName: false,\r\n        lastName: false,\r\n        email: false,\r\n        image: false,\r\n      });\r\n      setImageFileSize(0);\r\n      setDisabledOrganisation(response.data.role === 'Super Admin');\r\n      setIsLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedUser.userId]);\r\n\r\n  const errorText = (field) => {\r\n    if (field.parameterName === 'firstName') return 'First Name is required';\r\n    if (field.parameterName === 'lastName') return 'Last Name is required';\r\n    if (field.parameterName === 'email') return emailErrorText;\r\n    return '';\r\n  };\r\n\r\n  const showErrorText = (field) => {\r\n    if (field.parameterName === 'firstName') return userValidation.firstName;\r\n    if (field.parameterName === 'lastName') return userValidation.lastName;\r\n    if (field.parameterName === 'email') return userValidation.email;\r\n    return false;\r\n  };\r\n\r\n  const parameterValue = (field) => {\r\n    if (field.parameterName === 'firstName') return userParameters.firstName;\r\n    if (field.parameterName === 'lastName') return userParameters.lastName;\r\n    if (field.parameterName === 'email') return userParameters.email;\r\n    if (field.parameterName === 'jobTitle') return userParameters.jobTitle;\r\n    return '';\r\n  };\r\n\r\n  const validationClass = (field) => {\r\n    if (field.parameterName === 'firstName') return userValidation.firstName;\r\n    if (field.parameterName === 'lastName') return userValidation.lastName;\r\n    if (field.parameterName === 'email') return userValidation.email;\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className={UserStyles.box}>\r\n      <div className=\"position-relative\">\r\n        <i>\r\n          <img\r\n            className={UserStyles.closeIcon}\r\n            src={closeIcon}\r\n            alt=\"\"\r\n            onClick={() => callbackClosePanel()}\r\n            onKeyDown={() => callbackClosePanel()}\r\n            role=\"presentation\"\r\n          />\r\n        </i>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div\r\n          className={`${Styles.divLoadingPanel}`}\r\n          style={{ fontSize: '28px' }}\r\n        >\r\n          <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n            <div>\r\n              <LoadingComponent />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={UserStyles.formWrapper}>\r\n            <div\r\n              className=\"d-flex position-relative\"\r\n              style={{ height: '113px' }}\r\n            >\r\n              <ImageUploaderComponent\r\n                imageSource={userImage}\r\n                callbackChangeImage={onChangeImage}\r\n                styles={Styles}\r\n              />\r\n            </div>\r\n            {userValidation.image && (\r\n              <span className={UserStyles.hasError}>\r\n                {' '}\r\n                Image file size exceeds 2MB{' '}\r\n              </span>\r\n            )}\r\n            <form>\r\n              {formFields.map((field) => (\r\n                <div key={field.id} hidden={field.type === 'password'}>\r\n                  <div className={UserStyles.formLabel}>\r\n                    {field.name}{' '}\r\n                    {field.isRequired ? (\r\n                      <span className={UserStyles.required}>*</span>\r\n                    ) : (\r\n                      undefined\r\n                    )}\r\n                  </div>\r\n                  <input\r\n                    className={`${UserStyles.formInput} ${validationClass(\r\n                      field\r\n                    )}`}\r\n                    name={field.parameterName && field.parameterName}\r\n                    value={parameterValue(field)}\r\n                    type={field.type}\r\n                    placeholder={field.placeHolder}\r\n                    onChange={onChangeuserParameters}\r\n                    maxLength={field.maxLength}\r\n                  />\r\n\r\n                  {showErrorText(field) && (\r\n                    <span className={UserStyles.hasError}>\r\n                      {errorText(field)}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </form>\r\n\r\n            <div>\r\n              <SelectComponentCustom\r\n                label=\"Role\"\r\n                text={selectedRole}\r\n                list={roles}\r\n                onSelect={selectRole}\r\n                width=\"100%\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <SelectComponent\r\n                label=\"Organisation\"\r\n                text={selectedOrganisation}\r\n                list={organisations}\r\n                onSelect={selectOrganisation}\r\n                width=\"100%\"\r\n                disabled={disabledOrganisation}\r\n                withSearch\r\n              />\r\n              {userValidation.organisation && (\r\n                <span className={UserStyles.hasError}>\r\n                  {organisationErrorText}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            {userParameters.isNewAccount && (\r\n              <div className=\"mt-2\">\r\n                <Button\r\n                  text=\"Re-send invitation\"\r\n                  onClick={resendInvitation}\r\n                  isLoading={isResendingInvitation}\r\n                />\r\n                {invitationResult && (\r\n                  <div>\r\n                    <p className={Styles.invitationDescription}>\r\n                      An invitation email containing the following link: with 24\r\n                      hours validity has been sent:\r\n                    </p>\r\n                    <p className={Styles.invitationLink}>{invitationResult}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <div className={`${Styles.userInfo} d-flex`}>\r\n              <div className=\"row col-12\">\r\n                <p className=\"col-6\">\r\n                  Date Created <br /> <span>{userInfo.dateCreated}</span>\r\n                </p>\r\n                <p className=\"col-6\">\r\n                  Last Seen <br /> <span>{userInfo.loggedOutDate}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"position-absolute start-0 bottom-0 text-center\"\r\n            style={{\r\n              width: '100%',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            <i\r\n              className={UserStyles.saveIcon}\r\n              style={{ pointerEvent: isSubmitting && 'none' }}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Update user details\"\r\n            >\r\n              <img\r\n                src={saveIcon}\r\n                alt=\"\"\r\n                onClick={handleEditSubmit}\r\n                onKeyDown={handleEditSubmit}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n            <i\r\n              className={UserStyles.trashcanIcon}\r\n              style={{ pointerEvent: isSubmitting && 'none' }}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Delete user\"\r\n            >\r\n              <img\r\n                src={trashcanIcon}\r\n                alt=\"\"\r\n                onClick={() => setModalShow(true)}\r\n                onKeyDown={() => setModalShow(true)}\r\n                role=\"presentation\"\r\n              />\r\n            </i>\r\n            <i className={UserStyles.closeCircleIcon}>\r\n              <img\r\n                src={closeCircleIcon}\r\n                alt=\"\"\r\n                onClick={() => callbackClosePanel()}\r\n                onKeyDown={() => callbackClosePanel()}\r\n                role=\"presentation\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Cancel\"\r\n              />\r\n            </i>\r\n            {errorMessage !== '' && errorMessage}\r\n          </div>\r\n        </>\r\n      )}\r\n      <Modal\r\n        size=\"md\"\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            You are permanently deleting this user\r\n          </div>\r\n          <div style={{ textAlign: 'center', fontSize: '20px' }}>\r\n            Are you sure you want to proceed?\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.cancelButton}\r\n              onClick={() => setModalShow(false)}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className={Styles.deleteButton}\r\n              onClick={handleDeleteSubmit}\r\n              type=\"button\"\r\n            >\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nEditDeleteUserComponent.propTypes = {\r\n  selectedUser: PropTypes.shape.isRequired,\r\n  callbackClosePanel: PropTypes.func.isRequired,\r\n  callbackGetUsers: PropTypes.func.isRequired,\r\n  users: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  organisations: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n};\r\nexport default EditDeleteUserComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport Table from '../../shared/components/table/Table';\r\nimport BannerComponent from './user-banner/UserBannerComponent';\r\n\r\nimport AuthService from '../../core/auth.service';\r\nimport DateService from '../../core/date.service';\r\nimport UserStorage from './UserStorage';\r\nimport UserService from './UserService';\r\nimport AddUserComponent from './organisational-user/add-user/AddUserComponent';\r\nimport AddUserMasterComponent from './super-user/add-user/AddUserComponent';\r\nimport EditDeleteUserComponent from './organisational-user/edit-delete-user/EditDeleteUserComponent';\r\nimport EditDeleteUserMasterComponent from './super-user/edit-delete-user/EditDeleteUserComponent';\r\n\r\nfunction UserComponent({ setIsProfileUpdated }) {\r\n  const isOrganisationAdmin = AuthService.isOrganisationalAdmin();\r\n  const { organisationId } = AuthService.getUserIdentity();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState();\r\n  const [data, setData] = useState([]);\r\n  const [dataForEmailValidation, setDataForEmailValidation] = useState([]);\r\n  const [tableHeaders, setTableHeaders] = useState(UserStorage.tableHeaders);\r\n  const [queryParameters, setQueryParameters] = useState({});\r\n  const [tableParameters, setTableParameters] = useState({});\r\n  const [paginationParameters, setPaginationParameters] = useState({});\r\n  const [sortParameters, setSortParameters] = useState({ order: 2, sort: 5 });\r\n  const [showAddPanel, setShowAddPanel] = useState(false);\r\n  const [headerText, setHeaderText] = useState('');\r\n  const [organisation, setOrganisation] = useState('');\r\n  const [organisations, setOrganisations] = useState([]);\r\n  // const [organisationList, setOrganisationList] = useState([]);\r\n\r\n  const constructQueryParameters = (parameters) => {\r\n    const pagination = `?pageNumber=${\r\n      parameters.pageNumber ? parameters.pageNumber : 1\r\n    }\r\n    &pageSize=${parameters.pageSize ? parameters.pageSize : 50}`;\r\n\r\n    const firstName = parameters.firstNameFilter && parameters.firstNameFilterValue\r\n      ? `&firstNameFilter=${parameters.firstNameFilter}&firstNameFilterValue=${parameters.firstNameFilterValue}`\r\n      : '';\r\n\r\n    const lastName = parameters.lastNameFilter && parameters.lastNameFilterValue\r\n      ? `&lastNameFilter=${parameters.lastNameFilter}&lastNameFilterValue=${parameters.lastNameFilterValue}`\r\n      : '';\r\n\r\n    const email = parameters.emailFilter && parameters.emailFilterValue\r\n      ? `&emailFilter=${parameters.emailFilter}&emailFilterValue=${parameters.emailFilterValue}`\r\n      : '';\r\n\r\n    const roleP = parameters.roleFilter\r\n      ? `&role=${parameters.roleFilter.map((role) => role.name).join('-')}`\r\n      : '';\r\n\r\n    const organisationP = parameters.organisationFilter && parameters.organisationFilterValue\r\n      ? `&organisationFilter=${parameters.organisationFilter}&organisationFilterValue=${parameters.organisationFilterValue}`\r\n      : '';\r\n\r\n    const sort = `&userSort=${parameters.sortBy ? parameters.sortBy : 5}\r\n    &sortBy=${parameters.sortOrder ? parameters.sortOrder : 1}`;\r\n\r\n    const searchKey = parameters.searchKey\r\n      ? `&SearchKey=${parameters.searchKey}`\r\n      : '';\r\n\r\n    const useCache = parameters.useCache\r\n      ? `&useCache=${parameters.useCache}`\r\n      : '';\r\n\r\n    const dateCreated = parameters.dateCreatedFilter\r\n      && parameters.dateCreatedFilterStartRange\r\n      && parameters.dateCreatedFilterEndRange\r\n      ? `&dateCreatedFilter=${\r\n        parameters.dateCreatedFilter\r\n      }&dateCreatedFilterStartRange=${DateService.toIsoFormat(\r\n        parameters.dateCreatedFilterStartRange,\r\n      )}&dateCreatedFilterEndRange=${DateService.toIsoFormat(\r\n        parameters.dateCreatedFilterEndRange,\r\n      )}`\r\n      : '';\r\n\r\n    const lastSeen = parameters.lastSeenFilter\r\n      && parameters.lastSeenFilterStartRange\r\n      && parameters.lastSeenFilterEndRange\r\n      ? `&lastSeenFilter=${\r\n        parameters.lastSeenFilter\r\n      }&lastSeenFilterStartRange=${DateService.toIsoFormat(\r\n        parameters.lastSeenFilterStartRange,\r\n      )}&lastSeenFilterEndRange=${DateService.toIsoFormat(\r\n        parameters.lastSeenFilterEndRange,\r\n      )}`\r\n      : '';\r\n\r\n    let queryString = pagination\r\n      + firstName\r\n      + lastName\r\n      + email\r\n      + roleP\r\n      + dateCreated\r\n      + lastSeen\r\n      + organisationP\r\n      + sort\r\n      + searchKey\r\n      + useCache;\r\n\r\n      if (queryString.includes('+')) {\r\n        queryString = queryString.replace('+', '%2B');\r\n      }\r\n\r\n    return queryString;\r\n  };\r\n\r\n  const handleSetTableParameters = (parameters) => {\r\n    setTableParameters({\r\n      firstNameFilter: parameters.firstNameFilter,\r\n      firstNameFilterValue: parameters.firstNameFilterValue,\r\n      lastNameFilter: parameters.lastNameFilter,\r\n      lastNameFilterValue: parameters.lastNameFilterValue,\r\n      emailFilter: parameters.emailFilter,\r\n      emailFilterValue: parameters.emailFilterValue,\r\n      roleFilter: parameters.roleFilter,\r\n      organisationFilter: parameters.organisationFilter,\r\n      organisationFilterValue: parameters.organisationFilterValue,\r\n      dateCreatedFilter: parameters.dateCreatedFilter,\r\n      dateCreatedFilterStartRange: parameters.dateCreatedFilterStartRange,\r\n      dateCreatedFilterEndRange: parameters.dateCreatedFilterEndRange,\r\n      lastSeenFilter: parameters.lastSeenFilter,\r\n      lastSeenFilterStartRange: parameters.lastSeenFilterStartRange,\r\n      lastSeenFilterEndRange: parameters.lastSeenFilterEndRange,\r\n    });\r\n  };\r\n\r\n  const constructTableHeaders = () => {\r\n    let headers = UserStorage.tableHeaders.filter(\r\n      (item) => item.headerId !== 7,\r\n    );\r\n    headers = headers.map((header) => (header.headerId === 4\r\n      ? {\r\n        ...header,\r\n        filter: {\r\n          ...header.filter,\r\n          list: header.filter.list.filter((item) => item.id !== 1),\r\n        },\r\n      }\r\n      : header));\r\n\r\n    setTableHeaders(headers);\r\n  };\r\n\r\n  const constructData = (items) => {\r\n    const users = items.map((item) => ({\r\n      userId: item.userId,\r\n      firstName: item.firstName,\r\n      lastName: item.lastName,\r\n      email: item.email,\r\n      role: item.role,\r\n      organisation: isOrganisationAdmin\r\n        ? `hidden:${item.organisation}`\r\n        : item.organisation,\r\n      dateCreated: DateService.toLocalFormat(item.dateCreated),\r\n      lastSeenDate:\r\n        item.lastSeenDate == null\r\n          ? ''\r\n          : DateService.toLocalFormat(item.lastSeenDate),\r\n    }));\r\n\r\n    return users;\r\n  };\r\n\r\n  const handleGetUsers = () => {\r\n    setIsLoading(true);\r\n    UserService.getUsers(constructQueryParameters(queryParameters))\r\n      .then((response) => {\r\n        setData(constructData(response.data.users));\r\n        setPaginationParameters({\r\n          totalCount: response.data.totalCount,\r\n          pageSize: response.data.pageSize,\r\n          currentPage: response.data.currentPage,\r\n          totalPages: response.data.totalPages,\r\n        });\r\n\r\n        UserService.getOrganisation(organisationId).then(\r\n          (organisationResponse) => {\r\n            const userHeaderText = `Used Accounts: ${response.data.usedAccounts} | Account Limit: ${\r\n              organisationResponse.data.accountLimit\r\n            } | Renewal: ${DateService.toDayOfWeekFormat(\r\n              organisationResponse.data.validityDate,\r\n            )}`;\r\n            setHeaderText(userHeaderText);\r\n            setOrganisation(organisationResponse.data.name);\r\n          },\r\n        );\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const handleGetOrganisationLookup = () => {\r\n    UserService.getOrganisations().then((response) => {\r\n      const organisationArray = [];\r\n      const organisationOptions = [];\r\n      const responseOrganisations = response.data.organisations;\r\n      responseOrganisations.map((value) => {\r\n        organisationOptions.push({ id: value.id, name: value.name });\r\n        organisationArray.push(value.id);\r\n        return true;\r\n      });\r\n\r\n      setOrganisations(organisationOptions);\r\n      // setOrganisationList(organisationArray);\r\n    });\r\n  };\r\n\r\n  const handleGetAllUsers = () => {\r\n    setIsLoading(true);\r\n    UserService.getAllUsers(constructQueryParameters(queryParameters))\r\n      .then((response) => {\r\n        setData(constructData(response.data.users));\r\n        handleGetOrganisationLookup();\r\n        setPaginationParameters({\r\n          totalCount: response.data.totalCount,\r\n          pageSize: response.data.pageSize,\r\n          currentPage: response.data.currentPage,\r\n          totalPages: response.data.totalPages,\r\n        });\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const getAllUsersForEmailValidation = () => {\r\n    UserService.getAllUsers(constructQueryParameters(queryParameters))\r\n      .then((response) => {\r\n        setDataForEmailValidation(constructData(response.data.users));        \r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const onExportUsers = () => {\r\n    setIsExporting(true);\r\n\r\n    UserService.exportUsers(constructQueryParameters(queryParameters))\r\n      .then((response) => {\r\n        const blob = new Blob([response.data], {\r\n          type:\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        });\r\n        saveAs(\r\n          blob,\r\n          `${organisation}_op2mise_users_data_export_${DateService.toExportFormat(\r\n            new Date(),\r\n          )}.xlsx`,\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setIsExporting(false);\r\n      });\r\n  };\r\n\r\n  const handleExportAll = () => {\r\n    setIsExporting(true);\r\n\r\n    UserService.exportUsers(constructQueryParameters(queryParameters))\r\n      .then((response) => {\r\n        const blob = new Blob([response.data], {\r\n          type:\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        });\r\n        saveAs(\r\n          blob,\r\n          `op2mise_users_data_export_${DateService.toExportFormat(\r\n            new Date(),\r\n          )}.xlsx`,\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setIsExporting(false);\r\n      });\r\n  };\r\n\r\n  const handleOnFilter = (selectedData) => {\r\n    setQueryParameters({ ...queryParameters, ...selectedData, pageNumber: 1 });\r\n  };\r\n\r\n  const handleOnClearFilter = () => {\r\n    setQueryParameters({\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      searchKey: queryParameters.searchKey,\r\n    });\r\n  };\r\n\r\n  const handleOnSearch = (searchKey) => {\r\n    setQueryParameters({ ...queryParameters, searchKey, pageNumber : 1 });\r\n  };\r\n\r\n  const handleOnSort = ({ sortBy, sortOrder }) => {\r\n    setSortParameters({ order: sortOrder, sort: sortBy });\r\n    setQueryParameters({ ...queryParameters, sortBy, sortOrder });\r\n  };\r\n\r\n  const handleOnPaginate = (pageNumber, pageSize) => {\r\n    setQueryParameters({ ...queryParameters, pageNumber, pageSize });\r\n  };\r\n\r\n  const handleOnExport = () => {\r\n    if (isOrganisationAdmin) {\r\n      onExportUsers();\r\n    } else {\r\n      handleExportAll();\r\n    }\r\n  };\r\n\r\n  const handleSelectData = (selectedData) => {\r\n    setSelectedUser(selectedData);\r\n    setShowAddPanel(false);\r\n  };\r\n\r\n  const openAddUserPanel = () => {\r\n    setShowAddPanel(true);\r\n    setSelectedUser();\r\n  };\r\n\r\n  const hideAddPanel = () => {\r\n    setShowAddPanel(false);\r\n  };\r\n\r\n  const hideUpdateUserPanel = () => {\r\n    setSelectedUser();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOrganisationAdmin) constructTableHeaders();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSetTableParameters(queryParameters);\r\n    if (isOrganisationAdmin) {\r\n      handleGetUsers();\r\n      getAllUsersForEmailValidation();\r\n    } else {\r\n      handleGetAllUsers();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryParameters]);\r\n\r\n  return (\r\n    <>\r\n      <BannerComponent\r\n        componentName=\"Users\"\r\n        headerText={headerText}\r\n        isAddButtonHidden={false}\r\n        addButtonText=\"New User\"\r\n        searchUser={handleOnSearch}\r\n        callbackAddButtonFunction={openAddUserPanel}\r\n        isTableBodyLoading={isLoading}\r\n      />\r\n\r\n      <hr style={{ borderTop: '1px  solid #b1b1b1', marginBottom: '8px' }} />\r\n\r\n      <div className=\"d-flex\">\r\n        <Table\r\n          noDataVerbiage=\"No users found\"\r\n          list={data}\r\n          headers={tableHeaders}\r\n          queryParameters={tableParameters}\r\n          paginationParameters={paginationParameters}\r\n          sortParameters={sortParameters}\r\n          isFetchingData={isLoading}\r\n          isExporting={isExporting}\r\n          onFilter={handleOnFilter}\r\n          onClearFilters={handleOnClearFilter}\r\n          onSort={handleOnSort}\r\n          onPaginate={handleOnPaginate}\r\n          onExport={handleOnExport}\r\n          onDoubleClickSelectData={handleSelectData}\r\n        />\r\n\r\n        {showAddPanel && (\r\n          <div>\r\n            {isOrganisationAdmin ? (\r\n              <AddUserComponent\r\n                users={dataForEmailValidation}\r\n                callbackClosePanel={hideAddPanel}\r\n                callbackGetUsers={handleGetUsers}\r\n              />\r\n            ) : (\r\n              <AddUserMasterComponent\r\n                users={data}\r\n                organisations={organisations}\r\n                callbackClosePanel={hideAddPanel}\r\n                callbackGetUsers={handleGetAllUsers}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {selectedUser && (\r\n          <div>\r\n            {isOrganisationAdmin ? (\r\n              <EditDeleteUserComponent\r\n                users={dataForEmailValidation}\r\n                selectedUser={selectedUser}\r\n                callbackClosePanel={hideUpdateUserPanel}\r\n                callbackGetUsers={handleGetUsers}\r\n                setIsProfileUpdated={setIsProfileUpdated}\r\n              />\r\n            ) : (\r\n              <EditDeleteUserMasterComponent\r\n                users={data}\r\n                selectedUser={selectedUser}\r\n                organisations={organisations}\r\n                callbackClosePanel={hideUpdateUserPanel}\r\n                callbackGetUsers={handleGetAllUsers}\r\n                setIsProfileUpdated={setIsProfileUpdated}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserComponent;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction SelectComponentCustom({\r\n  label,\r\n  text,\r\n  list,\r\n  onSelect,\r\n  width,\r\n  disabled,\r\n}) {\r\n  const optionRef = useRef();\r\n  const [showOptionList, setShowOptionList] = useState(false);\r\n  const [disabledSelect, setDisabledSelect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const backdropClicked = (e) => {\r\n      if (optionRef.current && !optionRef.current.contains(e.target)) setShowOptionList(false);\r\n    };\r\n\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  }, [optionRef]);\r\n\r\n  useEffect(() => {\r\n    setDisabledSelect(disabled);\r\n  }, [disabled]);\r\n\r\n  const toggleOptionList = () => {\r\n    setShowOptionList(true);\r\n  };\r\n\r\n  const selectItem = (value) => {\r\n    if (typeof onSelect === 'function') {\r\n      onSelect(value);\r\n      setShowOptionList(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.select}>\r\n      {label && <div className={styles.label}>{label}</div>}\r\n\r\n      {text && (\r\n        <button\r\n          className={styles.selectButton}\r\n          style={{ width }}\r\n          title={text}\r\n          onClick={toggleOptionList}\r\n          disabled={disabledSelect}\r\n          type=\"button\"\r\n        >\r\n          <span>{text}</span>\r\n        </button>\r\n      )}\r\n\r\n      {showOptionList && (\r\n        <div ref={optionRef} className={styles.optionList} style={{ width }}>\r\n          {list\r\n            && list.map((value) => (\r\n              <div\r\n                key={value.id}\r\n                className={styles.optionItem}\r\n                title={value.value}\r\n                onClick={() => selectItem(value)}\r\n                onKeyDown={() => selectItem(value)}\r\n                role=\"presentation\"\r\n              >\r\n                {value.value}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelectComponentCustom.propTypes = {\r\n  label: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n  onSelect: PropTypes.func.isRequired,\r\n  width: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nSelectComponentCustom.defaultProps = {\r\n  label: '',\r\n  list: null,\r\n  width: '70px',\r\n  disabled: false,\r\n};\r\n\r\nexport default SelectComponentCustom;\r\n"],"names":["defaultOptions","loop","autoplay","animationData","hourglassIcon","rendererSettings","preserveAspectRatio","className","options","height","width","ImageUploaderComponent","imageSource","callbackChangeImage","styles","uploadNameRef","useRef","userPhoto","src","alt","uploadPhotoButton","onClick","current","click","type","style","display","ref","onChange","e","file","fileExtension","target","files","name","split","pop","Promise","resolve","baseURL","reader","FileReader","readAsDataURL","onload","result","getBase64","then","base64","size","catch","err","danger","defaultProps","BannerComponent","isAddButtonHidden","searchUser","isTableBodyLoading","componentName","headerText","callbackAddButtonFunction","addButtonText","useState","searchKey","setSearchKey","clearSearchIsActive","setClearSearchIsActive","saveSearchKey","setSaveSearchKey","searchRef","useEffect","backdropClicked","contains","document","addEventListener","removeEventListener","searchUserBanner","clearSearchUser","undefined","Styles","pointerEvents","title","paddingRight","textIndent","placeholder","value","onKeyDown","key","backgroundColor","borderTop","borderBottom","paddingTop","cursor","paddingLeft","closeIcon","role","length","searchIcon","tableHeaders","headerId","headerName","filter","queryNames","sortable","list","id","formFields","parameterName","placeHolder","isRequired","maxLength","roles","validateEmail","email","String","toLowerCase","match","addUser","json","url","process","axios","resendInvitation","updateUser","userId","deleteuser","getUsers","parameters","getAllUsers","getUser","exportUsers","responseType","exporAlltUsers","getOrganisation","ID","getOrganisations","onChangePassword","password","passwordStrengthMeter","passwordStrengthText","test","checkString","text","userInfo","onHide","profilePhoto","defaultAvatar","fullName","requestLink","closeCircleIcon","callbackClosePanel","callbackGetUsers","users","UserStorage","UserPasswordForm","userIdentity","AuthService","creatorName","firstName","lastName","selectedRole","setSelectedRole","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","organisationId","roleId","jobTitle","base64ProfileImage","userParameters","setUserParameters","userImage","setUserImage","imageFileSize","setImageFileSize","image","userValidation","setUserValidation","firstNameErrorText","setFirstNameErrorText","lastNameErrorText","setLastNameErrorText","emailErrorText","setEmailErrorText","jobTitleErrorText","setJobTitleErrorText","isUserAdded","setIsUserAdded","addUserResult","setAddUserResult","onChangeuserParameters","prevState","validateUserDetails","valid","some","user","handleSubmit","UserService","response","data","finally","fieldHasError","errorText","buildField","field","UserStyles","verticalAlign","LoadingComponent","extension","toFixed","map","onSelect","selected","marginBottom","pointerEvent","saveIcon","organisations","selectedOrganisation","setSelectedOrganisation","disabledOrganisation","setDisabledOrganisation","organisationID","confirmpassword","organisation","organisationErrorText","setOrganisationErrorText","error","hasValidationError","spanErrorText","renderInputs","label","disabled","withSearch","selectedUser","setIsProfileUpdated","setUserInfo","modalShow","setModalShow","isLoading","setIsLoading","isResendingInvitation","setIsResendingInvitation","setUserIdentity","invitationResult","setInvitationResult","getRole","handleEditSubmit","success","newUserIdentity","message","profilePic","isNewAccount","dateCreated","DateService","loggedOutDate","lastSeenDate","fontSize","hidden","Button","trashcanIcon","Modal","show","padding","textAlign","o","showErrorText","parameterValue","validationClass","isOrganisationAdmin","isExporting","setIsExporting","setSelectedUser","setData","dataForEmailValidation","setDataForEmailValidation","setTableHeaders","queryParameters","setQueryParameters","tableParameters","setTableParameters","paginationParameters","setPaginationParameters","order","sort","sortParameters","setSortParameters","showAddPanel","setShowAddPanel","setHeaderText","setOrganisation","setOrganisations","constructQueryParameters","pagination","pageNumber","pageSize","firstNameFilter","firstNameFilterValue","lastNameFilter","lastNameFilterValue","emailFilter","emailFilterValue","roleP","roleFilter","join","organisationP","organisationFilter","organisationFilterValue","sortBy","sortOrder","useCache","queryString","dateCreatedFilter","dateCreatedFilterStartRange","dateCreatedFilterEndRange","lastSeenFilter","lastSeenFilterStartRange","lastSeenFilterEndRange","includes","replace","constructData","items","item","handleGetUsers","totalCount","currentPage","totalPages","organisationResponse","userHeaderText","usedAccounts","accountLimit","validityDate","handleGetAllUsers","organisationArray","organisationOptions","push","hideAddPanel","hideUpdateUserPanel","headers","header","constructTableHeaders","Table","noDataVerbiage","isFetchingData","onFilter","selectedData","onClearFilters","onSort","onPaginate","onExport","blob","Blob","saveAs","Date","onDoubleClickSelectData","SelectComponentCustom","optionRef","showOptionList","setShowOptionList","disabledSelect","setDisabledSelect","selectItem"],"sourceRoot":""}
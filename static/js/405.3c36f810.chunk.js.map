{"version":3,"file":"static/js/405.3c36f810.chunk.js","mappings":"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","sources":["components/_reusable/uploader/ImageUploaderComponent.jsx","components/profile/ProfileService.js","webpack://sky/./src/components/profile/UserProfile.module.css?6f82","components/profile/UserProfileComponent.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { danger } from '../../../shared/elements/notification/NotifyComponent';\r\n\r\nfunction ImageUploaderComponent({ imageSource, callbackChangeImage, styles }) {\r\n  const uploadNameRef = useRef(null);\r\n\r\n  const handleUploadButton = () => {\r\n    uploadNameRef.current.click();\r\n  };\r\n\r\n  const getBase64 = (file) => new Promise((resolve) => {\r\n    let baseURL = '';\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      baseURL = reader.result;\r\n      resolve(baseURL);\r\n    };\r\n  });\r\n\r\n  const onFileChangeCapture = (e) => {\r\n    let { file } = '';\r\n    // eslint-disable-next-line\r\n    file = e.target.files[0];\r\n    const fileExtension = file.name.split('.').pop();\r\n\r\n    if (\r\n      fileExtension === 'tif'\r\n      || fileExtension === 'pjp'\r\n      || fileExtension === 'xbm'\r\n      || fileExtension === 'jxl'\r\n      || fileExtension === 'svgz'\r\n      || fileExtension === 'jpg'\r\n      || fileExtension === 'jpeg'\r\n      || fileExtension === 'ico'\r\n      || fileExtension === 'tiff'\r\n      || fileExtension === 'gif'\r\n      || fileExtension === 'svg'\r\n      || fileExtension === 'jfif'\r\n      || fileExtension === 'webp'\r\n      || fileExtension === 'png'\r\n      || fileExtension === 'bmp'\r\n      || fileExtension === 'pjep'\r\n      || fileExtension === 'avif'\r\n    ) {\r\n      getBase64(file)\r\n        .then((result) => {\r\n          file.base64 = result;\r\n          callbackChangeImage(result, fileExtension, file.size);\r\n        })\r\n        .catch((err) => {\r\n          danger(err);\r\n        });\r\n    } else {\r\n      danger(\r\n        'Uploaded file type is not supported. Please use files in image format (jpg, png)',\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <i>\r\n        <img className={styles.userPhoto} src={imageSource} alt=\"\" />\r\n      </i>\r\n      <button\r\n        className={styles.uploadPhotoButton}\r\n        onClick={handleUploadButton}\r\n        type=\"button\"\r\n        aria-label=\"upload photo\"\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        style={{ display: 'none' }}\r\n        ref={uploadNameRef}\r\n        onChange={onFileChangeCapture}\r\n      />\r\n    </>\r\n  );\r\n}\r\nImageUploaderComponent.propTypes = {\r\n  imageSource: PropTypes.string,\r\n  callbackChangeImage: PropTypes.func.isRequired,\r\n  styles: PropTypes.shape.isRequired,\r\n};\r\nImageUploaderComponent.defaultProps = {\r\n  imageSource: null,\r\n};\r\nexport default ImageUploaderComponent;\r\n","import axios from 'axios';\r\n\r\nconst ProfileService = {\r\n  getUser(id) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/${id}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  updateUser(userId, json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/${userId}`;\r\n    return axios.put(url, json);\r\n  },\r\n\r\n  changePassword(id, json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/changepassword/${id}`;\r\n    return axios.patch(url, json);\r\n  },\r\n};\r\nexport default ProfileService;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"UserProfile_header__FD78M\",\"headerText\":\"UserProfile_headerText__v5sWA\",\"profilePanel\":\"UserProfile_profilePanel__rqMey\",\"changePasswordPanel\":\"UserProfile_changePasswordPanel__dFlFs\",\"profilePhoto\":\"UserProfile_profilePhoto__-w6Qx\",\"uploadPhotoButton\":\"UserProfile_uploadPhotoButton__h01m8\",\"inputForm\":\"UserProfile_inputForm__1Ftxd\",\"inputLabel\":\"UserProfile_inputLabel__5GlDM\",\"inputField\":\"UserProfile_inputField__8Tlgb\",\"passwordInputField\":\"UserProfile_passwordInputField__KoSA2\",\"eyeIcon\":\"UserProfile_eyeIcon__SNUdF\",\"updateButton\":\"UserProfile_updateButton__2wiep\",\"resetButton\":\"UserProfile_resetButton__Ha3mK\",\"changePasswordPanelTitle\":\"UserProfile_changePasswordPanelTitle__taQPC\",\"successAlert\":\"UserProfile_successAlert__m-hrF\",\"alertSuccessText\":\"UserProfile_alertSuccessText__0gEq6\",\"alertErrorText\":\"UserProfile_alertErrorText__3nDh3\",\"profilePanelFooter\":\"UserProfile_profilePanelFooter__yCbnB\",\"changePasswordPanelFooter\":\"UserProfile_changePasswordPanelFooter__pzo4M\",\"alertText\":\"UserProfile_alertText__FgViK\",\"userPhoto\":\"UserProfile_userPhoto__KaKje\"};","import React, { useState, useEffect } from 'react';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\nimport './password-strength-meter.css';\r\n\r\nimport styles from './UserProfile.module.css';\r\nimport defaultAvatar from '../../assets/icons/DefaultAvatar.png';\r\nimport eyeIcon from '../../assets/icons/Eye.png';\r\nimport eyeOnIcon from '../../assets/icons/Eye-On.png';\r\nimport ImageUploaderComponent from '../_reusable/uploader/ImageUploaderComponent';\r\nimport ProfileService from './ProfileService';\r\nimport AuthService from '../../core/auth.service';\r\nimport { success } from '../../shared/elements/notification/NotifyComponent';\r\n\r\nfunction UserProfileComponent({ setIsProfileUpdated }) {\r\n  const [userModel, setUserModel] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    jobTitle: '',\r\n    base64ProfileImage: '',\r\n    fileExtension: '',\r\n    roleID: 3,\r\n  });\r\n  const [password, setPassword] = useState({\r\n    oldPassword: '',\r\n    newPassword: '',\r\n  });\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState({\r\n    oldPassword: 'password',\r\n    newPassword: 'password',\r\n    confirmPassword: 'password',\r\n  });\r\n  const [displayImage, setDisplayImage] = useState(defaultAvatar);\r\n  const [imageFileSize, setImageFileSize] = useState(0);\r\n  // const [base64ProfileImage, setBase64ProfileImage] = useState('');\r\n\r\n  const [passwordStrengthMeter, setPasswordStrengthMeter] = useState();\r\n  const [passwordStrengthText, setPasswordStrengthText] = useState('');\r\n\r\n  const [successAlert, showSuccessAlert] = useState(false);\r\n  const [passwordAlertErrorText, setPasswordAlertErrorText] = useState('');\r\n  const [passwordAlertSuccessText, setPasswordAlertSuccessText] = useState('');\r\n  const [profileAlertErrorText, setProfileAlertErrorText] = useState('');\r\n  const [isFirstNameMissing, setIsFirstNameMissing] = useState(false);\r\n  const [isLastNameMissing, setIsLastNameMissing] = useState(false);\r\n  const [isEmailMissing, setIsEmailMissing] = useState(false);\r\n  const [emailErrorText, setEmailErrorText] = useState('');\r\n\r\n  const togglePassword = (name) => {\r\n    setShowPassword((prevState) => ({\r\n      ...prevState,\r\n      [name]: showPassword[name] === 'password' ? 'text' : 'password',\r\n    }));\r\n  };\r\n\r\n  const getRole = (role) => {\r\n    switch (role) {\r\n      case 'Super Admin':\r\n        return 1;\r\n      case 'Organisation Admin':\r\n        return 2;\r\n      case 'Organisation User':\r\n        return 3;\r\n      default:\r\n        break;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getUser = () => {\r\n    ProfileService.getUser(AuthService.getUserIdentity().userId).then(\r\n      (response) => {\r\n        setUserModel({\r\n          firstName: response.data.firstName,\r\n          lastName: response.data.lastName,\r\n          email: response.data.email,\r\n          jobTitle: response.data.jobTitle,\r\n          roleId: getRole(response.data.role),\r\n          base64ProfileImage: response.data.profilePic,\r\n          organisationID: response.data.organisationID,\r\n          fileExtension: '',\r\n        });\r\n        // setBase64ProfileImage(response.data.profilePic);\r\n        setDisplayImage(\r\n          response.data.profilePic !== null && response.data.profilePic !== ''\r\n            ? response.data.profilePic\r\n            : defaultAvatar\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  const userProfileInputChanged = (e) => {\r\n    setUserModel((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const passwordInputChanged = (e) => {\r\n    setPassword((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const confirmPasswordInputChanged = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleUpdateProfile = () => {\r\n    if (\r\n      userModel.firstName &&\r\n      userModel.lastName &&\r\n      userModel.email &&\r\n      imageFileSize <= 2\r\n    ) {\r\n      setIsEmailMissing(false);\r\n      setIsFirstNameMissing(false);\r\n      setIsLastNameMissing(false);\r\n\r\n      ProfileService.updateUser(AuthService.getUserIdentity().userId, userModel)\r\n        .then(() => {\r\n          // showSuccessAlert(true);\r\n          success('User details successfully updated');\r\n          setIsProfileUpdated(true);\r\n        })\r\n        .catch((error) => {\r\n          if (\r\n            error.response.data.message ===\r\n            `Email address ${userModel.email} is already registered in the system`\r\n          ) {\r\n            setIsEmailMissing(true);\r\n            setEmailErrorText(\r\n              `Email address ${userModel.email} is already used`\r\n            );\r\n          }\r\n\r\n          if (error.response.data.message === 'Email is invalid') {\r\n            setIsEmailMissing(true);\r\n            setEmailErrorText('Invalid email address');\r\n          }\r\n        });\r\n\r\n      setTimeout(() => {\r\n        showSuccessAlert(false);\r\n      }, 2000);\r\n    } else {\r\n      if (userModel.email === '') {\r\n        setIsEmailMissing(true);\r\n        setEmailErrorText('Email is required');\r\n      } else {\r\n        setIsEmailMissing(false);\r\n        setEmailErrorText('');\r\n      }\r\n\r\n      if (userModel.firstName === '') setIsFirstNameMissing(true);\r\n      else setIsFirstNameMissing(false);\r\n\r\n      if (userModel.lastName === '') setIsLastNameMissing(true);\r\n      else setIsLastNameMissing(false);\r\n\r\n      if (imageFileSize > 2)\r\n        setProfileAlertErrorText('Image file size exceeds to 2mb');\r\n      else setProfileAlertErrorText('');\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    if (\r\n      confirmPassword === password.newPassword &&\r\n      passwordStrengthMeter === 4\r\n    ) {\r\n      ProfileService.changePassword(\r\n        AuthService.getUserIdentity().userId,\r\n        password\r\n      )\r\n        .then(() => {\r\n          setPassword({\r\n            oldPassword: '',\r\n            newPassword: '',\r\n          });\r\n          setConfirmPassword('');\r\n          success('Password successfully changed');\r\n          setPasswordAlertErrorText('');\r\n        })\r\n        .catch((error) => {\r\n          setPasswordAlertErrorText(error.response.data.message);\r\n          setPasswordAlertSuccessText('');\r\n        });\r\n    } else if (confirmPassword !== password.newPassword) {\r\n      setPasswordAlertErrorText(\r\n        'New password and Confirm new password does not match'\r\n      );\r\n    } else {\r\n      setPasswordAlertErrorText(\r\n        'Password needs to contain at least 8 characters in length including at least 1 number, 1 special character, 1 uppercase letter and 1 lowercase letter'\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangePassword = () => {\r\n    if (password.newPassword.length === 0) {\r\n      setPasswordStrengthMeter();\r\n    }\r\n    if (password.newPassword.length >= 8) {\r\n      setPasswordStrengthMeter(1);\r\n    }\r\n    if (password.newPassword.length >= 8 && /\\d/.test(password.newPassword)) {\r\n      setPasswordStrengthMeter(2);\r\n    }\r\n    if (\r\n      password.newPassword.length >= 8 &&\r\n      /\\d/.test(password.newPassword) &&\r\n      /[A-Z]/.test(password.newPassword)\r\n    ) {\r\n      setPasswordStrengthMeter(3);\r\n    }\r\n    if (\r\n      password.newPassword.length >= 8 &&\r\n      /\\d/.test(password.newPassword) &&\r\n      /[A-Z]/.test(password.newPassword) &&\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[-!@#$%^&*()_+={}[\\]:;<>,.?~/\\\\`|'\"]).{8,}$/.test(password.newPassword)\r\n    ) {\r\n      setPasswordStrengthMeter(4);\r\n    }\r\n  };\r\n\r\n  const onChangeImage = (file, fileExtension, size) => {\r\n    const extension = fileExtension === 'svg' ? 'svg+xml' : fileExtension;\r\n    setUserModel((prevState) => ({\r\n      ...prevState,\r\n      base64ProfileImage: `data:image/${extension};base64,${\r\n        file.split(',')[1]\r\n      }`,\r\n      fileExtension: fileExtension,\r\n    }));\r\n    setDisplayImage(file);\r\n    setImageFileSize(size / (1024 * 1024).toFixed(2));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <div>\r\n          <b className={styles.headerText}>Profile</b>\r\n        </div>\r\n      </div>\r\n\r\n      <hr style={{ border: '1px inset #B1B1B1', marginBottom: '8px' }} />\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6\" style={{ paddingRight: '5px' }}>\r\n          <div className={styles.profilePanel}>\r\n            <div style={{ width: '100%', position: 'relative' }}>\r\n              <div\r\n                style={{\r\n                  width: '110px',\r\n                  height: '110px',\r\n                  right: '0',\r\n                  left: '0',\r\n                  margin: 'auto',\r\n                  position: 'relative',\r\n                }}\r\n              >\r\n                <ImageUploaderComponent\r\n                  imageSource={displayImage}\r\n                  callbackChangeImage={onChangeImage}\r\n                  styles={styles}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className={styles.inputForm}>\r\n                <div className={styles.inputLabel}>\r\n                  First Name <span>*</span>\r\n                </div>\r\n                <input\r\n                  className={styles.inputField}\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  maxLength=\"50\"\r\n                  autoComplete=\"off\"\r\n                  value={userModel.firstName}\r\n                  onChange={userProfileInputChanged}\r\n                />\r\n              </div>\r\n              {isFirstNameMissing && (\r\n                <span className={styles.alertErrorText}>\r\n                  First name is required\r\n                </span>\r\n              )}\r\n              <div className={styles.inputForm}>\r\n                <div className={styles.inputLabel}>\r\n                  Last Name <span>*</span>\r\n                </div>\r\n                <input\r\n                  className={styles.inputField}\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  maxLength=\"50\"\r\n                  autoComplete=\"off\"\r\n                  value={userModel.lastName}\r\n                  onChange={userProfileInputChanged}\r\n                />\r\n              </div>\r\n              {isLastNameMissing && (\r\n                <span className={styles.alertErrorText}>\r\n                  Last name is required\r\n                </span>\r\n              )}\r\n              <div className={styles.inputForm}>\r\n                <div className={styles.inputLabel}>\r\n                  Email <span>*</span>\r\n                </div>\r\n\r\n                <input\r\n                  className={styles.inputField}\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  maxLength=\"60\"\r\n                  autoComplete=\"off\"\r\n                  value={userModel.email}\r\n                  onChange={userProfileInputChanged}\r\n                />\r\n              </div>\r\n              {isEmailMissing && (\r\n                <span className={styles.alertErrorText}>{emailErrorText}</span>\r\n              )}\r\n              <div className={styles.inputForm}>\r\n                <div className={styles.inputLabel}>Job Title</div>\r\n\r\n                <input\r\n                  className={styles.inputField}\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  maxLength=\"100\"\r\n                  autoComplete=\"off\"\r\n                  value={userModel.jobTitle}\r\n                  onChange={userProfileInputChanged}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles.successAlert}\r\n              style={{ display: successAlert ? 'block' : 'none' }}\r\n            >\r\n              User details successfully updated.\r\n            </div>\r\n            <div\r\n              className={styles.alertErrorText}\r\n              style={{\r\n                display: profileAlertErrorText.length > 0 ? 'block' : 'none',\r\n              }}\r\n            >\r\n              {profileAlertErrorText}\r\n            </div>\r\n            <div className={styles.profilePanelFooter}>\r\n              <button\r\n                className={styles.updateButton}\r\n                onClick={handleUpdateProfile}\r\n                type=\"button\"\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6\" style={{ paddingLeft: '5px' }}>\r\n          <div className={styles.changePasswordPanel}>\r\n            <div>\r\n              <p className={styles.changePasswordPanelTitle}>Password Reset</p>\r\n            </div>\r\n            <div>\r\n              <div className={styles.inputForm}>\r\n                <div className={styles.inputLabel}>Old Password</div>\r\n\r\n                <div className=\"input-group position-relative\">\r\n                  <input\r\n                    className={styles.passwordInputField}\r\n                    type={showPassword.oldPassword}\r\n                    name=\"oldPassword\"\r\n                    value={password.oldPassword}\r\n                    onChange={passwordInputChanged}\r\n                  />\r\n                  <div className={`${styles.eyeIcon} input-group-append`}>\r\n                    {showPassword.oldPassword === 'password' ? (\r\n                      <img\r\n                        style={{ cursor: 'pointer' }}\r\n                        src={eyeIcon}\r\n                        alt=\"EyeIcon\"\r\n                        onClick={() => togglePassword('oldPassword')}\r\n                        onKeyDown={() => togglePassword('oldPassword')}\r\n                        role=\"presentation\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        style={{\r\n                          cursor: 'pointer',\r\n                          height: '12.03px',\r\n                          width: '15.03px',\r\n                        }}\r\n                        src={eyeOnIcon}\r\n                        alt=\"EyeOnIcon\"\r\n                        onClick={() => togglePassword('oldPassword')}\r\n                        onKeyDown={() => togglePassword('oldPassword')}\r\n                        role=\"presentation\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={styles.inputForm}>\r\n                <div className={styles.inputLabel}>New Password</div>\r\n\r\n                <div className=\"input-group position-relative\">\r\n                  <input\r\n                    className={styles.passwordInputField}\r\n                    type={showPassword.newPassword}\r\n                    name=\"newPassword\"\r\n                    value={password.newPassword}\r\n                    onChange={passwordInputChanged}\r\n                  />\r\n                  <div className={`${styles.eyeIcon} input-group-append`}>\r\n                    {showPassword.newPassword === 'password' ? (\r\n                      <img\r\n                        style={{ cursor: 'pointer' }}\r\n                        src={eyeIcon}\r\n                        alt=\"EyeIcon\"\r\n                        onClick={() => togglePassword('newPassword')}\r\n                        onKeyDown={() => togglePassword('newPassword')}\r\n                        role=\"presentation\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        style={{\r\n                          cursor: 'pointer',\r\n                          height: '12.03px',\r\n                          width: '15.03px',\r\n                        }}\r\n                        src={eyeOnIcon}\r\n                        alt=\"EyeOnIcon\"\r\n                        onClick={() => togglePassword('newPassword')}\r\n                        onKeyDown={() => togglePassword('newPassword')}\r\n                        role=\"presentation\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={''}>\r\n                <PasswordStrengthBar\r\n                  className={`${passwordStrengthMeter === 1 &&\r\n                    'password-reset-password-meter-strength-1'} ${passwordStrengthMeter ===\r\n                    2 &&\r\n                    'password-reset-password-meter-strength-2'} ${passwordStrengthMeter ===\r\n                    3 &&\r\n                    'password-reset-password-meter-strength-3'} ${passwordStrengthMeter ===\r\n                    4 && 'password-reset-password-meter-strength-4'}`}\r\n                  password={password.newPassword}\r\n                  barColors={[\r\n                    '#ddd',\r\n                    '#ff5571',\r\n                    '#ffd083',\r\n                    '#2178f1',\r\n                    '#00d583',\r\n                  ]}\r\n                  scoreWords={[]}\r\n                  shortScoreWord=\"\"\r\n                  onChangeScore={onChangePassword}\r\n                />\r\n              </div>\r\n              <div className={styles.inputForm}>\r\n                <div className={styles.inputLabel}>Confirm Password</div>\r\n\r\n                <div className=\"input-group position-relative\">\r\n                  <input\r\n                    className={styles.passwordInputField}\r\n                    type={showPassword.confirmPassword}\r\n                    value={confirmPassword}\r\n                    onChange={confirmPasswordInputChanged}\r\n                  />\r\n                  <div className={`${styles.eyeIcon} input-group-append`}>\r\n                    {showPassword.confirmPassword === 'password' ? (\r\n                      <img\r\n                        style={{ cursor: 'pointer' }}\r\n                        src={eyeIcon}\r\n                        alt=\"EyeIcon\"\r\n                        onClick={() => togglePassword('confirmPassword')}\r\n                        onKeyDown={() => togglePassword('confirmPassword')}\r\n                        role=\"presentation\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        style={{\r\n                          cursor: 'pointer',\r\n                          height: '12.03px',\r\n                          width: '15.03px',\r\n                        }}\r\n                        src={eyeOnIcon}\r\n                        alt=\"EyeOnIcon\"\r\n                        onClick={() => togglePassword('confirmPassword')}\r\n                        onKeyDown={() => togglePassword('confirmPassword')}\r\n                        role=\"presentation\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <span className={styles.alertText}>{passwordAlertErrorText}</span>\r\n              <span className={styles.alertSuccessText}>\r\n                {passwordAlertSuccessText}\r\n              </span>\r\n            </div>\r\n            <div className={styles.changePasswordPanelFooter}>\r\n              <button\r\n                className={styles.resetButton}\r\n                onClick={handleChangePassword}\r\n                disabled={\r\n                  password.oldPassword === '' ||\r\n                  password.newPassword === '' ||\r\n                  confirmPassword === ''\r\n                }\r\n                type=\"button\"\r\n              >\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserProfileComponent;\r\n"],"names":["ImageUploaderComponent","imageSource","callbackChangeImage","styles","uploadNameRef","useRef","className","userPhoto","src","alt","uploadPhotoButton","onClick","current","click","type","style","display","ref","onChange","e","file","fileExtension","target","files","name","split","pop","Promise","resolve","baseURL","reader","FileReader","readAsDataURL","onload","result","getBase64","then","base64","size","catch","err","danger","defaultProps","ProfileService","getUser","id","url","process","axios","updateUser","userId","json","changePassword","setIsProfileUpdated","useState","firstName","lastName","email","jobTitle","base64ProfileImage","roleID","userModel","setUserModel","oldPassword","newPassword","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","defaultAvatar","displayImage","setDisplayImage","imageFileSize","setImageFileSize","passwordStrengthMeter","setPasswordStrengthMeter","successAlert","showSuccessAlert","passwordAlertErrorText","setPasswordAlertErrorText","passwordAlertSuccessText","setPasswordAlertSuccessText","profileAlertErrorText","setProfileAlertErrorText","isFirstNameMissing","setIsFirstNameMissing","isLastNameMissing","setIsLastNameMissing","isEmailMissing","setIsEmailMissing","emailErrorText","setEmailErrorText","togglePassword","prevState","getRole","role","userProfileInputChanged","value","passwordInputChanged","useEffect","AuthService","response","data","roleId","profilePic","organisationID","border","marginBottom","paddingRight","width","position","height","right","left","margin","extension","toFixed","maxLength","autoComplete","length","success","error","message","setTimeout","paddingLeft","cursor","eyeIcon","onKeyDown","eyeOnIcon","barColors","scoreWords","shortScoreWord","onChangeScore","test","disabled"],"sourceRoot":""}
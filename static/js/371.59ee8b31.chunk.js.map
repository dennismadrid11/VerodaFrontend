{"version":3,"file":"static/js/371.59ee8b31.chunk.js","mappings":"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","sources":["assets/icons/X.svg","components/_reusable/tabs/TabHeaderComponent.jsx","components/_reusable/tabs/TabsComponent.jsx","webpack://sky/./src/components/prioritisation/Prioritisation.module.css?b3f8","components/prioritisation/available-programs/AvailableProgramsDataComponent.jsx","components/prioritisation/PrioritisationForms.js","webpack://sky/./src/components/prioritisation/available-programs/table-header/AvailableProgramsTableHeader.module.css?c2fe","webpack://sky/./src/components/prioritisation/available-programs/table-header/filters/starts-with-filter/starts.with.filter.module.css?5027","components/prioritisation/available-programs/table-header/filters/starts-with-filter/starts.with.filter.component.jsx","components/prioritisation/available-programs/table-header/AvailableProgramsHeaderComponent.jsx","components/prioritisation/available-programs/AvailableProgramsComponent.jsx","components/prioritisation/prioritised-programs/PrioritisedProgramsDataComponent.jsx","webpack://sky/./src/components/prioritisation/prioritised-programs/table-header/PrioritisedProgramsTableHeader.module.css?c7d9","components/prioritisation/prioritised-programs/table-header/PrioritisedProgramsHeaderComponent.jsx","components/prioritisation/prioritised-programs/PrioritisedProgramsComponent.jsx","components/prioritisation/title-groups/TitleGroupStorage.js","components/prioritisation/title-groups/available-title-groups/AvailableTitleGroupComponent.jsx","components/prioritisation/title-groups/prioritised-title-groups/PrioritisedTitleGroupComponent.jsx","webpack://sky/./src/components/prioritisation/title-groups/TitleGroups.module.css?d42e","components/prioritisation/title-groups/TitleGroupDetailsComponent.jsx","components/prioritisation/title-groups/TitleGroupComponent.jsx","components/prioritisation/PrioritisationComponent.jsx","components/prioritisation/PrioritisationService.js","components/profile/ProfileService.js","shared/elements/select/select.componentcustom.jsx","webpack://sky/./src/components/_reusable/tabs/Tabs.module.css?0105"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 10,\n    viewBox: \"0 0 10 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.99956 4.0145L8.71206 0.302002L9.77256 1.3625L6.06006 5.075L9.77256 8.7875L8.71206 9.848L4.99956 6.1355L1.28706 9.848L0.226562 8.7875L3.93906 5.075L0.226562 1.3625L1.28706 0.302002L4.99956 4.0145Z\",\n    fill: \"#FF7878\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/X.53f7f619875c0efb29e1092839e822a0.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Tabs.module.css';\r\n\r\nfunction TabHeaderComponent(props) {\r\n  const { activeTab, onClick, label, customClassActiveHeader } = props;\r\n  const [className, setClassName] = useState('');\r\n\r\n  const handleOnClick = (labelName) => {\r\n    onClick(labelName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (activeTab === label) {\r\n      setClassName(\r\n        `${Styles.tabListItem} ${Styles.tabListActive} ${customClassActiveHeader}`\r\n      );\r\n    } else {\r\n      setClassName(Styles.tabListItem);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTab]);\r\n\r\n  return (\r\n    <li\r\n      className={`${className} ${Styles.tabHeader}`}\r\n      onClick={() => {\r\n        handleOnClick(label);\r\n      }}\r\n      onKeyDown={() => {\r\n        handleOnClick(label);\r\n      }}\r\n      role=\"presentation\"\r\n    >\r\n      {label}\r\n    </li>\r\n  );\r\n}\r\nTabHeaderComponent.propTypes = {\r\n  activeTab: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  label: PropTypes.string,\r\n};\r\nTabHeaderComponent.defaultProps = {\r\n  activeTab: null,\r\n  label: null,\r\n};\r\nexport default TabHeaderComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Tabs.module.css';\r\nimport TabHeaderComponent from './TabHeaderComponent';\r\n\r\nfunction TabsComponent(props) {\r\n  const {\r\n    activeTab,\r\n    labelList,\r\n    customClass,\r\n    dirty,\r\n    tabChange,\r\n    setActive,\r\n    onSetSelectedTab,\r\n    customClassActiveHeader,\r\n  } = props;\r\n  const [activeTabComponent, setActiveTab] = useState('');\r\n\r\n  const onClickTabItem = (label) => {\r\n    if (dirty) {\r\n      tabChange(label);\r\n    } else {\r\n      setActive && setActive(label);\r\n      !setActive && setActiveTab(label);\r\n    }\r\n    if (typeof onSetSelectedTab === 'function') onSetSelectedTab(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setActiveTab(activeTab);\r\n    if (typeof onSetSelectedTab === 'function') onSetSelectedTab(activeTab);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTab]);\r\n\r\n  return (\r\n    <div className=\"tabs\">\r\n      <ol className={Styles.tabList}>\r\n        {labelList.map((child) => (\r\n          <TabHeaderComponent\r\n            key={child.id}\r\n            activeTab={activeTabComponent}\r\n            label={child.label}\r\n            onClick={onClickTabItem}\r\n            customClassActiveHeader={customClassActiveHeader}\r\n          />\r\n        ))}\r\n      </ol>\r\n      <div className={`${'tab-content'} ${Styles.tabContent} ${customClass}`}>\r\n        {labelList.map((child) => {\r\n          if (activeTabComponent === child.label) return child.component;\r\n          return undefined;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nTabsComponent.propTypes = {\r\n  activeTab: PropTypes.string,\r\n  labelList: PropTypes.arrayOf(PropTypes.shape),\r\n  height: PropTypes.string,\r\n};\r\nTabsComponent.defaultProps = {\r\n  activeTab: null,\r\n  labelList: null,\r\n  height: null,\r\n};\r\nexport default TabsComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"marginBottom\":\"Prioritisation_marginBottom__qgAKh\",\"channelHeader\":\"Prioritisation_channelHeader__aZm3W\",\"channelLabel\":\"Prioritisation_channelLabel__ipWOS\",\"addButton\":\"Prioritisation_addButton__LaKQa\",\"removeButton\":\"Prioritisation_removeButton__Oz-kH\",\"divButton\":\"Prioritisation_divButton__o57Kp\",\"saveButton\":\"Prioritisation_saveButton__0Z6gq\",\"generateButton\":\"Prioritisation_generateButton__ljJYn\",\"divNoAvailableChannelSelected\":\"Prioritisation_divNoAvailableChannelSelected__s5HO1\",\"divNoAvailableChannelSelectedSmall\":\"Prioritisation_divNoAvailableChannelSelectedSmall__5Gp59\",\"importButton\":\"Prioritisation_importButton__aM9NV\",\"cancelButton\":\"Prioritisation_cancelButton__Z2xdH\",\"successDiv\":\"Prioritisation_successDiv__13idn\",\"successBody\":\"Prioritisation_successBody__oSDlP\",\"trBorder\":\"Prioritisation_trBorder__JbNf5\",\"formCheck\":\"Prioritisation_formCheck__JJ1qV\",\"saveModalButton\":\"Prioritisation_saveModalButton__KbPKD\",\"tableBodyDiv\":\"Prioritisation_tableBodyDiv__zOMs7\",\"tableBodyDivSmall\":\"Prioritisation_tableBodyDivSmall__OH5ze\",\"prioritizeTableBodyDiv\":\"Prioritisation_prioritizeTableBodyDiv__F-DJj\",\"prioritizeTableBodyDivSmall\":\"Prioritisation_prioritizeTableBodyDivSmall__IY7RW\",\"divButtons\":\"Prioritisation_divButtons__kBwKo\",\"searchWrapper\":\"Prioritisation_searchWrapper__J+mBh\",\"search\":\"Prioritisation_search__7DFb0\",\"timesIcon\":\"Prioritisation_timesIcon__B9Ov4\",\"searchIcon\":\"Prioritisation_searchIcon__9Pvhf\",\"timesIconWrapper\":\"Prioritisation_timesIconWrapper__H9bOc\",\"searchIconWrapper\":\"Prioritisation_searchIconWrapper__IEzFV\",\"tableLabel\":\"Prioritisation_tableLabel__xZj5X\",\"isHighlighted\":\"Prioritisation_isHighlighted__S2rpC\"};","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eyeIcon from '../../../assets/icons/Prioritisation-eye.svg';\r\nimport eyeIconSelected from '../../../assets/icons/Prioritisation-selectedeye.svg';\r\nimport eyeOffIcon from '../../../assets/icons/Eye.png';\r\nimport Styles from '../Prioritisation.module.css';\r\nimport BootstrapSpinner from '../../../shared/components/bootstrap-spinner/BootstrapSpinner';\r\n\r\nconst AvailableProgramsDataComponent = forwardRef(\r\n  (\r\n    {\r\n      programs,\r\n      callbackSelectPrograms,\r\n      callbackViewProgram,\r\n      isLoading,\r\n      selectedPrograms,\r\n      callbackViewSegment,\r\n      tableMinimize,\r\n      titleSource,\r\n      viewedProgram,\r\n    },\r\n    ref\r\n  ) => {\r\n    const eyeRef = useRef();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        setTimeout(() => {\r\n          eyeRef.current?.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n          });\r\n        }, 500);\r\n      },\r\n    }));\r\n\r\n    const selectRow = (data) => {\r\n      let filteredArray = [];\r\n      if (selectedPrograms.includes(data.id)) {\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.id);\r\n        // setSelectedPrograms(filteredArray);\r\n        callbackSelectPrograms(filteredArray);\r\n      } else {\r\n        filteredArray = selectedPrograms;\r\n        filteredArray.push(data.id);\r\n        //  setSelectedPrograms(filteredArray);\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.id);\r\n        // setSelectedPrograms(filteredArray);\r\n        filteredArray.push(data.id);\r\n        //  setSelectedPrograms(filteredArray);\r\n        callbackSelectPrograms(filteredArray);\r\n      }\r\n    };\r\n\r\n    const viewRow = (data) => {\r\n      callbackViewProgram(data.target.name);\r\n    };\r\n\r\n    const viewSegmentRow = (data) => {\r\n      callbackViewSegment(data.target.name);\r\n    };\r\n\r\n    // const getGenre = (data) => {\r\n    //   const genreList = [];\r\n    //   data.genres.map((genreData) => {\r\n    //     genreList.push(genreData.genreName);\r\n    //     return true;\r\n    //   });\r\n    //   // genreText = genreList.join(', ');\r\n    // };\r\n\r\n    const eyeIconSource = (data) => {\r\n      if (viewedProgram && parseInt(viewedProgram, 10) === data.id)\r\n        return eyeOffIcon;\r\n      if (selectedPrograms.includes(data.id)) return eyeIconSelected;\r\n      return eyeIcon;\r\n    };\r\n\r\n    const filterStyle = (data) => {\r\n      if (selectedPrograms.includes(data.id))\r\n        return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      if (\r\n        parseInt(viewedProgram, 10) === data.id &&\r\n        selectedPrograms.includes(data.id)\r\n      )\r\n        return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      return 'brightness(0) saturate(100%) invert(23%) sepia(67%) saturate(6736%) hue-rotate(162deg) brightness(100%) contrast(101%)';\r\n    };\r\n\r\n    const noProgramsData = () => {\r\n      if (isLoading) {\r\n        return (\r\n          <div\r\n            className={`${\r\n              !tableMinimize ? Styles.tableBodyDiv : Styles.tableBodyDivSmall\r\n            }`}\r\n            style={{ backgroundColor: 'transparent' }}\r\n          >\r\n            <BootstrapSpinner />\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <tr\r\n          className={`${\r\n            !tableMinimize ? Styles.tableBodyDiv : Styles.tableBodyDivSmall\r\n          }`}\r\n        >\r\n          <td\r\n            colSpan=\"7\"\r\n            style={{\r\n              fontSize: '24px',\r\n              fontWeight: '300',\r\n              color: '#008662',\r\n              textAlign: 'center',\r\n              backgroundColor: 'transparent',\r\n            }}\r\n          >\r\n            No Programme Titles Found\r\n          </td>\r\n        </tr>\r\n      );\r\n    };\r\n\r\n    const getColumns = (data) => (\r\n      <tr\r\n        className={`\r\n          ${\r\n            selectedPrograms.includes(data.id)\r\n              ? 'table-body-row-active'\r\n              : 'table-body-row'\r\n          }\r\n          ${data.overrode && Styles.isHighlighted}\r\n        `}\r\n      >\r\n        <td\r\n          className=\"table-body-column\"\r\n          style={{ textIndent: '25px' }}\r\n          onClick={() => selectRow(data)}\r\n          onKeyDown={() => selectRow(data)}\r\n          role=\"presentation\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"top\"\r\n          title={data.title}\r\n        >\r\n          {data.title}\r\n        </td>\r\n        {titleSource === 1 && (\r\n          <td\r\n            className=\"table-body-column\"\r\n            style={{ textIndent: '30px' }}\r\n            onClick={() => selectRow(data)}\r\n            onKeyDown={() => selectRow(data)}\r\n            role=\"presentation\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title={data.genreString}\r\n          >\r\n            {data.genreString}\r\n          </td>\r\n        )}\r\n        <td\r\n          className=\"table-body-column\"\r\n          style={{\r\n            textIndent: titleSource === 2 ? '25px' : '33px',\r\n          }}\r\n          onClick={() => selectRow(data)}\r\n          onKeyDown={() => selectRow(data)}\r\n          role=\"presentation\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"top\"\r\n          title={data.duration}\r\n        >\r\n          {data.duration}\r\n        </td>\r\n        {titleSource === 1 && (\r\n          <td\r\n            className=\"table-body-column\"\r\n            onClick={() => selectRow(data)}\r\n            onKeyDown={() => selectRow(data)}\r\n            role=\"presentation\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            style={{ textIndent: '35px' }}\r\n            title={data.grade}\r\n          >\r\n            {data.grade}\r\n          </td>\r\n        )}\r\n        {titleSource === 1 && (\r\n          <td\r\n            className=\"table-body-column\"\r\n            onClick={() => selectRow(data)}\r\n            onKeyDown={() => selectRow(data)}\r\n            role=\"presentation\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            style={{ textIndent: '35px' }}\r\n            title={data.certificate}\r\n          >\r\n            {data.certificate}\r\n          </td>\r\n        )}\r\n        {titleSource === 1 && (\r\n          <td\r\n            className=\"table-body-column\"\r\n            style={{ textIndent: '40px' }}\r\n            onClick={() => selectRow(data)}\r\n            onKeyDown={() => selectRow(data)}\r\n            role=\"presentation\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title={data.year}\r\n          >\r\n            {data.year}\r\n          </td>\r\n        )}\r\n        {titleSource === 1 && (\r\n          <td className=\"table-body-column\" style={{ width: '30px' }}>\r\n            <img\r\n              ref={\r\n                viewedProgram && parseInt(viewedProgram, 10) === data.id\r\n                  ? eyeRef\r\n                  : null\r\n              }\r\n              name={data.id}\r\n              style={{\r\n                cursor: 'pointer',\r\n                marginLeft: '-20px',\r\n                filter: filterStyle(data),\r\n              }}\r\n              src={eyeIconSource(data)}\r\n              alt=\"EyeIcon\"\r\n              onClick={viewRow}\r\n              onKeyDown={viewRow}\r\n              role=\"presentation\"\r\n            />\r\n          </td>\r\n        )}\r\n        {titleSource === 2 && (\r\n          <td className=\"table-body-column\" style={{ width: '130px', }}>\r\n            <img\r\n              ref={\r\n                viewedProgram && parseInt(viewedProgram, 10) === data.id\r\n                  ? eyeRef\r\n                  : null\r\n              }\r\n              name={data.id}\r\n              style={{\r\n                cursor: 'pointer',\r\n                filter: filterStyle(data),\r\n              }}\r\n              src={eyeIconSource(data)}\r\n              alt=\"EyeIcon\"\r\n              onClick={viewRow}\r\n              onKeyDown={viewRow}\r\n              role=\"presentation\"\r\n            />\r\n          </td>\r\n        )}\r\n      </tr>\r\n    );\r\n\r\n    const availablePrograms = () => {\r\n      if (isLoading) {\r\n        return (\r\n          <div\r\n            className={`${\r\n              !tableMinimize ? Styles.tableBodyDiv : Styles.tableBodyDivSmall\r\n            }`}\r\n            style={{ backgroundColor: 'transparent' }}\r\n          >\r\n            <BootstrapSpinner />\r\n          </div>\r\n        );\r\n      }\r\n      return <>{programs.map((data) => getColumns(data))}</>;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {programs.length === 0 ? noProgramsData() : availablePrograms()}\r\n        {/* {programs.length > 0 && availablePrograms()} */}\r\n      </>\r\n    );\r\n  }\r\n);\r\nAvailableProgramsDataComponent.propTypes = {\r\n  programs: PropTypes.arrayOf(PropTypes.shape),\r\n  callbackSelectPrograms: PropTypes.func.isRequired,\r\n  callbackViewProgram: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool,\r\n  selectedPrograms: PropTypes.arrayOf(PropTypes.number),\r\n  callbackViewSegment: PropTypes.func.isRequired,\r\n  tableMinimize: PropTypes.bool,\r\n  titleSource: PropTypes.number.isRequired,\r\n  viewedProgram: PropTypes.number,\r\n};\r\nAvailableProgramsDataComponent.defaultProps = {\r\n  programs: null,\r\n  isLoading: false,\r\n  selectedPrograms: null,\r\n  tableMinimize: false,\r\n  viewedProgram: null,\r\n};\r\nAvailableProgramsDataComponent.displayName = 'AvailableProgramsDataComponent';\r\nexport default AvailableProgramsDataComponent;\r\n","const PrioritisationForms = {\r\n  channelOptions: ['Sky Channel 1', 'Sky Channel 2', 'Sky Channel 3'],\r\n\r\n  availableProgramsHeader: [\r\n    'Title Name',\r\n    'Genre',\r\n    'Duration',\r\n    'Grade',\r\n    'Certificate',\r\n    'Year',\r\n    '',\r\n  ],\r\n\r\n  months: [\r\n    {\r\n      id: 1,\r\n      value: 'January',\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'February',\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'March',\r\n    },\r\n    {\r\n      id: 4,\r\n      value: 'April',\r\n    },\r\n    {\r\n      id: 5,\r\n      value: 'May',\r\n    },\r\n    {\r\n      id: 6,\r\n      value: 'June',\r\n    },\r\n    {\r\n      id: 7,\r\n      value: 'July',\r\n    },\r\n    {\r\n      id: 8,\r\n      value: 'August',\r\n    },\r\n    {\r\n      id: 9,\r\n      value: 'September',\r\n    },\r\n    {\r\n      id: 10,\r\n      value: 'October',\r\n    },\r\n    {\r\n      id: 11,\r\n      value: 'November',\r\n    },\r\n    {\r\n      id: 12,\r\n      value: 'December',\r\n    },\r\n  ],\r\n\r\n  year() {\r\n    const yearlist = [];\r\n    const start = 2022;\r\n\r\n    for (let i = start; i <= start + 10; i += 1) {\r\n      yearlist.push({ id: i, name: i });\r\n    }\r\n\r\n    return yearlist;\r\n  },\r\n\r\n  prioritisedProgramsHeader: ['Title Name'],\r\n};\r\n\r\nexport default PrioritisationForms;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"columns\":\"AvailableProgramsTableHeader_columns__US0zw\",\"filterIcons\":\"AvailableProgramsTableHeader_filterIcons__l9gZH\",\"clearFilterIcons\":\"AvailableProgramsTableHeader_clearFilterIcons__YY+oh\",\"dropdownFilter\":\"AvailableProgramsTableHeader_dropdownFilter__a+56S\",\"dropdownDateCreated\":\"AvailableProgramsTableHeader_dropdownDateCreated__6y0ui\"};","// extracted by mini-css-extract-plugin\nexport default {\"startsWithButton\":\"starts_with_filter_startsWithButton__YQorL\",\"startsWithInput\":\"starts_with_filter_startsWithInput__iY1mZ\",\"clearFilterButton\":\"starts_with_filter_clearFilterButton__N9ajd\",\"filterButton\":\"starts_with_filter_filterButton__ZoFa2\",\"options\":\"starts_with_filter_options__BJxmB\",\"optionItem\":\"starts_with_filter_optionItem__akkzZ\"};","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './starts.with.filter.module.css';\r\n\r\nconst { forwardRef, useImperativeHandle } = React;\r\nconst StartsWithFilterComponent = forwardRef((props, ref) => {\r\n  const options = [\r\n    {\r\n      optionId: 1,\r\n      optionText: 'Starts With',\r\n    },\r\n    {\r\n      optionId: 2,\r\n      optionText: 'Ends With',\r\n    },\r\n    {\r\n      optionId: 3,\r\n      optionText: 'Contains',\r\n    },\r\n    {\r\n      optionId: 4,\r\n      optionText: 'Equal',\r\n    },\r\n    {\r\n      optionId: 5,\r\n      optionText: 'Not Equal',\r\n    },\r\n  ];\r\n  const [selectedOption, setSelectedOption] = useState(options[0]);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [startsWithInput, setStartsWithInput] = useState('');\r\n  const [disableFilterButton, setDisableFilterButton] = useState(true);\r\n  const startsWithFilterRef = useRef();\r\n\r\n  const backdropClicked = (e) => {\r\n    if (!startsWithFilterRef.current.contains(e.target)) {\r\n      props.backdropClicked(props.component);\r\n      setShowOptions(false);\r\n    }\r\n  };\r\n\r\n  const toggleOptions = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  const selectOption = (option) => {\r\n    setSelectedOption(option);\r\n    setShowOptions(false);\r\n    if (startsWithInput !== '') {\r\n      setDisableFilterButton(false);\r\n    }\r\n  };\r\n\r\n  const bindInput = (e) => {\r\n    setDisableFilterButton(false);\r\n\r\n    setStartsWithInput(e.target.value);\r\n    if (selectedOption.optionId === options[0].optionId) {\r\n      selectOption(options[0]);\r\n    }\r\n  };\r\n\r\n  const changeToDefaultForm = () => {\r\n    setSelectedOption(options[0]);\r\n    setStartsWithInput('');\r\n    setDisableFilterButton(true);\r\n  };\r\n\r\n  const setTemporaryFilterModel = (action) => {\r\n    const model = JSON.parse(JSON.stringify(props.filterModel));\r\n    if (action === 'Filter') {\r\n      if (props.component === 'Title Name') {\r\n        model.titleFilter = selectedOption.optionId;\r\n        model.titleFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Genre') {\r\n        model.genreFilter = selectedOption.optionId;\r\n        model.genreFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Duration') {\r\n        model.durationFilter = selectedOption.optionId;\r\n        model.durationFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Grade') {\r\n        model.gradeFilter = selectedOption.optionId;\r\n        model.gradeFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Year') {\r\n        model.yearFilter = selectedOption.optionId;\r\n        model.yearFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Certificate') {\r\n        model.certificateFilter = selectedOption.optionId;\r\n        model.certificateFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n    } else {\r\n      if (props.component === 'Title Name') {\r\n        model.titleFilter = undefined;\r\n        model.titleFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Genre') {\r\n        model.genreFilter = undefined;\r\n        model.genreFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Duration') {\r\n        model.durationFilter = undefined;\r\n        model.durationFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Grade') {\r\n        model.gradeFilter = undefined;\r\n        model.gradeFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Year') {\r\n        model.yearFilter = undefined;\r\n        model.yearFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Certificate') {\r\n        model.certificateFilter = undefined;\r\n        model.certificateFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n    }\r\n\r\n    return model;\r\n  };\r\n\r\n  const onClickedButtonFilter = () => {\r\n    props.onClickedButtonFilter(setTemporaryFilterModel('Filter'));\r\n    props.toggleDropdown(null);\r\n    setDisableFilterButton(true);\r\n  };\r\n\r\n  const onClickedButtonClearFilter = () => {\r\n    changeToDefaultForm();\r\n    props.onClickedButtonFilter(setTemporaryFilterModel('Clear'));\r\n    props.toggleDropdown(null);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    clearFilterModel() {\r\n      changeToDefaultForm();\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-3\" ref={startsWithFilterRef}>\r\n      <div />\r\n      <div className=\"position-relative\">\r\n        <button\r\n          className={styles.startsWithButton}\r\n          onClick={toggleOptions}\r\n          type=\"button\"\r\n        >\r\n          {selectedOption.optionText}\r\n        </button>\r\n        <div\r\n          className={styles.options}\r\n          style={{\r\n            display: showOptions ? null : 'none',\r\n            marginBottom: `-${25 * options.length}px`,\r\n            height: '127px',\r\n          }}\r\n        >\r\n          {options.map((value) => (\r\n            <div\r\n              className={styles.optionItem}\r\n              key={value.id}\r\n              onClick={() => selectOption(value)}\r\n              onKeyDown={() => selectOption(value)}\r\n              role=\"presentation\"\r\n            >\r\n              <span>{value.optionText}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <input\r\n        className={styles.startsWithInput}\r\n        type=\"text\"\r\n        value={startsWithInput}\r\n        placeholder=\"Enter the value\"\r\n        onChange={bindInput}\r\n      />\r\n      <hr style={{ backgroundColor: '#6d6d73' }} />\r\n      <div className=\"d-flex\">\r\n        <p\r\n          className={styles.clearFilterButton}\r\n          onClick={onClickedButtonClearFilter}\r\n          onKeyDown={onClickedButtonClearFilter}\r\n          role=\"presentation\"\r\n        >\r\n          Clear\r\n        </p>\r\n        <button\r\n          className={styles.filterButton}\r\n          onClick={onClickedButtonFilter}\r\n          disabled={disableFilterButton}\r\n          type=\"button\"\r\n        >\r\n          Filter\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nStartsWithFilterComponent.propTypes = {\r\n  backdropClicked: PropTypes.func.isRequired,\r\n  component: PropTypes.string,\r\n  onClickedButtonFilter: PropTypes.func.isRequired,\r\n  toggleDropdown: PropTypes.func.isRequired,\r\n  filterModel: PropTypes.shape.isRequired,\r\n};\r\nStartsWithFilterComponent.defaultProps = {\r\n  component: '',\r\n};\r\nStartsWithFilterComponent.displayName = 'StartsWithFilterComponent';\r\nexport default StartsWithFilterComponent;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './AvailableProgramsTableHeader.module.css';\r\nimport filterIcon from '../../../../assets/icons/Filter.png';\r\nimport filteredIcon from '../../../../assets/icons/Filtered.png';\r\nimport arrowUpIcon from '../../../../assets/icons/Arrow-Up.png';\r\nimport clearFilterIcon from '../../../../assets/icons/Clear-Filter.svg';\r\n\r\nimport PrioritisationForms from '../../PrioritisationForms';\r\n\r\nimport StartsWithFilterComponent from './filters/starts-with-filter/starts.with.filter.component';\r\n\r\nfunction AvailableProgramsHeaderComponent(props) {\r\n  const {\r\n    filterModel,\r\n    onClickedButtonFilter,\r\n    sortBy,\r\n    handleSetSortBy,\r\n    onClickedButtonClearAllFilters,\r\n    titleSource,\r\n    onClickedButtonClearFilter,\r\n  } = props;\r\n  const tableHeaders = PrioritisationForms.availableProgramsHeader;\r\n  const [showTitleNameFilter, setShowTitleNameFilter] = useState(false);\r\n  const [showGenreFilter, setShowGenreFilter] = useState(false);\r\n  const [showDurationFilter, setShowDurationFilter] = useState(false);\r\n  const [showGradeFilter, setShowGradeFilter] = useState(false);\r\n  const [showYearFilter, setShowYearFilter] = useState(false);\r\n  const [showCertificateFilter, setShowCertificateFilter] = useState(false);\r\n\r\n  const [showClearFilterIcon, setShowClearAllFilterIcon] = useState(false);\r\n  const titleNameFilterRef = useRef();\r\n  const genreFilterRef = useRef();\r\n  const durationFilterRef = useRef();\r\n  const gradeFilterRef = useRef();\r\n  const yearFilterRef = useRef();\r\n  const certificateFilterRef = useRef();\r\n\r\n  const toggleDropdown = (header) => {\r\n    if (header === tableHeaders[0]) {\r\n      setShowTitleNameFilter(!showTitleNameFilter);\r\n    } else {\r\n      setShowTitleNameFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[1]) {\r\n      setShowGenreFilter(!showGenreFilter);\r\n    } else {\r\n      setShowGenreFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[2]) {\r\n      setShowDurationFilter(!showDurationFilter);\r\n    } else {\r\n      setShowDurationFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[3]) {\r\n      setShowGradeFilter(!showGradeFilter);\r\n    } else {\r\n      setShowGradeFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[4]) {\r\n      setShowCertificateFilter(!showCertificateFilter);\r\n    } else {\r\n      setShowCertificateFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[5]) {\r\n      setShowYearFilter(!showYearFilter);\r\n    } else {\r\n      setShowYearFilter(false);\r\n    }\r\n  };\r\n\r\n  const backdropClicked = (header) => {\r\n    switch (header) {\r\n      case tableHeaders[0]:\r\n        setShowTitleNameFilter(false);\r\n        break;\r\n      case tableHeaders[1]:\r\n        setShowGenreFilter(false);\r\n        break;\r\n      case tableHeaders[2]:\r\n        setShowDurationFilter(false);\r\n        break;\r\n      case tableHeaders[3]:\r\n        setShowGradeFilter(false);\r\n        break;\r\n      case tableHeaders[4]:\r\n        setShowCertificateFilter(false);\r\n        break;\r\n      case tableHeaders[5]:\r\n        setShowYearFilter(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onClickedButtonFilterHeader = (model) => {\r\n    onClickedButtonFilter(model);\r\n  };\r\n\r\n  const handleSort = (id) => {\r\n    const model = JSON.parse(JSON.stringify(filterModel));\r\n\r\n    model.userSort = id;\r\n    model.sortBy = sortBy[id].state ? 2 : 1;\r\n\r\n    onClickedButtonFilterHeader(model);\r\n    handleSetSortBy(id);\r\n  };\r\n\r\n  const onClickedButtonClearAllFiltersHeader = () => {\r\n    titleNameFilterRef.current.clearFilterModel();\r\n    genreFilterRef.current.clearFilterModel();\r\n    durationFilterRef.current.clearFilterModel();\r\n    gradeFilterRef.current.clearFilterModel();\r\n    certificateFilterRef.current.clearFilterModel();\r\n    yearFilterRef.current.clearFilterModel();\r\n\r\n    onClickedButtonClearAllFilters();\r\n  };\r\n\r\n  const handleClearFilterIcon = () => {\r\n    setShowClearAllFilterIcon(\r\n      (\r\n        filterModel.titleFilter\r\n        || filterModel.titleFilterValue\r\n        || filterModel.genreFilter\r\n        || filterModel.genreFilterValue\r\n        // props.filterModel.durationFilter ||\r\n        // props.filterModel.durationFilterValue ||\r\n        || filterModel.gradeFilter\r\n        || filterModel.gradeFilterValue\r\n        || filterModel.certificateFilter\r\n        || filterModel.certificateFilterValue\r\n        || filterModel.yearFilter\r\n        || filterModel.yearFilterValue\r\n      ),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClearFilterIcon();\r\n    // eslint-disable-next-line\r\n  }, [filterModel]);\r\n\r\n  return (\r\n    <tr>\r\n      <td className={styles.columns}>\r\n        <span\r\n          onClick={() => handleSort(1)}\r\n          onKeyDown={() => handleSort(1)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[0]}\r\n        </span>\r\n        {' '}\r\n        <img\r\n          className={`${styles.filterIcons} mx-2`}\r\n          src={\r\n            filterModel.titleFilter && filterModel.titleFilterValue\r\n              ? filteredIcon\r\n              : filterIcon\r\n          }\r\n          alt=\"FilterIcon1\"\r\n          onClick={() => toggleDropdown(`${tableHeaders[0]}`)}\r\n          onKeyDown={() => toggleDropdown(`${tableHeaders[0]}`)}\r\n          role=\"presentation\"\r\n        />\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showTitleNameFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={titleNameFilterRef}\r\n            component={tableHeaders[0]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterHeader}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[0]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon1\"\r\n          style={{\r\n            display:\r\n              filterModel.userSort === 1 || filterModel.userSort === undefined\r\n                ? null\r\n                : 'none',\r\n            transform: sortBy[1].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n      {titleSource === 1 && (\r\n        <td className={styles.columns}>\r\n          <span\r\n            onClick={() => handleSort(2)}\r\n            onKeyDown={() => handleSort(2)}\r\n            role=\"presentation\"\r\n          >\r\n            {tableHeaders[1]}\r\n          </span>\r\n          {' '}\r\n          <img\r\n            className={`${styles.filterIcons} mx-2`}\r\n            src={\r\n              filterModel.genreFilter && filterModel.genreFilterValue\r\n                ? filteredIcon\r\n                : filterIcon\r\n            }\r\n            alt=\"FilterIcon2\"\r\n            onClick={() => toggleDropdown(`${tableHeaders[1]}`)}\r\n            onKeyDown={() => toggleDropdown(`${tableHeaders[1]}`)}\r\n            role=\"presentation\"\r\n          />\r\n          <div\r\n            className={styles.dropdownFilter}\r\n            style={{ display: showGenreFilter ? null : 'none' }}\r\n          >\r\n            <StartsWithFilterComponent\r\n              ref={genreFilterRef}\r\n              component={tableHeaders[1]}\r\n              filterModel={filterModel}\r\n              onClickedButtonFilter={onClickedButtonFilterHeader}\r\n              onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[1]}`)}\r\n              toggleDropdown={toggleDropdown}\r\n              backdropClicked={backdropClicked}\r\n            />\r\n          </div>\r\n          <img\r\n            src={arrowUpIcon}\r\n            alt=\"ArrowUpIcon2\"\r\n            style={{\r\n              display: filterModel.userSort === 2 ? null : 'none',\r\n              transform: sortBy[2].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n            }}\r\n          />\r\n        </td>\r\n      )}\r\n      <td className={styles.columns}>\r\n        <span\r\n          onClick={() => handleSort(3)}\r\n          onKeyDown={() => handleSort(3)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[2]}\r\n        </span>\r\n        {' '}\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showDurationFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={durationFilterRef}\r\n            component={tableHeaders[2]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterHeader}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[2]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon3\"\r\n          style={{\r\n            display: filterModel.userSort === 3 ? null : 'none',\r\n            transform: sortBy[3].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n      {titleSource === 1 && (\r\n        <td className={styles.columns}>\r\n          <span\r\n            onClick={() => handleSort(4)}\r\n            onKeyDown={() => handleSort(4)}\r\n            role=\"presentation\"\r\n          >\r\n            {tableHeaders[3]}\r\n          </span>\r\n          {' '}\r\n          <img\r\n            className={`${styles.filterIcons} mx-2`}\r\n            src={\r\n              filterModel.gradeFilter && filterModel.gradeFilterValue\r\n                ? filteredIcon\r\n                : filterIcon\r\n            }\r\n            alt=\"FilterIcon3\"\r\n            onClick={() => toggleDropdown(`${tableHeaders[3]}`)}\r\n            onKeyDown={() => toggleDropdown(`${tableHeaders[3]}`)}\r\n            role=\"presentation\"\r\n          />\r\n          <div\r\n            className={styles.dropdownFilter}\r\n            style={{ display: showGradeFilter ? null : 'none' }}\r\n          >\r\n            <StartsWithFilterComponent\r\n              ref={gradeFilterRef}\r\n              component={tableHeaders[3]}\r\n              filterModel={filterModel}\r\n              onClickedButtonFilter={onClickedButtonFilterHeader}\r\n              onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[3]}`)}\r\n              toggleDropdown={toggleDropdown}\r\n              backdropClicked={backdropClicked}\r\n            />\r\n          </div>\r\n          <img\r\n            src={arrowUpIcon}\r\n            alt=\"ArrowUpIcon4\"\r\n            style={{\r\n              display: filterModel.userSort === 4 ? null : 'none',\r\n              transform: sortBy[4].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n            }}\r\n          />\r\n        </td>\r\n      )}\r\n      {titleSource === 1 && (\r\n        <td className={styles.columns}>\r\n          <span\r\n            onClick={() => handleSort(5)}\r\n            onKeyDown={() => handleSort(5)}\r\n            role=\"presentation\"\r\n          >\r\n            {tableHeaders[4]}\r\n          </span>\r\n          {' '}\r\n          <img\r\n            className={`${styles.filterIcons} mx-1`}\r\n            src={\r\n              filterModel.certificateFilter\r\n              && filterModel.certificateFilterValue\r\n                ? filteredIcon\r\n                : filterIcon\r\n            }\r\n            alt=\"FilterIcon5\"\r\n            onClick={() => toggleDropdown(`${tableHeaders[4]}`)}\r\n            onKeyDown={() => toggleDropdown(`${tableHeaders[4]}`)}\r\n            role=\"presentation\"\r\n            backdropClicked={backdropClicked}\r\n          />\r\n          <div\r\n            className={styles.dropdownFilter}\r\n            style={{ display: showCertificateFilter ? null : 'none' }}\r\n          >\r\n            <StartsWithFilterComponent\r\n              ref={certificateFilterRef}\r\n              component={tableHeaders[4]}\r\n              filterModel={filterModel}\r\n              onClickedButtonFilter={onClickedButtonFilterHeader}\r\n              onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[4]}`)}\r\n              toggleDropdown={toggleDropdown}\r\n              backdropClicked={backdropClicked}\r\n            />\r\n          </div>\r\n          <img\r\n            src={arrowUpIcon}\r\n            alt=\"ArrowUpIcon5\"\r\n            style={{\r\n              display: filterModel.userSort === 5 ? null : 'none',\r\n              transform: sortBy[5].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n            }}\r\n          />\r\n        </td>\r\n      )}\r\n\r\n      {titleSource === 1 && (\r\n        <td className={styles.columns}>\r\n          <span\r\n            onClick={() => handleSort(6)}\r\n            onKeyDown={() => handleSort(6)}\r\n            role=\"presentation\"\r\n          >\r\n            {tableHeaders[5]}\r\n          </span>\r\n          {' '}\r\n          <img\r\n            className={`${styles.filterIcons} mx-1`}\r\n            src={\r\n              filterModel.yearFilter && filterModel.yearFilterValue\r\n                ? filteredIcon\r\n                : filterIcon\r\n            }\r\n            alt=\"FilterIcon6\"\r\n            onClick={() => toggleDropdown(`${tableHeaders[5]}`)}\r\n            onKeyDown={() => toggleDropdown(`${tableHeaders[5]}`)}\r\n            role=\"presentation\"\r\n            backdropClicked={backdropClicked}\r\n          />\r\n          <div\r\n            className={styles.dropdownFilter}\r\n            style={{ display: showYearFilter ? null : 'none' }}\r\n          >\r\n            <StartsWithFilterComponent\r\n              ref={yearFilterRef}\r\n              component={tableHeaders[5]}\r\n              filterModel={filterModel}\r\n              onClickedButtonFilter={onClickedButtonFilter}\r\n              onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[5]}`)}\r\n              toggleDropdown={toggleDropdown}\r\n              backdropClicked={backdropClicked}\r\n            />\r\n          </div>\r\n          <img\r\n            src={arrowUpIcon}\r\n            alt=\"ArrowUpIcon6\"\r\n            style={{\r\n              display: filterModel.userSort === 6 ? null : 'none',\r\n              transform: sortBy[6].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n            }}\r\n          />\r\n          <img\r\n            className={`${styles.clearFilterIcons}`}\r\n            style={{ display: showClearFilterIcon ? null : 'none' }}\r\n            src={clearFilterIcon}\r\n            alt=\"ClearFilterIcon\"\r\n            onClick={onClickedButtonClearAllFiltersHeader}\r\n            onKeyDown={onClickedButtonClearAllFiltersHeader}\r\n            role=\"presentation\"\r\n          />\r\n        </td>\r\n      )}\r\n      <td\r\n        className={styles.columns}\r\n        style={{ width: titleSource === 2 ? '135px' : '30px' }}\r\n      >\r\n        {titleSource === 2 && 'Segments'}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nAvailableProgramsHeaderComponent.propTypes = {\r\n  filterModel: PropTypes.shape.isRequired,\r\n  onClickedButtonFilter: PropTypes.func.isRequired,\r\n  sortBy: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  handleSetSortBy: PropTypes.func.isRequired,\r\n  onClickedButtonClearAllFilters: PropTypes.func.isRequired,\r\n  titleSource: PropTypes.number.isRequired,\r\n  onClickedButtonClearFilter: PropTypes.func.isRequired,\r\n};\r\nexport default AvailableProgramsHeaderComponent;\r\n","import React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useState,\r\n  useRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableComponent from '../../_reusable/table/TableComponent';\r\nimport AvailableProgramsDataComponent from './AvailableProgramsDataComponent';\r\nimport PrioritisationForms from '../PrioritisationForms';\r\nimport Styles from '../Prioritisation.module.css';\r\nimport AvailableProgramsHeaderComponent from './table-header/AvailableProgramsHeaderComponent';\r\n\r\nconst AvailableProgramsComponent = forwardRef(\r\n  (\r\n    {\r\n      programs,\r\n      callbackViewProgram,\r\n      handleSelectProgram,\r\n      isLoading,\r\n      availablePaginationParameters,\r\n      paginate,\r\n      selectedPrograms,\r\n      setFilterModel,\r\n      filterModel,\r\n      // selectedChannel,\r\n      callbackViewSegment,\r\n      tableMinimize,\r\n      titleSource,\r\n      viewedProgram,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const dataComponentRef = useRef();\r\n    const tableHeaderColumns = PrioritisationForms.tableHeaders;\r\n    const [sortInfo, setSortInfo] = useState({});\r\n    const [sortBy, setSortBy] = useState([\r\n      {},\r\n      {\r\n        state: true,\r\n      },\r\n      {\r\n        state: false,\r\n      },\r\n      {\r\n        state: false,\r\n      },\r\n      {\r\n        state: false,\r\n      },\r\n      {\r\n        state: false,\r\n      },\r\n      {\r\n        state: false,\r\n      },\r\n    ]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        dataComponentRef.current.scrollToProgram();\r\n      },\r\n    }));\r\n\r\n    const handleSetSortBy = (id) => {\r\n      const newArr = sortBy;\r\n      if (newArr[id].state === true) {\r\n        newArr[id].state = false;\r\n      } else {\r\n        newArr[id].state = true;\r\n      }\r\n\r\n      setSortBy(newArr);\r\n      setSortInfo({\r\n        userSort: id,\r\n        sortBy: newArr[id].state ? 1 : 2,\r\n      });\r\n    };\r\n\r\n    const onClickedButtonFilter = (model) => {\r\n      setFilterModel(model);\r\n    };\r\n\r\n    const onClickedButtonClearAllFilters = () => {\r\n      setFilterModel({\r\n        userSort: sortInfo.userSort,\r\n        sortBy: sortInfo.sortBy,\r\n        useCache: true,\r\n      });\r\n    };\r\n\r\n    const handleSort = () => {};\r\n\r\n    return (\r\n      <div>\r\n        <TableComponent\r\n          component={(\r\n            <AvailableProgramsDataComponent\r\n              ref={dataComponentRef}\r\n              programs={programs}\r\n              callbackSelectPrograms={handleSelectProgram}\r\n              callbackViewProgram={callbackViewProgram}\r\n              isLoading={isLoading}\r\n              selectedPrograms={selectedPrograms}\r\n              // selectedChannel={selectedChannel}\r\n              // viewProgram={viewProgram}\r\n              callbackViewSegment={callbackViewSegment}\r\n              viewedProgram={viewedProgram}\r\n              tableMinimize={tableMinimize}\r\n              titleSource={titleSource}\r\n            />\r\n          )}\r\n          tableHeaderColumns={tableHeaderColumns}\r\n          paginationParameters={availablePaginationParameters}\r\n          // onExport={handleExport}\r\n          sortHeader={handleSort}\r\n          // isExporting={isExporting}\r\n          hasExport={false}\r\n          stylesTable={\r\n            !tableMinimize ? Styles.tableBodyDiv : Styles.tableBodyDivSmall\r\n          }\r\n          tableHeader={(\r\n            <AvailableProgramsHeaderComponent\r\n              onClickedButtonClearAllFilters={onClickedButtonClearAllFilters}\r\n              filterModel={filterModel}\r\n              sortBy={sortBy}\r\n              handleSetSortBy={handleSetSortBy}\r\n              onClickedButtonFilter={onClickedButtonFilter}\r\n              titleSource={titleSource}\r\n            />\r\n          )}\r\n          paginate={paginate}\r\n          isTableBodyLoading={isLoading}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n);\r\nAvailableProgramsComponent.propTypes = {\r\n  programs: PropTypes.arrayOf(PropTypes.shape),\r\n  callbackViewProgram: PropTypes.func.isRequired,\r\n  handleSelectProgram: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool,\r\n  availablePaginationParameters: PropTypes.func.isRequired,\r\n  paginate: PropTypes.func.isRequired,\r\n  selectedPrograms: PropTypes.arrayOf(PropTypes.number),\r\n  setFilterModel: PropTypes.func.isRequired,\r\n  filterModel: PropTypes.shape.isRequired,\r\n  // selectedChannel: PropTypes.shape,\r\n  callbackViewSegment: PropTypes.func.isRequired,\r\n  tableMinimize: PropTypes.bool,\r\n  titleSource: PropTypes.number.isRequired,\r\n  viewedProgram: PropTypes.number,\r\n};\r\nAvailableProgramsComponent.defaultProps = {\r\n  programs: null,\r\n  isLoading: true,\r\n  selectedPrograms: null,\r\n  // selectedChannel: null,\r\n  tableMinimize: PropTypes.bool,\r\n  viewedProgram: null,\r\n};\r\nAvailableProgramsComponent.displayName = 'AvailableProgramsComponent';\r\nexport default AvailableProgramsComponent;\r\n","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eyeIcon from '../../../assets/icons/Prioritisation-eye.svg';\r\nimport eyeIconSelected from '../../../assets/icons/Prioritisation-selectedeye.svg';\r\nimport eyeOffIcon from '../../../assets/icons/Eye.png';\r\nimport Styles from '../Prioritisation.module.css';\r\nimport BootstrapSpinner from '../../../shared/components/bootstrap-spinner/BootstrapSpinner';\r\n\r\nconst PrioritisedProgramsDataComponent = forwardRef(\r\n  (\r\n    {\r\n      programs,\r\n      callbackSelectPrograms,\r\n      callbackViewProgram,\r\n      selectedPrograms,\r\n      tableMinimize,\r\n      callbackViewSegment,\r\n      titleSource,\r\n      viewedProgram,\r\n      isLoading,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const eyeRef = useRef();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        setTimeout(() => {\r\n          eyeRef.current?.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n          });\r\n        }, 500);\r\n      },\r\n    }));\r\n\r\n    const selectRow = (data) => {\r\n      let filteredArray = [];\r\n      if (selectedPrograms.includes(data.id)) {\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.id);\r\n        callbackSelectPrograms(filteredArray);\r\n      } else {\r\n        filteredArray = selectedPrograms;\r\n        filteredArray.push(data.id);\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.id);\r\n        filteredArray.push(data.id);\r\n        callbackSelectPrograms(filteredArray);\r\n      }\r\n    };\r\n\r\n    const viewRow = (data) => {\r\n      callbackViewProgram(data.target.name);\r\n    };\r\n\r\n    const viewSegment = (data) => {\r\n      callbackViewSegment(data.target.name);\r\n    };\r\n\r\n    const eyeIconSource = (data) => {\r\n      if (parseInt(viewedProgram, 10) === data.id) return eyeOffIcon;\r\n      if (selectedPrograms.includes(data.id)) return eyeIconSelected;\r\n      return eyeIcon;\r\n    };\r\n\r\n    const imageFilter = (data) => {\r\n      if (selectedPrograms.includes(data.id)) return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      if (\r\n        parseInt(viewedProgram, 10) === data.id\r\n        && selectedPrograms.includes(data.id)\r\n      ) return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      return 'brightness(0) saturate(100%) invert(23%) sepia(67%) saturate(6736%) hue-rotate(162deg) brightness(100%) contrast(101%)';\r\n    };\r\n    return (\r\n      <>\r\n        {isLoading && (\r\n          <div\r\n            className={`${\r\n              !tableMinimize ? Styles.tableBodyDiv : Styles.tableBodyDivSmall\r\n            }`}\r\n            style={{ backgroundColor: 'transparent' }}\r\n          >\r\n            <BootstrapSpinner />\r\n          </div>\r\n        )}\r\n        {programs.length === 0 && !isLoading && (\r\n          <tr\r\n            className={`${\r\n              !tableMinimize\r\n                ? Styles.prioritizeTableBodyDiv\r\n                : Styles.prioritizeTableBodyDivSmall\r\n            }`}\r\n          >\r\n            <td\r\n              colSpan=\"7\"\r\n              style={{\r\n                fontSize: '40px',\r\n                color: '#13ad83',\r\n                textAlign: 'center',\r\n                backgroundColor: 'transparent',\r\n              }}\r\n            >\r\n              Please select and add programme titles to prioritise\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {programs.length > 0 && !isLoading && (\r\n          <>\r\n            {programs.map((data) => (\r\n              <tr\r\n                key={data.id}\r\n                className={`\r\n                  ${\r\n                    selectedPrograms.includes(data.id)\r\n                      ? 'table-body-row-active'\r\n                      : 'table-body-row'\r\n                  }\r\n                  ${data.overrode && Styles.isHighlighted}\r\n                `}\r\n              >\r\n                <td\r\n                  className=\"table-body-column\"\r\n                  onClick={() => selectRow(data)}\r\n                  onKeyDown={() => selectRow(data)}\r\n                  role=\"presentation\"\r\n                  style={{ textIndent: '25px' }}\r\n                  title={data.title}\r\n                >\r\n                  {data.title}\r\n                </td>\r\n                {titleSource === 1 && (\r\n                  <td className=\"table-body-column\" style={{ width: '30px' }}>\r\n                    <img\r\n                      ref={\r\n                        parseInt(viewedProgram, 10) === data.id ? eyeRef : null\r\n                      }\r\n                      name={data.id}\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                        marginLeft: '-20px',\r\n                        filter: imageFilter(data),\r\n                      }}\r\n                      src={eyeIconSource(data)}\r\n                      alt=\"EyeIcon\"\r\n                      onClick={viewRow}\r\n                      onKeyDown={viewRow}\r\n                      role=\"presentation\"\r\n                    />\r\n                  </td>\r\n                )}\r\n                {titleSource === 2 && (\r\n                  <td className=\"table-body-column\" style={{ width: '35px' }}>\r\n                    <img\r\n                      ref={\r\n                        parseInt(viewedProgram, 10) === data.id ? eyeRef : null\r\n                      }\r\n                      name={data.id}\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                        marginLeft: '-20px',\r\n                        filter: imageFilter(data),\r\n                      }}\r\n                      src={eyeIconSource(data)}\r\n                      alt=\"EyeIcon\"\r\n                      onClick={viewRow}\r\n                      onKeyDown={viewRow}\r\n                      role=\"presentation\"\r\n                    />\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            ))}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  },\r\n);\r\nPrioritisedProgramsDataComponent.propTypes = {\r\n  programs: PropTypes.arrayOf(PropTypes.shape),\r\n  callbackSelectPrograms: PropTypes.func.isRequired,\r\n  callbackViewProgram: PropTypes.func.isRequired,\r\n  selectedPrograms: PropTypes.arrayOf(PropTypes.number),\r\n  tableMinimize: PropTypes.bool,\r\n  callbackViewSegment: PropTypes.func.isRequired,\r\n  titleSource: PropTypes.number.isRequired,\r\n  viewedProgram: PropTypes.number,\r\n  isLoading: PropTypes.bool,\r\n};\r\nPrioritisedProgramsDataComponent.defaultProps = {\r\n  programs: null,\r\n  selectedPrograms: null,\r\n  tableMinimize: false,\r\n  viewedProgram: null,\r\n  isLoading: true,\r\n};\r\nPrioritisedProgramsDataComponent.displayName = 'PrioritisedProgramsDataComponent';\r\nexport default PrioritisedProgramsDataComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"columns\":\"PrioritisedProgramsTableHeader_columns__52NlA\",\"filterIcons\":\"PrioritisedProgramsTableHeader_filterIcons__OEyHt\",\"clearFilterIcons\":\"PrioritisedProgramsTableHeader_clearFilterIcons__nco3h\",\"dropdownFilter\":\"PrioritisedProgramsTableHeader_dropdownFilter__P4UDQ\",\"dropdownDateCreated\":\"PrioritisedProgramsTableHeader_dropdownDateCreated__PMW41\"};","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './PrioritisedProgramsTableHeader.module.css';\r\nimport arrowUpIcon from '../../../../assets/icons/Arrow-Up.png';\r\nimport PrioritisationForms from '../../PrioritisationForms';\r\n\r\nfunction PrioritisedProgramsTableHeaderComponent(props) {\r\n  const {\r\n    filterModel, onClickedButtonFilter, sortBy, handleSetSortBy,\r\n  } = props;\r\n  const tableHeaders = PrioritisationForms.availableProgramsHeader;\r\n  // const [showClearFilterIcon, setShowClearAllFilterIcon] = useState(false);\r\n\r\n  const onClickedButtonFilterHeader = (model) => {\r\n    onClickedButtonFilter(model);\r\n  };\r\n\r\n  const handleSort = (id) => {\r\n    const model = JSON.parse(JSON.stringify(filterModel));\r\n\r\n    model.userSort = id;\r\n    model.sortBy = sortBy[id].state ? 2 : 1;\r\n\r\n    onClickedButtonFilterHeader(model);\r\n    handleSetSortBy(id);\r\n  };\r\n\r\n  const handleClearFilterIcon = () => {\r\n    // setShowClearAllFilterIcon(\r\n    //   !!(filterModel.titleNameFilter || filterModel.titleNameFilterValue),\r\n    // );\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClearFilterIcon();\r\n    // eslint-disable-next-line\r\n  }, [filterModel]);\r\n\r\n  return (\r\n    <tr>\r\n      <td className={styles.columns}>\r\n        <span\r\n          onClick={() => handleSort(1)}\r\n          onKeyDown={() => handleSort(1)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[0]}\r\n        </span>\r\n        {' '}\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon1\"\r\n          style={{\r\n            transform: sortBy[1].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nPrioritisedProgramsTableHeaderComponent.propTypes = {\r\n  filterModel: PropTypes.shape.isRequired,\r\n  onClickedButtonFilter: PropTypes.func.isRequired,\r\n  sortBy: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  handleSetSortBy: PropTypes.func.isRequired,\r\n};\r\nexport default PrioritisedProgramsTableHeaderComponent;\r\n","import React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useState,\r\n  useRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableComponent from '../../_reusable/table/TableComponent';\r\nimport PrioritisedProgramsDataComponent from './PrioritisedProgramsDataComponent';\r\nimport PrioritisationForms from '../PrioritisationForms';\r\nimport Styles from '../Prioritisation.module.css';\r\nimport PrioritisedProgramsHeaderComponent from './table-header/PrioritisedProgramsHeaderComponent';\r\n\r\nconst PrioritisedProgramsComponent = forwardRef(\r\n  (\r\n    {\r\n      programs,\r\n      callbackViewProgram,\r\n      handleSelectProgram,\r\n      paginationParameters,\r\n      paginate,\r\n      selectedPrograms,\r\n      handleSortPrioritised,\r\n      tableMinimize,\r\n      callbackViewSegment,\r\n      titleSource,\r\n      viewedProgram,\r\n      isLoading,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const dataComponentRef = useRef();\r\n    const tableHeaderColumns = PrioritisationForms.tableHeaders;\r\n    const [filterModel, setFilterModel] = useState({});\r\n\r\n    const [sortInfo, setSortInfo] = useState({});\r\n    const [sortBy, setSortBy] = useState([\r\n      {},\r\n      {\r\n        state: true,\r\n      },\r\n      {\r\n        state: false,\r\n      },\r\n    ]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        dataComponentRef.current.scrollToProgram();\r\n      },\r\n    }));\r\n\r\n    const handleSetSortBy = (id) => {\r\n      const newArr = sortBy;\r\n\r\n      if (newArr[id].state === true) {\r\n        newArr[id].state = false;\r\n      } else {\r\n        newArr[id].state = true;\r\n      }\r\n\r\n      setSortBy(newArr);\r\n      setSortInfo({\r\n        userSort: id,\r\n        sortBy: newArr[id].state ? 1 : 2,\r\n      });\r\n    };\r\n\r\n    const onClickedButtonFilter = (model) => {\r\n      handleSortPrioritised(model);\r\n    };\r\n\r\n    const onClickedButtonClearAllFilters = () => {\r\n      setFilterModel({\r\n        userSort: sortInfo.userSort,\r\n        sortBy: sortInfo.sortBy,\r\n        useCache: true,\r\n      });\r\n    };\r\n\r\n    const handleSort = () => {};\r\n\r\n    return (\r\n      <div>\r\n        <TableComponent\r\n          component={(\r\n            <PrioritisedProgramsDataComponent\r\n              ref={dataComponentRef}\r\n              programs={programs}\r\n              callbackViewProgram={callbackViewProgram}\r\n              callbackSelectPrograms={handleSelectProgram}\r\n              selectedPrograms={selectedPrograms}\r\n              tableMinimize={tableMinimize}\r\n              callbackViewSegment={callbackViewSegment}\r\n              titleSource={titleSource}\r\n              viewedProgram={viewedProgram}\r\n              isLoading={isLoading}\r\n            />\r\n          )}\r\n          tableHeaderColumns={tableHeaderColumns}\r\n          paginationParameters={paginationParameters}\r\n          paginate={paginate}\r\n          sortHeader={handleSort}\r\n          hasExport={false}\r\n          stylesTable={\r\n            !tableMinimize\r\n              ? Styles.prioritizeTableBodyDiv\r\n              : Styles.prioritizeTableBodyDivSmall\r\n          }\r\n          tableHeader={(\r\n            <PrioritisedProgramsHeaderComponent\r\n              onClickedButtonClearAllFilters={onClickedButtonClearAllFilters}\r\n              filterModel={filterModel}\r\n              sortBy={sortBy}\r\n              handleSetSortBy={handleSetSortBy}\r\n              onClickedButtonFilter={onClickedButtonFilter}\r\n            />\r\n          )}\r\n          isTableBodyLoading={isLoading}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n);\r\nPrioritisedProgramsComponent.propTypes = {\r\n  programs: PropTypes.arrayOf(PropTypes.shape),\r\n  callbackViewProgram: PropTypes.func.isRequired,\r\n  handleSelectProgram: PropTypes.func.isRequired,\r\n  paginationParameters: PropTypes.shape.isRequired,\r\n  paginate: PropTypes.func.isRequired,\r\n  selectedPrograms: PropTypes.arrayOf(PropTypes.number),\r\n  handleSortPrioritised: PropTypes.func.isRequired,\r\n  tableMinimize: PropTypes.bool,\r\n  callbackViewSegment: PropTypes.func.isRequired,\r\n  titleSource: PropTypes.number.isRequired,\r\n  viewedProgram: PropTypes.number,\r\n  isLoading: PropTypes.bool,\r\n};\r\nPrioritisedProgramsComponent.defaultProps = {\r\n  programs: null,\r\n  selectedPrograms: null,\r\n  tableMinimize: false,\r\n  viewedProgram: null,\r\n  isLoading: true,\r\n};\r\nPrioritisedProgramsComponent.displayName = 'PrioritisedProgramsComponent';\r\nexport default PrioritisedProgramsComponent;\r\n","export const TitleGroupStorage = {\r\n  availableTitleGroupHeaders: [\r\n    {\r\n      headerId: 1,\r\n      headerName: 'Title Group Name',\r\n      filter: {\r\n        type: 1,\r\n        queryNames: ['titleGroupFilter', 'titleGroupFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 2,\r\n      headerName: 'Titles Count',\r\n      filter: {\r\n        type: 5,\r\n        queryNames: ['titlesCountFilter', 'titlesCountFilterValue'],\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 3,\r\n      headerName: '‎',\r\n    },\r\n  ],\r\n  prioritisedTitleGroupHeaders: [\r\n    {\r\n      headerId: 1,\r\n      headerName: 'Title Group Name',\r\n      sortable: true,\r\n    },\r\n    {\r\n      headerId: 2,\r\n      headerName: '‎',\r\n    },\r\n  ],\r\n  pagination: {\r\n    totalCount: 0,\r\n    pageSize: 50,\r\n    currentPage: 1,\r\n    totalPages: 0,\r\n  },\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Table from '../../../../shared/components/table/Table';\r\nimport { TitleGroupStorage } from '../TitleGroupStorage';\r\nimport SearchAvailableTitleGroupComponent from './SearchAvailableTitleGroupComponent';\r\nimport Styles from '../../Prioritisation.module.css';\r\n\r\nfunction AvailableTitleGroupComponent({\r\n  selectTitleGroups,\r\n  groups,\r\n  paginationParameters,\r\n  clearSelected,\r\n  setClearSelected,\r\n  selectDetail,\r\n  tableHeight,\r\n  handleGetTitles,\r\n  isLoading,\r\n  queryParameters,\r\n  setQueryParameters,\r\n  sortParameters,\r\n  setSortParameters,\r\n  prioritisation,\r\n}) {\r\n  const tableHeaders = TitleGroupStorage.availableTitleGroupHeaders;\r\n  const [tableParameters, setTableParameters] = useState({});\r\n\r\n  const handleOnAction = (actionName, selectedId) => {\r\n    selectDetail(selectedId);\r\n  };\r\n\r\n  const handleOnFilter = (selectedData) => {\r\n    setQueryParameters({\r\n      ...queryParameters,\r\n      ...selectedData,\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      searchKey: queryParameters.searchKey,\r\n    });\r\n    setTableParameters({\r\n      ...queryParameters,\r\n      ...selectedData,\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      searchKey: queryParameters.searchKey,\r\n    });\r\n  };\r\n\r\n  const handleOnClearFilter = () => {\r\n    setQueryParameters({\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      searchKey: queryParameters.searchKey,\r\n    });\r\n    setTableParameters({});\r\n  };\r\n\r\n  const handleOnSearch = (searchKey) => {\r\n    setQueryParameters({\r\n      ...queryParameters,\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      searchKey,\r\n    });\r\n  };\r\n\r\n  const handleOnSort = ({ sortBy, sortOrder }) => {\r\n    setSortParameters({ order: sortOrder, sort: sortBy });\r\n    setQueryParameters({\r\n      ...queryParameters,\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      sortBy,\r\n      sortOrder,\r\n    });\r\n  };\r\n\r\n  const handleOnPaginate = (pageNumber, pageSize) => {\r\n    setQueryParameters({ ...queryParameters, pageNumber, pageSize });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(prioritisation.channelId && prioritisation.month && prioritisation.year){\r\n      handleGetTitles(false);\r\n    }\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [queryParameters]);\r\n\r\n  const handleMultiSelect = (e) => {\r\n    selectTitleGroups(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"col-12\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        <div className={`${Styles.tableLabel}`}>Available title groups:</div>\r\n\r\n        <div className=\"d-flex\">\r\n          <Table\r\n            noDataVerbiage=\"No available title group.\"\r\n            headers={tableHeaders}\r\n            list={groups}\r\n            isFetchingData={isLoading}\r\n            queryParameters={tableParameters}\r\n            paginationParameters={paginationParameters}\r\n            sortParameters={sortParameters}\r\n            onFilter={handleOnFilter}\r\n            onClearFilters={handleOnClearFilter}\r\n            onSort={handleOnSort}\r\n            onPaginate={handleOnPaginate}\r\n            onDoubleClickSelectData={null}\r\n            onSingleClickSelectData={null}\r\n            tableHeight={tableHeight}\r\n            filter={null}\r\n            onAction={handleOnAction}\r\n            defaultSelected={null}\r\n            onMultiSelect={handleMultiSelect}\r\n            clearSelected={clearSelected}\r\n            setClearSelected={(e) => setClearSelected(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AvailableTitleGroupComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Table from '../../../../shared/components/table/Table';\r\nimport { TitleGroupStorage } from '../TitleGroupStorage';\r\nimport Styles from '../../Prioritisation.module.css';\r\n\r\nexport default function PrioritisedTitleGroupComponent({\r\n  prioritisedGroups,\r\n  selectPrioritisedGroups,\r\n  paginationParameters,\r\n  selectDetail,\r\n  tableHeight,\r\n  isLoading,\r\n  setSortParameters,\r\n  sortParameters,\r\n  clearSelected,\r\n  setClearSelected,\r\n  queryParameters,\r\n  setQueryParameters,\r\n}) {\r\n  const tableHeaders = TitleGroupStorage.prioritisedTitleGroupHeaders;\r\n  const [tableParameters, setTableParameters] = useState({});\r\n\r\n  const handleOnAction = (actionName, selectedId) => {\r\n    selectDetail(selectedId);\r\n  };\r\n\r\n  const handleOnSort = ({ sortBy, sortOrder }) => {\r\n    setSortParameters({ order: sortOrder, sort: sortBy });\r\n    setQueryParameters({\r\n      ...queryParameters,\r\n      pageNumber: 1,\r\n      pageSize: queryParameters.pageSize,\r\n      sortBy,\r\n      sortOrder,\r\n    });\r\n  };\r\n\r\n  const handleOnPaginate = (pageNumber, pageSize) => {\r\n    setQueryParameters({ ...queryParameters, pageNumber, pageSize });\r\n  };\r\n\r\n  const handleMultiSelect = (e) => {\r\n    selectPrioritisedGroups(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"col-12\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        <div className={`${Styles.tableLabel}`}>Prioritised title groups:</div>\r\n        <div\r\n          className=\"d-flex\"\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Table\r\n            noDataVerbiage=\"Please select a title group and add.\"\r\n            headers={tableHeaders}\r\n            list={prioritisedGroups}\r\n            isFetchingData={isLoading}\r\n            queryParameters={tableParameters}\r\n            paginationParameters={paginationParameters}\r\n            sortParameters={sortParameters}\r\n            onSort={handleOnSort}\r\n            onPaginate={handleOnPaginate}\r\n            onDoubleClickSelectData={null}\r\n            onSingleClickSelectData={null}\r\n            tableHeight={tableHeight}\r\n            filter={null}\r\n            onAction={handleOnAction}\r\n            onMultiSelect={handleMultiSelect}\r\n            clearSelected={clearSelected}\r\n            setClearSelected={(e) => setClearSelected(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"panel\":\"TitleGroups_panel__Ugb26\",\"scroll\":\"TitleGroups_scroll__UT+L0\",\"closeIcon\":\"TitleGroups_closeIcon__MZBJo\",\"fontBold\":\"TitleGroups_fontBold__z3yQU\",\"labelField\":\"TitleGroups_labelField__Ptu+S\"};","import React, { useEffect, useState } from 'react';\r\nimport closeIcon from '../../../assets/icons/Close.svg';\r\nimport styles from './TitleGroups.module.css';\r\nimport PrioritisationService from '../PrioritisationService';\r\nimport DateService from '../../../core/date.service';\r\n\r\nexport default function TitleGroupDetailsComponent({\r\n  viewGroupDetails,\r\n  callbackCloseDetails,\r\n  prioritisation,\r\n}) {\r\n  const [titles, setTitles] = useState([]);\r\n  const handleGetTitleGroupDetails = () => {\r\n    var start = DateService.toIsoFormat(\r\n      new Date(Date.UTC(prioritisation.year, prioritisation.month - 1, 1))\r\n    );\r\n    var end = DateService.toIsoFormat(\r\n      new Date(Date.UTC(prioritisation.year, prioritisation.month, 0))\r\n    );\r\n    PrioritisationService.getTitleGroupPrograms(\r\n      viewGroupDetails.id,\r\n      prioritisation.channelId,\r\n      start,\r\n      end\r\n    ).then((response) => {\r\n      let responseData = JSON.parse(JSON.stringify(response.data.data));\r\n      responseData = responseData.sort((a, b) => {\r\n        if (a.titleName.toLowerCase() > b.titleName.toLowerCase()) return 1;\r\n        return -1;\r\n      });\r\n      setTitles(responseData);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    viewGroupDetails && handleGetTitleGroupDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [viewGroupDetails]);\r\n  return (\r\n    <>\r\n      <div style={{ width: '100%', marginTop: '8px' }}>\r\n        <div className=\"col-12\">\r\n          <div className={styles.panel}>\r\n            <div className=\"position-relative\">\r\n              <i>\r\n                <img\r\n                  className={styles.closeIcon}\r\n                  src={closeIcon}\r\n                  alt=\"\"\r\n                  onClick={callbackCloseDetails}\r\n                  onKeyDown={callbackCloseDetails}\r\n                  role=\"presentation\"\r\n                />\r\n              </i>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <b\r\n                style={{ fontSize: '20px', fontWeight: 600, fontSize: '16px' }}\r\n              >\r\n                {viewGroupDetails.name}\r\n              </b>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <b className={styles.labelField}>Programme titles:</b>\r\n            </div>{' '}\r\n            <div className={styles.scroll}>\r\n              <div className=\"col-12\">\r\n                {titles.map((value) => (\r\n                  <b className={styles.fontBold}>{value.titleName}</b>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Styles from '../Prioritisation.module.css';\r\nimport AvailableTitleGroupComponent from './available-title-groups/AvailableTitleGroupComponent';\r\nimport PrioritisedTitleGroupComponent from './prioritised-title-groups/PrioritisedTitleGroupComponent';\r\nimport TitleGroupDetailsComponent from './TitleGroupDetailsComponent';\r\nimport { arrowLeftIcon, arrowRightIcon } from '../../../assets/index';\r\nimport Button from '../../../shared/components/button/Button';\r\nimport PrioritisationService from '../PrioritisationService';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../../shared/elements/notification/NotifyComponent';\r\nimport { eyeIcon, eyeSlashIcon } from '../../../assets/index';\r\nimport { TitleGroupStorage } from './TitleGroupStorage';\r\nexport default function TitleGroupComponent({\r\n  prioritisation,\r\n  changed,\r\n  setChanged,\r\n  discardTitleGroupDirty,\r\n  setDiscardTitleGroupDirty,\r\n  saveTitleGroupDirty,\r\n  setSaveTitleGroupDirty,\r\n}) {\r\n  const [allGroups, setAllGroups] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [allAvailableGroups, setAllAvailableGroups] = useState([]);\r\n  const [paginationParameters, setPaginationParameters] = useState(\r\n    TitleGroupStorage.pagination\r\n  );\r\n  const [clearSelectedGroups, setClearSelectedGroups] = useState(false);\r\n  const [selectedGroups, setSelectedGroups] = useState([]);\r\n  const [prioritisedGroups, setPrioritisedGroups] = useState([]);\r\n  const [allPrioritisedGroups, setAllPrioritisedGroups] = useState([]);\r\n  const [clearSelectedPrioritise, setClearSelectedPrioritise] = useState(false);\r\n  const [selectedPrioritisedGroups, setSelectedPrioritisedGroups] = useState(\r\n    []\r\n  );\r\n  const [selectedViewId, setSelectedViewId] = useState();\r\n  const [viewGroupDetails, setViewGroupDetails] = useState();\r\n  const [\r\n    paginationParametersPrioritised,\r\n    setPaginationParametersPrioritised,\r\n  ] = useState(TitleGroupStorage.pagination);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [queryParameters, setQueryParameters] = useState({\r\n    pageNumber: 1,\r\n    pageSize: 50,\r\n  });\r\n  const [prioritisedQueryParameters, setPrioritisedQueryParameters] = useState({\r\n    pageNumber: 1,\r\n    pageSize: 50,\r\n  });\r\n  const [sortParameters, setSortParameters] = useState({ order: 1, sort: 1 });\r\n  const [sortPrioritiseParameters, setSortPrioritiseParameters] = useState({\r\n    order: 1,\r\n    sort: 1,\r\n  });\r\n\r\n  const constructQueryParameters = (parameters) => {\r\n    const pagination = `?pageNumber=${\r\n      parameters.pageNumber ? parameters.pageNumber : 1\r\n    }\r\n    &pageSize=${parameters.pageSize ? parameters.pageSize : 50}`;\r\n\r\n    const title =\r\n      parameters.titleGroupFilter && parameters.titleGroupFilterValue\r\n        ? `&titleGroupFilter=${parameters.titleGroupFilter}&titleGroupFilterValue=${parameters.titleGroupFilterValue}`\r\n        : '';\r\n\r\n    let titlesCount =\r\n      parameters.titlesCountFilter && parameters.titlesCountFilterValue\r\n        ? `&titlesCountFilter=${parameters.titlesCountFilter}&titlesCountFilterValue=${parameters.titlesCountFilterValue}`\r\n        : '';\r\n\r\n    const sort =\r\n      parameters.sortOrder && parameters.sortBy\r\n        ? `&sort=${parameters.sortBy}&sortBy=${parameters.sortOrder}`\r\n        : '';\r\n\r\n    let searchKey = parameters.searchKey\r\n      ? `&SearchKey=${parameters.searchKey}`\r\n      : '';\r\n    if (parameters.searchKey != null && parameters.searchKey.includes('+')) {\r\n      searchKey = searchKey.replace('+', '%2B');\r\n    }\r\n    const useCache = parameters.useCache\r\n      ? `&useCache=${parameters.useCache}`\r\n      : '';\r\n    const channelId = prioritisation\r\n      ? `&channelId=${prioritisation.channelId}`\r\n      : '';\r\n    const month = prioritisation ? `&month=${prioritisation.month}` : '';\r\n    const year = prioritisation ? `&year=${prioritisation.year}` : '';\r\n    let queryString = `${pagination}${title}${titlesCount}${sort}${searchKey}${useCache}${channelId}${month}${year}`;\r\n\r\n    if (queryString.includes('+')) {\r\n      queryString = queryString.replace('+', '%2B');\r\n    }\r\n\r\n    return queryString;\r\n  };\r\n\r\n  const mapAvailableData = (data) => {\r\n    let dataSelected = allGroups.filter(\r\n      (x) => data.filter((y) => y.id === x.id).length\r\n    );\r\n    const availableData = dataSelected.map((group) => ({\r\n      id: group.id,\r\n      name: group.name,\r\n      totalAsset: group.totalAsset,\r\n      action: group.action,\r\n    }));\r\n    return availableData;\r\n  };\r\n\r\n  const mapPrioritiseData = (data) => {\r\n    let dataSelected = allGroups.filter(\r\n      (x) => data.filter((y) => y.id === x.id).length\r\n    );\r\n    const prioritiseData = dataSelected.map((group) => ({\r\n      id: group.id,\r\n      name: group.name,\r\n      action: group.action,\r\n    }));\r\n    return prioritiseData;\r\n  };\r\n\r\n  const handleGetTitles = (initial) => {\r\n    setIsLoading(true);\r\n    PrioritisationService.getTitleGroupList(\r\n      constructQueryParameters(queryParameters),\r\n      initial\r\n    )\r\n      .then((response) => {\r\n        const reponseData = response.data.data;\r\n        mapAllData(reponseData, response.data.prioritised);\r\n        let groupData = reponseData.map((group) => ({\r\n          id: group.id,\r\n          name: group.name,\r\n          totalAsset: group.totalAsset,\r\n          action: {\r\n            id: group.id,\r\n            icon: eyeIcon,\r\n            toolTip: 'View title group details',\r\n            actionName: 'viewTitleDetails',\r\n          },\r\n        }));\r\n\r\n        if (!initial) {\r\n          groupData = groupData.filter(\r\n            (x) => !prioritisedGroups.filter((y) => y.id === x.id).length\r\n          );\r\n        }\r\n        sortAvailable(groupData);\r\n\r\n        if (initial) {\r\n          const prioritisedData = response.data.prioritised.map((group) => ({\r\n            id: group.id,\r\n            name: group.name,\r\n            action: {\r\n              id: group.id,\r\n              icon: eyeIcon,\r\n              toolTip: 'View title group details',\r\n              actionName: 'viewTitleDetails',\r\n            },\r\n          }));\r\n          sortPrioritise(prioritisedData);\r\n        }\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const mapAllData = (availableData, prioritisedData) => {\r\n    let allData = availableData.map((group) => ({\r\n      id: group.id,\r\n      name: group.name,\r\n      totalAsset: group.totalAsset,\r\n      action: {\r\n        id: group.id,\r\n        icon: eyeIcon,\r\n        toolTip: 'View title group details',\r\n        actionName: 'viewTitleDetails',\r\n      },\r\n    }));\r\n    const priorityData = prioritisedData.map((group) => ({\r\n      id: group.id,\r\n      name: group.name,\r\n      totalAsset: group.totalAsset,\r\n      action: {\r\n        id: group.id,\r\n        icon: eyeIcon,\r\n        toolTip: 'View title group details',\r\n        actionName: 'viewTitleDetails',\r\n      },\r\n    }));\r\n    allData = allData.concat(priorityData);\r\n    setAllGroups(allData);\r\n  };\r\n\r\n  const selectTitleGroups = (e) => {\r\n    setSelectedGroups(\r\n      e.filter((x) => groups.filter((y) => y.id === x.id).length)\r\n    );\r\n  };\r\n\r\n  const selectPrioritisedGroups = (e) => {\r\n    setSelectedPrioritisedGroups(e);\r\n  };\r\n\r\n  const handleAddProgram = (e) => {\r\n    const toPrioritise = mapPrioritiseData(selectedGroups);\r\n    var prioritisedFilter = allPrioritisedGroups.concat(toPrioritise);\r\n    sortPrioritise(prioritisedFilter);\r\n\r\n    //set available data\r\n    const filterGroups = allAvailableGroups.filter(\r\n      (x) => !selectedGroups.filter((y) => y.id === x.id).length\r\n    );\r\n    sortAvailable(filterGroups);\r\n    setSelectedGroups([]);\r\n    setClearSelectedGroups(true);\r\n    setChanged(true);\r\n  };\r\n\r\n  const handleRemoveAll = () => {\r\n    //set available data\r\n    const toAvailableData = mapAvailableData(allPrioritisedGroups);\r\n    const filterGroups = allAvailableGroups.concat(toAvailableData);\r\n    sortAvailable(filterGroups);\r\n    setSelectedGroups([]);\r\n    sortPrioritise([]);\r\n    setClearSelectedPrioritise(true);\r\n    setChanged(true);\r\n  };\r\n\r\n  const handleRemoveProgram = () => {\r\n    //set available data\r\n    const toAvailableData = mapAvailableData(selectedPrioritisedGroups);\r\n    const filterGroups = allAvailableGroups.concat(toAvailableData);\r\n    sortAvailable(filterGroups);\r\n    setSelectedGroups([]);\r\n    const filterPrioritise = allPrioritisedGroups.filter(\r\n      (x) => !selectedPrioritisedGroups.filter((y) => y.id === x.id).length\r\n    );\r\n    sortPrioritise(filterPrioritise);\r\n    setSelectedPrioritisedGroups([]);\r\n    setClearSelectedPrioritise(true);\r\n    setChanged(true);\r\n  };\r\n\r\n  const handleSelectDetail = (selectedId) => {\r\n    var selected = allGroups.filter((y) => y.id === selectedId)[0];\r\n\r\n    if (viewGroupDetails && selectedId === viewGroupDetails.id) {\r\n      setViewGroupDetails();\r\n      setSelectedViewId();\r\n    } else {\r\n      setViewGroupDetails(selected);\r\n      setSelectedViewId(selected?.id);\r\n    }\r\n  };\r\n\r\n  const callbackCloseDetails = () => {\r\n    setViewGroupDetails();\r\n    setSelectedViewId();\r\n  };\r\n\r\n  const handleSavePriotised = () => {\r\n    let valid = true;\r\n    const titleGroupIDs = [];\r\n    setIsSaving(true);\r\n\r\n    allPrioritisedGroups.map((value) => {\r\n      titleGroupIDs.push(value.id);\r\n      return true;\r\n    });\r\n\r\n    if (valid) {\r\n      const prioritisationParameters = {\r\n        titleGroupIDs: titleGroupIDs,\r\n        channelId: prioritisation.channelId,\r\n        month: prioritisation.month,\r\n        year: prioritisation.year,\r\n      };\r\n\r\n      PrioritisationService.saveTitleGroupPriotisation(\r\n        prioritisationParameters\r\n      ).then(() => {\r\n        setChanged(false);\r\n        setIsSaving(false);\r\n        success('Prioritisation Saved');\r\n      });\r\n    } else {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const sortAvailable = (list) => {\r\n    var availableList = list;\r\n    if (sortParameters.order === 1) {\r\n      if (sortParameters.sort === 1) {\r\n        availableList = availableList.sort((a, b) => {\r\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n          return -1;\r\n        });\r\n      } else {\r\n        availableList = availableList.sort((a, b) => {\r\n          if (a.totalAsset > b.totalAsset) return 1;\r\n          return -1;\r\n        });\r\n      }\r\n    } else {\r\n      if (sortParameters.sort === 1) {\r\n        availableList = availableList.sort((a, b) => {\r\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n          return 1;\r\n        });\r\n      } else {\r\n        availableList = availableList.sort((a, b) => {\r\n          if (a.totalAsset > b.totalAsset) return -1;\r\n          return 1;\r\n        });\r\n      }\r\n    }\r\n    setAllAvailableGroups(availableList);\r\n    let pageNumber =\r\n      availableList.length > 0 && queryParameters.pageNumber === 0\r\n        ? 1\r\n        : queryParameters.pageNumber;\r\n    let { pageSize } = queryParameters;\r\n    let toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * pageSize;\r\n    while (toSkip >= availableList.length) {\r\n      pageNumber -= 1;\r\n      toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * pageSize;\r\n    }\r\n    const availableGroupData = availableList.slice(toSkip, toSkip + pageSize);\r\n    setGroups(availableGroupData);\r\n\r\n    setPaginationParameters((prevState) => ({\r\n      ...prevState,\r\n      currentPage: pageNumber,\r\n      totalCount: availableList.length,\r\n      totalPages: Math.ceil(\r\n        availableList.length / paginationParameters.pageSize\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const sortPrioritise = (list) => {\r\n    var prioritisedList = list;\r\n    if (sortPrioritiseParameters.order === 1) {\r\n      prioritisedList = prioritisedList.sort((a, b) => {\r\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n        return -1;\r\n      });\r\n    } else {\r\n      prioritisedList = prioritisedList.sort((a, b) => {\r\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n        return 1;\r\n      });\r\n    }\r\n    setAllPrioritisedGroups(prioritisedList);\r\n    let pageNumber =\r\n      prioritisedList.length > 0 && prioritisedQueryParameters.pageNumber === 0\r\n        ? 1\r\n        : prioritisedQueryParameters.pageNumber;\r\n    let { pageSize } = prioritisedQueryParameters;\r\n    let toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * pageSize;\r\n    while (toSkip >= prioritisedList.length) {\r\n      pageNumber -= 1;\r\n      toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * pageSize;\r\n    }\r\n    const prioritisedGroupData = prioritisedList.slice(\r\n      toSkip,\r\n      toSkip + pageSize\r\n    );\r\n    setPrioritisedGroups(prioritisedGroupData);\r\n\r\n    setPaginationParametersPrioritised((prevState) => ({\r\n      ...prevState,\r\n      currentPage: pageNumber,\r\n      totalCount: prioritisedList.length,\r\n      totalPages: Math.ceil(\r\n        prioritisedList.length / paginationParametersPrioritised.pageSize\r\n      ),\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    sortPrioritise(allPrioritisedGroups);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [sortPrioritiseParameters, prioritisedQueryParameters]);\r\n\r\n  useEffect(() => {\r\n    sortAvailable(groups);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [sortParameters]);\r\n\r\n  useEffect(() => {\r\n    if(prioritisation.channelId && prioritisation.month && prioritisation.year){\r\n      handleGetTitles(true);\r\n      setViewGroupDetails();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [prioritisation]);\r\n\r\n  useEffect(() => {\r\n    if (discardTitleGroupDirty) {\r\n      setChanged(false);\r\n      setDiscardTitleGroupDirty(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [discardTitleGroupDirty]);\r\n\r\n  useEffect(() => {\r\n    if (saveTitleGroupDirty) {\r\n      handleSavePriotised();\r\n      setChanged(false);\r\n      setSaveTitleGroupDirty(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [saveTitleGroupDirty]);\r\n\r\n  useEffect(() => {\r\n    setAllGroups((old) =>\r\n      old.map((item) => ({\r\n        ...item,\r\n        action: { ...item.action, icon: item.id === selectedViewId ? eyeSlashIcon : eyeIcon },\r\n      }))\r\n    );\r\n    setGroups((old) =>\r\n      old.map((item) => ({\r\n        ...item,\r\n        action: { ...item.action, icon: item.id === selectedViewId ? eyeSlashIcon : eyeIcon },\r\n      }))\r\n    );\r\n    setPrioritisedGroups((old) =>\r\n      old.map((item) => ({\r\n        ...item,\r\n        action: { ...item.action, icon: item.id === selectedViewId ? eyeSlashIcon : eyeIcon },\r\n      }))\r\n    );\r\n  }, [allAvailableGroups, allGroups, allPrioritisedGroups, selectedViewId]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex\">\r\n        <div style={{ width: '60%' }}>\r\n          <AvailableTitleGroupComponent\r\n            selectTitleGroups={selectTitleGroups}\r\n            groups={groups}\r\n            setGroups={setGroups}\r\n            paginationParameters={paginationParameters}\r\n            setPaginationParameters={(e) => setPaginationParameters(e)}\r\n            clearSelected={clearSelectedGroups}\r\n            setClearSelected={setClearSelectedGroups}\r\n            selectDetail={handleSelectDetail}\r\n            tableHeight={viewGroupDetails ? '683px' : '467px'}\r\n            setPrioritisedGroups={(e) => {\r\n              setPrioritisedGroups(e);\r\n            }}\r\n            prioritisation={prioritisation}\r\n            handleGetTitles={handleGetTitles}\r\n            isLoading={isLoading}\r\n            queryParameters={queryParameters}\r\n            setQueryParameters={setQueryParameters}\r\n            sortParameters={sortParameters}\r\n            setSortParameters={setSortParameters}\r\n          />\r\n        </div>\r\n        <div className={Styles.divButtons}>\r\n          {!isLoading && (\r\n            <>\r\n              <button\r\n                onClick={handleAddProgram}\r\n                disabled={selectedGroups.length === 0}\r\n                type=\"button\"\r\n              >\r\n                Add Selected\r\n                <img style={{ marginTop: '11px' }} src={arrowLeftIcon} alt=\"\" />\r\n              </button>\r\n              <button\r\n                onClick={handleRemoveAll}\r\n                style={{ paddingTop: '9px' }}\r\n                disabled={prioritisedGroups.length === 0}\r\n                type=\"button\"\r\n              >\r\n                <img style={{ marginTop: '2px' }} src={arrowRightIcon} alt=\"\" />\r\n                <span style={{ marginLeft: '5px' }}>Remove All</span>\r\n              </button>\r\n              <button\r\n                onClick={handleRemoveProgram}\r\n                disabled={selectedPrioritisedGroups.length === 0}\r\n                type=\"button\"\r\n              >\r\n                <img\r\n                  style={{ marginTop: '11px' }}\r\n                  src={arrowRightIcon}\r\n                  alt=\"\"\r\n                />\r\n                Remove Selected\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ width: '33%' }}>\r\n          {prioritisedGroups.length === 0 ? (\r\n            <div\r\n              className={viewGroupDetails\r\n                ? Styles.divNoAvailableChannelSelectedSmall\r\n                : Styles.divNoAvailableChannelSelected\r\n              }\r\n            >\r\n              <div\r\n                style={{\r\n                  display: 'table-cell',\r\n                  verticalAlign: 'middle',\r\n                }}\r\n              >\r\n                <div>\r\n                  Please select a title group and add.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <PrioritisedTitleGroupComponent\r\n              prioritisedGroups={prioritisedGroups}\r\n              selectPrioritisedGroups={selectPrioritisedGroups}\r\n              paginationParameters={paginationParametersPrioritised}\r\n              setPaginationParameters={(e) =>\r\n                setPaginationParametersPrioritised(e)\r\n              }\r\n              selectDetail={handleSelectDetail}\r\n              tableHeight={viewGroupDetails ? '684px' : '468px'}\r\n              isLoading={isLoading}\r\n              sortParameters={sortPrioritiseParameters}\r\n              setSortParameters={(e) => {\r\n                setSortPrioritiseParameters(e);\r\n              }}\r\n              clearSelected={clearSelectedPrioritise}\r\n              setClearSelected={setClearSelectedPrioritise}\r\n              queryParameters={prioritisedQueryParameters}\r\n              setQueryParameters={setPrioritisedQueryParameters}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {viewGroupDetails && (\r\n        <TitleGroupDetailsComponent\r\n          viewGroupDetails={viewGroupDetails}\r\n          callbackCloseDetails={callbackCloseDetails}\r\n          prioritisation={prioritisation}\r\n        />\r\n      )}\r\n      <div style={{ float: 'right', marginTop: '8px' }}>\r\n        <Button\r\n          text=\"Save\"\r\n          isLoading={isSaving}\r\n          onClick={handleSavePriotised}\r\n          disabled={!changed}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport Styles from './Prioritisation.module.css';\r\nimport xIcon from '../../assets/icons/X.svg';\r\nimport checkIcon from '../../assets/icons/Check.svg';\r\nimport { arrowLeftIcon, arrowRightIcon } from '../../assets/index';\r\nimport BannerComponent from '../_reusable/banner/BannerComponent';\r\nimport SelectComponent from '../../shared/elements/select/select.component';\r\nimport SelectComponentCustom from '../../shared/elements/select/select.componentcustom';\r\nimport AvailableProgramsComponent from './available-programs/AvailableProgramsComponent';\r\nimport PrioritisedProgramsComponent from './prioritised-programs/PrioritisedProgramsComponent';\r\nimport { useCallbackPrompt } from '../_reusable/blocker/UsePromptComponent.ts';\r\nimport PrioritisationService from './PrioritisationService';\r\nimport ProfileService from '../profile/ProfileService';\r\nimport AuthService from '../../core/auth.service';\r\nimport PrioritisationForms from './PrioritisationForms';\r\nimport Button from '../../shared/components/button/Button';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../shared/elements/notification/NotifyComponent';\r\nimport ProgramDetailsComponent from './prioritisation-program-details/PrioritisationProgramDetailComponent';\r\nimport ImportProgramDetailsComponent from './import-program-details/ImportProgramDetailsComponent';\r\nimport ConfirmLeavePageModalComponent from '../title-group/modals/confirm-leave-page-modal/ConfirmLeavePageModalComponent';\r\nimport TabsComponent from '../_reusable/tabs/TabsComponent';\r\nimport TitleGroupComponent from './title-groups/TitleGroupComponent';\r\n\r\nfunction PrioritisationComponent() {\r\n  const [selectedChannel, setSelectedChannel] = useState(\r\n    'Please select a channel'\r\n  );\r\n  const [channelOptions, setChannelOptions] = useState([{}]);\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState('January');\r\n  const monthOptions = PrioritisationForms.months;\r\n  const yearOptions = PrioritisationForms.year();\r\n\r\n  const [selectedYear, setSelectedYear] = useState('2022');\r\n  const [allprograms, setAllPrograms] = useState([]);\r\n  const [programs, setPrograms] = useState([]);\r\n  const [allPrioritisePrograms, setAllPrioritisePrograms] = useState([]);\r\n  const [prioritisedPrograms, setPrioritisedPrograms] = useState([]);\r\n\r\n  const [viewProgram, setViewProgram] = useState();\r\n\r\n  const [selectedProgramID, setSelectedProgramID] = useState([]);\r\n  const [selectedPriorityProgramID, setSelectedPriorityProgramID] = useState(\r\n    []\r\n  );\r\n  const [isLoadingPrograms, setIsLoadingPrograms] = useState(true);\r\n  const [isLoadingPrioritise, setIsLoadingPrioritise] = useState(false);\r\n  const [hasSelectedPrograms, setHasSelectedPrograms] = useState(false);\r\n  const [hasSelectedPrioritise, setHasSelectedPrioritise] = useState(false);\r\n  const [clearSearchIsActive, setClearSearchIsActive] = useState(false);\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const [filterModel, setFilterModel] = useState({});\r\n  const [prioritisedSort, setPrioritisedSort] = useState(1);\r\n  const [viewedProgram, setViewedProgram] = useState(null);\r\n  const [saveSearchKey, setSaveSearchKey] = useState('');\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [\r\n    availablePaginationParameters,\r\n    setAvailablePaginationParameters,\r\n  ] = useState({});\r\n\r\n  const [availableParameters, setAvailableParameters] = useState({\r\n    page: 1,\r\n    size: 50,\r\n  });\r\n\r\n  const [\r\n    prioritisedPaginationParameters,\r\n    setPrioritisedPaginationParameters,\r\n  ] = useState({});\r\n  const [prioritisedParameters, setPrioritisedParameters] = useState({\r\n    page: 1,\r\n    size: 50,\r\n  });\r\n\r\n  const [prioritisation, setPrioritisation] = useState({\r\n    titleIds: [],\r\n    channelId: null,\r\n    month: 1,\r\n    year: 2022,\r\n  });\r\n  const [sortBy, setSortBy] = useState([\r\n    {},\r\n    { state: false },\r\n    { state: false },\r\n    { state: false },\r\n    { state: false },\r\n    { state: true },\r\n    { state: false },\r\n  ]);\r\n\r\n  const availableProgramsRef = useRef();\r\n  const prioritisedProgramRef = useRef();\r\n  const fileUploadRef = useRef();\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [titleSource, setTitleSource] = useState(1);\r\n  const [hasTitles, setHasTitles] = useState(false);\r\n  const [modalSuccessShow, setModalSuccessShow] = useState(false);\r\n  const [modalVerifyShow, setModalVerifyShow] = useState(false);\r\n  const [successCount, setSuccessCount] = useState('');\r\n  const [fileNameUploaded, setFileNameUploaded] = useState('');\r\n  const [uploadedTitleFilter, setUploadedTitleFilter] = useState('all');\r\n  const [allUploadedTitles, setAllUploadedTitles] = useState([]);\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n\r\n  const [uploadedTitles, setUploadedTitles] = useState([]);\r\n  const [uploadError, setUploadError] = useState('');\r\n  const [segments, setSegments] = useState([]);\r\n  const [tableMinimize, setTableMinimize] = useState(false);\r\n  const [hasSegments, setHasSegments] = useState(false);\r\n  const [modalLoadingShow, setModalLoadingShow] = useState(false);\r\n  const [modalSegmentsShow, setModalSegmentsShow] = useState(false);\r\n  const [modalVerifySegmentsShow, setModalVerifySegmentsShow] = useState(false);\r\n\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [isTitleGroupDirty, setIsTitleGroupDirty] = useState(false);\r\n  const [discardTitleGroupDirty, setDiscardTitleGroupDirty] = useState(false);\r\n  const [saveTitleGroupDirty, setSaveTitleGroupDirty] = useState(false);\r\n  const [nextTab, setNextTab] = useState();\r\n  const [showConfirmLeaveModal, setShowConfirmLeaveModal] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('Titles');\r\n  const [nextFilter, setNextFilter] = useState({});\r\n  const [addedPrograms, setAddedPrograms] = useState([]);\r\n  const [removedPrograms, setRemovedPrograms] = useState([]);\r\n  const [\r\n    showPrompt,\r\n    confirmNavigation,\r\n    cancelNavigation,\r\n    hidePrompt,\r\n  ] = useCallbackPrompt(isDirty || isTitleGroupDirty);\r\n  const [renderTimes, setRenderTimes] = useState(0);\r\n  const [\r\n    prioritisationSessionParameters,\r\n    setPrioritisationSessionParameters,\r\n  ] = useState();\r\n\r\n  const onChangeFormSetPrioritisationSessionParameters = (data) => {\r\n    setPrioritisationSessionParameters({\r\n      ...prioritisationSessionParameters,\r\n      ...data,\r\n    });\r\n  };\r\n\r\n  const cleanDirtyForm = () => {\r\n    setIsDirty(false);\r\n    setAddedPrograms([]);\r\n    setRemovedPrograms([]);\r\n  };\r\n\r\n  const handleChangeTab = () => {\r\n    if (nextTab) {\r\n      setActiveTab(nextTab);\r\n      setNextTab();\r\n      setIsDirty(false);\r\n      setIsTitleGroupDirty(false);\r\n    }\r\n  };\r\n\r\n  const handleDiscardChanges = () => {\r\n    if (isTitleGroupDirty) {\r\n      setDiscardTitleGroupDirty(true);\r\n    } else if (Object.keys(nextFilter).length > 0) {\r\n      const { input } = nextFilter;\r\n      const { selected } = nextFilter;\r\n      cleanDirtyForm();\r\n      setSearchKey('');\r\n      setClearSearchIsActive(false);\r\n      if (input === 'channel') {\r\n        setSelectedChannel(selected.name);\r\n        setPrioritisation((prevState) => ({\r\n          ...prevState,\r\n          channelId: selected.id,\r\n        }));\r\n        onChangeFormSetPrioritisationSessionParameters({\r\n          channelID: selected.id,\r\n        });\r\n      } else if (input === 'month') {\r\n        setSelectedMonth(selected.value);\r\n        setPrioritisation((prevState) => ({\r\n          ...prevState,\r\n          month: selected.id,\r\n        }));\r\n        onChangeFormSetPrioritisationSessionParameters({\r\n          monthID: selected.id,\r\n        });\r\n      } else {\r\n        setSelectedYear(selected.id);\r\n        setPrioritisation((prevState) => ({\r\n          ...prevState,\r\n          year: selected.id,\r\n        }));\r\n        onChangeFormSetPrioritisationSessionParameters({ year: selected.id });\r\n      }\r\n      setNextFilter({});\r\n    }\r\n    setShowConfirmLeaveModal(false);\r\n    handleChangeTab();\r\n  };\r\n\r\n  const handleViewProgram = (programID) => {\r\n    if (viewedProgram === programID) {\r\n      setViewedProgram();\r\n      setViewProgram();\r\n      setTableMinimize(false);\r\n      return false;\r\n    }\r\n\r\n    if (viewProgram !== undefined && viewProgram.titleId === programID) {\r\n      setViewProgram();\r\n      setViewedProgram();\r\n      setTableMinimize(false);\r\n    } else {\r\n      PrioritisationService.getTitleByID(\r\n        programID,\r\n        prioritisation.channelId\r\n      ).then((response) => {\r\n        setViewedProgram(programID);\r\n        availableProgramsRef.current.scrollToProgram();\r\n        setViewProgram(response.data);\r\n        setTableMinimize(true);\r\n      });\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleViewPriorityProgram = (programID) => {\r\n    if (viewedProgram === programID) {\r\n      setViewedProgram();\r\n      setViewProgram();\r\n      setTableMinimize(false);\r\n      return false;\r\n    }\r\n\r\n    if (viewProgram !== undefined && viewProgram.titleId === programID) {\r\n      setViewProgram();\r\n      setViewedProgram();\r\n      setTableMinimize(false);\r\n    } else {\r\n      PrioritisationService.getTitleByID(\r\n        programID,\r\n        prioritisation.channelId\r\n      ).then((response) => {\r\n        setViewProgram(response.data);\r\n        setViewedProgram(programID);\r\n        prioritisedProgramRef.current.scrollToProgram();\r\n        setTableMinimize(true);\r\n      });\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setViewProgram();\r\n    setViewedProgram(null);\r\n    setTableMinimize(false);\r\n  };\r\n\r\n  const constructQueryString = (filters, parameters, search) => {\r\n    const searchKeyParam =\r\n      search !== undefined && search !== '' ? `&SearchKey=${search}` : '';\r\n    const titleFilterParam =\r\n      filterModel.titleFilter !== undefined\r\n        ? `&titleFilter=${filterModel.titleFilter}`\r\n        : '';\r\n    const titleFilterValueParam =\r\n      filterModel.titleFilterValue !== undefined\r\n        ? `&titleFilterValue=${filterModel.titleFilterValue}`\r\n        : '';\r\n    const genreFilterParam =\r\n      filterModel.genreFilter !== undefined\r\n        ? `&genreFilter=${filterModel.genreFilter}`\r\n        : '';\r\n    const genreFilterValueParam =\r\n      filterModel.genreFilterValue !== undefined\r\n        ? `&genreFilterValue=${filterModel.genreFilterValue}`\r\n        : '';\r\n    const durationFilterParam =\r\n      filterModel.durationFilter !== undefined\r\n        ? `&durationFilter=${filterModel.durationFilter}`\r\n        : '';\r\n    const durationFilterValueParam =\r\n      filterModel.durationFilterValue !== undefined\r\n        ? `&durationFilterValue=${filterModel.durationFilterValue}`\r\n        : '';\r\n    const gradeFilterParam =\r\n      filterModel.gradeFilter !== undefined\r\n        ? `&gradeFilter=${filterModel.gradeFilter}`\r\n        : '';\r\n    const gradeFilterValueParam =\r\n      filterModel.gradeFilterValue !== undefined\r\n        ? `&gradeFilterValue=${filterModel.gradeFilterValue}`\r\n        : '';\r\n    const yearFilterParam =\r\n      filterModel.yearFilter !== undefined\r\n        ? `&yearFilter=${filterModel.yearFilter}`\r\n        : '';\r\n    const yearFilterValueParam =\r\n      filterModel.yearFilterValue !== undefined\r\n        ? `&yearFilterValue=${filterModel.yearFilterValue}`\r\n        : '';\r\n    const sortByParam =\r\n      filterModel.sortBy !== undefined\r\n        ? `&SortOrder=${filterModel.sortBy}`\r\n        : '';\r\n    const sortParam =\r\n      filterModel.userSort !== undefined\r\n        ? `&ProgramSort=${filterModel.userSort}`\r\n        : '';\r\n    const certificate =\r\n      filterModel.certificateFilter && filterModel.certificateFilterValue\r\n        ? `&certificateFilter=${filterModel.certificateFilter}&certificateFilterValue=${filterModel.certificateFilterValue}`\r\n        : '';\r\n\r\n    let queryString =\r\n      `?Page=${\r\n        parameters.page === 0 || saveSearchKey !== search ? 1 : parameters.page\r\n      }` +\r\n      `&Size=${parameters.size}${searchKeyParam}${sortParam}${sortByParam}${titleFilterParam}${titleFilterValueParam}${genreFilterParam}${genreFilterValueParam}${durationFilterParam}${durationFilterValueParam}${gradeFilterParam}${gradeFilterValueParam}${yearFilterParam}${yearFilterValueParam}${certificate}`;\r\n\r\n    if (queryString.includes('+')) {\r\n      queryString = queryString.replace('+', '%2B');\r\n    }\r\n\r\n    return queryString;\r\n  };\r\n\r\n  const getPrioritisedPrograms = (programList) => {\r\n    setIsLoadingPrioritise(true);\r\n    let prioritisedProgramsList = programList;\r\n    if (prioritisedSort === 1) {\r\n      prioritisedProgramsList = prioritisedProgramsList.sort((a, b) => {\r\n        if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\r\n        return -1;\r\n      });\r\n    } else {\r\n      prioritisedProgramsList = prioritisedProgramsList.sort((a, b) => {\r\n        if (a.title.toLowerCase() > b.title.toLowerCase()) return -1;\r\n        return 1;\r\n      });\r\n    }\r\n\r\n    let pageNumber =\r\n      prioritisedProgramsList.length > 0 && prioritisedParameters.page === 0\r\n        ? 1\r\n        : prioritisedParameters.page;\r\n    const { size } = prioritisedParameters;\r\n    let toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * size;\r\n\r\n    while (toSkip >= prioritisedProgramsList.length) {\r\n      pageNumber -= 1;\r\n      toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * size;\r\n    }\r\n    const priotizePrograms = prioritisedProgramsList.slice(\r\n      toSkip,\r\n      toSkip + size\r\n    );\r\n    setPrioritisedPrograms(priotizePrograms);\r\n\r\n    setPrioritisedParameters({ page: pageNumber, size });\r\n\r\n    setPrioritisedPaginationParameters({\r\n      totalCount: prioritisedProgramsList.length,\r\n      pageSize: size,\r\n      currentPage: pageNumber,\r\n      totalPages: Math.ceil(prioritisedProgramsList.length / size),\r\n    });\r\n\r\n    setIsLoadingPrioritise(false);\r\n  };\r\n\r\n  const getPrioritisedTitles = (prioritisedProgramsList) => {\r\n    const titleIds = prioritisedProgramsList.map((val) => val.id);\r\n    return titleIds;\r\n  };\r\n\r\n  const constructProgrammeTitles = (data) => {\r\n    const mappedData = data.map((item) => ({\r\n      ...item,\r\n      titleId: item.titleId,\r\n      title: item.title,\r\n      genreString: item.overrodeValues.genre || item.genreString,\r\n      duration: item.overrodeValues.duration || item.duration,\r\n      grade: item.overrodeValues.grade || item.grade,\r\n      certificate: item.overrodeValues.certificate || item.certificate,\r\n      year: item.overrodeValues.year || item.year,\r\n    }));\r\n\r\n    return mappedData;\r\n  };\r\n\r\n  const getPrograms = (\r\n    filters,\r\n    search,\r\n    fromSearch,\r\n    prioritiseList,\r\n    fromFilter\r\n  ) => {\r\n    if (selectedChannel !== 'Please select a channel') {\r\n      setIsLoadingPrograms(true);\r\n      const newAvailableParameters = availableParameters;\r\n      if (fromFilter) newAvailableParameters.page = 1;\r\n      const query = constructQueryString(\r\n        filters,\r\n        newAvailableParameters,\r\n        search\r\n      );\r\n      const titleList = getPrioritisedTitles(prioritiseList);\r\n      PrioritisationService.getTitles(\r\n        query,\r\n        prioritisation,\r\n        titleList,\r\n        fromSearch\r\n      ).then((response) => {\r\n        setRenderTimes(renderTimes + 1);\r\n        if (response.data.data.filter((o) => o.hasSegment).length === 0) {\r\n          setHasSegments(false);\r\n        } else {\r\n          setHasSegments(true);\r\n        }\r\n        const constructedProgrammeTitles = constructProgrammeTitles(\r\n          response.data.data\r\n        );\r\n        setAllPrograms(constructedProgrammeTitles);\r\n        setPrograms(constructedProgrammeTitles);\r\n\r\n        setAvailablePaginationParameters({\r\n          totalCount: response.data.totalData,\r\n          pageSize: response.data.size,\r\n          currentPage: response.data.page,\r\n          totalPages: response.data.totalPages,\r\n        });\r\n        setIsLoadingPrograms(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const getPrioritisedTitlesList = () => {\r\n    setIsLoadingPrioritise(true);\r\n    PrioritisationService.getPriorityList(prioritisation)\r\n      .then((response) => {\r\n        const { titles } = response.data;\r\n\r\n        setPrioritisedPaginationParameters({\r\n          totalCount: titles.length,\r\n          pageSize: prioritisedParameters.size,\r\n          currentPage: prioritisedParameters.page,\r\n          totalPages: Math.ceil(titles.length / prioritisedParameters.size),\r\n        });\r\n\r\n        let sortedPrioritisedTitles = JSON.parse(JSON.stringify(titles));\r\n        sortedPrioritisedTitles = sortedPrioritisedTitles.sort((a, b) => {\r\n          if (prioritisedSort === 1) {\r\n            if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\r\n            return -1;\r\n          } else {\r\n            if (a.title.toLowerCase() > b.title.toLowerCase()) return -1;\r\n            return 1;\r\n          }\r\n        });\r\n        setAllPrioritisePrograms(sortedPrioritisedTitles);\r\n        setSegments([]);\r\n\r\n        setViewProgram();\r\n        setTableMinimize(false);\r\n        const prioritizePrograms = sortedPrioritisedTitles.slice(\r\n          0,\r\n          prioritisedParameters.size\r\n        );\r\n\r\n        setPrioritisedPrograms(prioritizePrograms);\r\n        getPrograms(filterModel, searchKey, false, titles, true);\r\n      })\r\n      .finally(() => setIsLoadingPrioritise(false));\r\n  };\r\n\r\n  const handleAddProgram = () => {\r\n    if (\r\n      selectedProgramID === undefined ||\r\n      selectedProgramID === null ||\r\n      selectedProgramID.length === 0\r\n    ) {\r\n      danger('No selected Title');\r\n    } else {\r\n      let prioritised = allPrioritisePrograms;\r\n\r\n      const programsAdded = addedPrograms;\r\n      let programsRemoved = removedPrograms;\r\n      selectedProgramID.map((value) => {\r\n        const selectedProgram = allprograms.filter(\r\n          (program) => program.id === value\r\n        );\r\n        if (selectedProgram[0] !== undefined) {\r\n          // eslint-disable-next-line\r\n          prioritised[prioritised.length] = selectedProgram[0];\r\n        }\r\n\r\n        if (programsRemoved.includes(value)) {\r\n          const removeIndex = programsRemoved.indexOf(value);\r\n          if (programsRemoved.length === 1) {\r\n            programsRemoved = [];\r\n          } else {\r\n            programsRemoved = programsRemoved.splice(removeIndex - 1, 1);\r\n          }\r\n        } else {\r\n          programsAdded[programsAdded.length] = value;\r\n        }\r\n        return true;\r\n      });\r\n\r\n      if (prioritisedSort === 1) {\r\n        prioritised = prioritised.sort((a, b) => {\r\n          if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\r\n          return -1;\r\n        });\r\n      } else {\r\n        prioritised = prioritised.sort((a, b) => {\r\n          if (a.title.toLowerCase() > b.title.toLowerCase()) return -1;\r\n          return 1;\r\n        });\r\n      }\r\n      setAllPrioritisePrograms(prioritised);\r\n\r\n      setSelectedProgramID([]);\r\n      setHasSelectedPrograms(false);\r\n      getPrioritisedPrograms(prioritised);\r\n      getPrograms(filterModel, searchKey, true, prioritised);\r\n      setIsDirty(programsAdded.length > 0 || programsRemoved.length > 0);\r\n      setAddedPrograms(programsAdded);\r\n      setRemovedPrograms(programsRemoved);\r\n      setHasTitles(true);\r\n    }\r\n  };\r\n\r\n  const handleSelectProgram = (programID) => {\r\n    setSelectedProgramID(programID);\r\n    setHasSelectedPrograms(programID.length > 0);\r\n  };\r\n\r\n  const handleSelectPriorityProgram = (programID) => {\r\n    setSelectedPriorityProgramID(programID);\r\n    setHasSelectedPrioritise(programID.length > 0);\r\n  };\r\n\r\n  const handleRemoveProgram = () => {\r\n    if (\r\n      selectedPriorityProgramID === undefined ||\r\n      selectedPriorityProgramID === null ||\r\n      selectedPriorityProgramID.length === 0\r\n    ) {\r\n      danger('No selected Title');\r\n    } else {\r\n      let prioritiseList = allPrioritisePrograms;\r\n\r\n      let programsAdded = addedPrograms;\r\n      const programsRemoved = removedPrograms;\r\n      selectedPriorityProgramID.map((value) => {\r\n        prioritiseList = prioritiseList.filter(\r\n          (program) => program.id !== value\r\n        );\r\n\r\n        if (programsAdded.includes(value)) {\r\n          const removeIndex = programsAdded.indexOf(value);\r\n          if (programsAdded.length === 1) {\r\n            programsAdded = [];\r\n          } else {\r\n            programsAdded = programsAdded.splice(removeIndex - 1, 1);\r\n          }\r\n        } else {\r\n          programsRemoved[programsRemoved.length] = value;\r\n        }\r\n        return true;\r\n      });\r\n\r\n      setAllPrioritisePrograms(prioritiseList);\r\n      setSelectedPriorityProgramID([]);\r\n      setHasSelectedPrioritise(false);\r\n      getPrioritisedPrograms(prioritiseList);\r\n\r\n      setPrioritisedPaginationParameters({\r\n        totalCount: prioritiseList.length,\r\n        pageSize: prioritisedParameters.size,\r\n        currentPage: prioritisedParameters.page,\r\n        totalPages: Math.ceil(\r\n          prioritiseList.length / prioritisedParameters.size\r\n        ),\r\n      });\r\n      getPrograms(filterModel, searchKey, true, prioritiseList);\r\n\r\n      setIsDirty(programsAdded.length > 0 || programsRemoved.length > 0);\r\n      setAddedPrograms(programsAdded);\r\n      setRemovedPrograms(programsRemoved);\r\n      setHasTitles(true);\r\n    }\r\n  };\r\n\r\n  const handleRemoveAll = () => {\r\n    const emptyArray = [];\r\n    setIsDirty(true);\r\n    getPrioritisedPrograms(emptyArray);\r\n    setAllPrioritisePrograms(emptyArray);\r\n    getPrograms(filterModel, searchKey, true, emptyArray);\r\n  };\r\n\r\n  const getChannels = () => {\r\n    PrioritisationService.getChannels().then((response) => {\r\n      const channels = response.data;\r\n      const channelList = [];\r\n      channels.map((value) => {\r\n        channelList.push({ id: value.channelId, name: value.channelName });\r\n        return true;\r\n      });\r\n      setChannelOptions(channelList);\r\n    });\r\n  };\r\n\r\n  const paginateAvalailablePrograms = (pageNumber, size) => {\r\n    setHasSelectedPrograms(false);\r\n    setSelectedProgramID([]);\r\n    setSelectedPriorityProgramID([]);\r\n    setHasSelectedPrioritise(false);\r\n    setIsLoadingPrograms(true);\r\n    setAvailableParameters({\r\n      page: pageNumber,\r\n      size,\r\n    });\r\n    setIsLoadingPrograms(false);\r\n  };\r\n\r\n  const paginatePrioritisedPrograms = (pageNumber, size) => {\r\n    setHasSelectedPrograms(false);\r\n    setSelectedProgramID([]);\r\n    setSelectedPriorityProgramID([]);\r\n    setHasSelectedPrioritise(false);\r\n    setIsLoadingPrioritise(true);\r\n    let toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * size;\r\n    const programList = allPrioritisePrograms;\r\n    let page = pageNumber;\r\n    while (toSkip >= programList.length) {\r\n      page -= 1;\r\n      toSkip = page === 1 ? 0 : (page - 1) * size;\r\n    }\r\n\r\n    const priotizePrograms = programList.slice(toSkip, toSkip + size);\r\n    setPrioritisedPrograms(priotizePrograms);\r\n    setPrioritisedParameters({ page, size });\r\n\r\n    setPrioritisedPaginationParameters({\r\n      totalCount: programList.length,\r\n      pageSize: size,\r\n      currentPage: page,\r\n      totalPages: Math.ceil(programList.length / size),\r\n    });\r\n    setIsLoadingPrioritise(false);\r\n  };\r\n\r\n  const handleSavePriotisation = () => {\r\n    if (isTitleGroupDirty) {\r\n      setSaveTitleGroupDirty(true);\r\n      cleanDirtyForm();\r\n      confirmNavigation();\r\n    } else {\r\n      let valid = true;\r\n      const titleIDs = [];\r\n      setIsSaving(true);\r\n      if (!isDirty) {\r\n        danger('Select Prioritised Title');\r\n        valid = false;\r\n      } else {\r\n        allPrioritisePrograms.map((value) => {\r\n          titleIDs.push(value.id);\r\n          return true;\r\n        });\r\n      }\r\n      let error = '';\r\n      if (prioritisation.channelId == null) {\r\n        error = 'Channel';\r\n\r\n        valid = false;\r\n      }\r\n      if (prioritisation.month == null) {\r\n        error = error === '' ? 'Month' : `${error}, Month`;\r\n        valid = false;\r\n      }\r\n      if (prioritisation.year == null) {\r\n        error = error === '' ? 'Year' : `${error}, Year`;\r\n        valid = false;\r\n      }\r\n\r\n      if (error !== '') {\r\n        danger(`${error} is required`);\r\n      }\r\n\r\n      if (valid) {\r\n        const prioritisationParameters = {\r\n          titleIds: titleIDs,\r\n          channelId: prioritisation.channelId,\r\n          month: prioritisation.month,\r\n          year: prioritisation.year,\r\n        };\r\n        PrioritisationService.savePriotisation(prioritisationParameters)\r\n          .then(() => {\r\n            cleanDirtyForm();\r\n            setHasTitles(false);\r\n            setIsSaving(false);\r\n            success('Prioritisation Saved');\r\n            confirmNavigation();\r\n          })\r\n          .finally(() => {\r\n            cancelNavigation();\r\n          });\r\n      } else {\r\n        setIsSaving(false);\r\n      }\r\n    }\r\n    handleChangeTab();\r\n  };\r\n\r\n  const handleSort = (id) => {\r\n    const newArr = sortBy;\r\n\r\n    if (newArr[id].state === true) {\r\n      newArr[id].state = false;\r\n    } else {\r\n      newArr[id].state = true;\r\n    }\r\n\r\n    setSortBy(newArr);\r\n  };\r\n\r\n  const searchRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setViewProgram();\r\n    setViewedProgram(null);\r\n    setTableMinimize(false);\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      prioritisedPaginationParameters.currentPage >\r\n      prioritisedPaginationParameters.totalPages\r\n    ) {\r\n      setPrioritisedPaginationParameters((prevState) => ({\r\n        ...prevState,\r\n        currentPage: prioritisedPaginationParameters.totalPages,\r\n      }));\r\n      setPrioritisedParameters((prevState) => ({\r\n        ...prevState,\r\n        page: prioritisedPaginationParameters.totalPages,\r\n      }));\r\n\r\n      const { size } = prioritisedParameters;\r\n      const toSkip =\r\n        prioritisedPaginationParameters.totalPages === 1\r\n          ? 0\r\n          : (prioritisedPaginationParameters.totalPages - 1) * size;\r\n      const selectedItems = prioritisedPrograms.slice(toSkip, toSkip + size);\r\n      setPrioritisedPrograms(selectedItems);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [prioritisedPaginationParameters]);\r\n\r\n  useEffect(() => {\r\n    const backdropClicked = (e) => {\r\n      if (\r\n        saveSearchKey &&\r\n        searchRef.current &&\r\n        !searchRef.current.contains(e.target)\r\n      ) {\r\n        setSearchKey(saveSearchKey);\r\n        setClearSearchIsActive(true);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  }, [searchRef, saveSearchKey]);\r\n\r\n  const onChangeSearchKey = (e) => {\r\n    setSearchKey(e.target.value);\r\n    setClearSearchIsActive(false);\r\n  };\r\n\r\n  const searchList = () => {\r\n    getPrograms(filterModel, searchKey, true, allPrioritisePrograms);\r\n    setSaveSearchKey(searchKey);\r\n    setClearSearchIsActive(true);\r\n  };\r\n\r\n  const clearSearchList = () => {\r\n    setSearchKey('');\r\n    setSaveSearchKey('');\r\n    getPrograms(filterModel, '', true, allPrioritisePrograms);\r\n    setClearSearchIsActive(false);\r\n  };\r\n\r\n  const triggerSearchList = (e) => {\r\n    if (e.key === 'Enter') searchList();\r\n  };\r\n\r\n  const handleSortPrioritised = (model) => {\r\n    setIsLoadingPrioritise(true);\r\n    setPrioritisedSort(model.sortBy);\r\n    let programList = allPrioritisePrograms;\r\n    if (model.sortBy === 1) {\r\n      programList = programList.sort((a, b) => {\r\n        if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\r\n        return -1;\r\n      });\r\n    } else {\r\n      programList = programList.sort((a, b) => {\r\n        if (a.title.toLowerCase() > b.title.toLowerCase()) return -1;\r\n        return 1;\r\n      });\r\n    }\r\n    setAllPrioritisePrograms(programList);\r\n\r\n    let pageNumber =\r\n      programList.length > 0 && prioritisedParameters.page === 0\r\n        ? 1\r\n        : prioritisedParameters.page;\r\n    const { size } = prioritisedParameters;\r\n    let toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * size;\r\n\r\n    while (toSkip >= programList.length) {\r\n      pageNumber -= 1;\r\n      toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * size;\r\n    }\r\n    const priotizePrograms = programList.slice(toSkip, toSkip + size);\r\n    setPrioritisedPrograms(priotizePrograms);\r\n\r\n    setPrioritisedParameters({ page: pageNumber, size });\r\n\r\n    setPrioritisedPaginationParameters({\r\n      totalCount: programList.length,\r\n      pageSize: size,\r\n      currentPage: pageNumber,\r\n      totalPages: Math.ceil(programList.length / size),\r\n    });\r\n\r\n    setIsLoadingPrioritise(false);\r\n  };\r\n  const handleChangeFileInput = () => {\r\n    const { files } = fileUploadRef.current;\r\n    setFileNameUploaded(files[0].name);\r\n  };\r\n  const handleImportFile = () => {\r\n    setLoadingUpload(true);\r\n    const { files } = fileUploadRef.current;\r\n    const file = files[0];\r\n    setUploadError('');\r\n    if (file === undefined) {\r\n      setUploadError('No file selected');\r\n      setLoadingUpload(false);\r\n    } else {\r\n      const fileExtension = file.name.split('.').pop();\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      if (fileExtension === 'xlsx' || fileExtension === 'csv') {\r\n        PrioritisationService.uploadFile(\r\n          formData,\r\n          prioritisation.channelId,\r\n          prioritisation.year,\r\n          prioritisation.month,\r\n          fileExtension\r\n        )\r\n          .then((response) => {\r\n            setModalShow(false);\r\n            setModalSuccessShow(true);\r\n            let count = 0;\r\n            response.data.items.map((value) => {\r\n              if (value.successfullyImported) count += 1;\r\n              return true;\r\n            });\r\n            getPrograms(filterModel, searchKey, false, allPrioritisePrograms);\r\n            setSuccessCount(count);\r\n            setAllUploadedTitles(response.data.items);\r\n            setUploadedTitles(response.data.items);\r\n            setUploadedTitleFilter('all');\r\n          })\r\n          .catch((error) => {\r\n            setUploadError(error.response.data.message);\r\n          })\r\n          .finally(() => {\r\n            setLoadingUpload(false);\r\n          });\r\n      } else {\r\n        setUploadError(\r\n          'Uploaded file type is not supported. Please use files in the following format (xlsx)'\r\n        );\r\n      }\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  const handleChangeRadio = (name) => {\r\n    setUploadedTitleFilter(name);\r\n    if (name === 'imported') {\r\n      setUploadedTitles(\r\n        allUploadedTitles.filter((o) => o.successfullyImported)\r\n      );\r\n    } else if (name === 'notimported') {\r\n      setUploadedTitles(\r\n        allUploadedTitles.filter((o) => !o.successfullyImported)\r\n      );\r\n    } else {\r\n      setUploadedTitles(allUploadedTitles);\r\n    }\r\n  };\r\n\r\n  const exportExcelFile = () => {\r\n    PrioritisationService.exportUploadSample().then((response) => {\r\n      const blob = new Blob([response.data], {\r\n        type:\r\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n      });\r\n      saveAs(blob, 'sample_titles_export.xlsx');\r\n    });\r\n  };\r\n\r\n  const handleProceedImport = () => {\r\n    setModalVerifyShow(false);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const handleCloseSegments = () => {\r\n    setSegments([]);\r\n    setTableMinimize(false);\r\n  };\r\n\r\n  const getSegments = (programID) => {\r\n    PrioritisationService.getSegments(programID).then((response) => {\r\n      setTableMinimize(true);\r\n      if (segments.length === 0) {\r\n        setSegments(response.data.segments);\r\n      } else if (response.data.segments[0].id !== segments[0].id) {\r\n        setSegments(response.data.segments);\r\n      } else handleCloseSegments();\r\n    });\r\n  };\r\n\r\n  const generateSegments = () => {\r\n    setModalVerifySegmentsShow(false);\r\n    setModalLoadingShow(true);\r\n\r\n    PrioritisationService.generateSegments(prioritisation).then((response) => {\r\n      let count = 0;\r\n      response.data.items.map((value) => {\r\n        if (value.segmentsUpdated) count += 1;\r\n        return true;\r\n      });\r\n      getPrograms(filterModel, searchKey, false, allPrioritisePrograms);\r\n      setSuccessCount(count);\r\n      setAllUploadedTitles(response.data.items);\r\n      setUploadedTitles(response.data.items);\r\n      setUploadedTitleFilter('all');\r\n      setModalLoadingShow(false);\r\n      setModalSegmentsShow(true);\r\n    });\r\n  };\r\n\r\n  const handleChangeSegmentsRadio = (name) => {\r\n    setUploadedTitleFilter(name);\r\n    if (name === 'updated') {\r\n      setUploadedTitles(allUploadedTitles.filter((o) => o.segmentsUpdated));\r\n    } else if (name === 'notfound') {\r\n      setUploadedTitles(allUploadedTitles.filter((o) => !o.segmentsUpdated));\r\n    } else {\r\n      setUploadedTitles(allUploadedTitles);\r\n    }\r\n  };\r\n\r\n  const handleGetSegments = () => {\r\n    if (hasSegments) setModalVerifySegmentsShow(true);\r\n    else generateSegments();\r\n  };\r\n\r\n  const constructPrioritisationSessionParameters = (parameters) => {\r\n    const channelIdParam =\r\n      parameters.channelId || parameters.channelID\r\n        ? `?channelId=${\r\n            parameters.channelId ? parameters.channelId : parameters.channelID\r\n          }`\r\n        : '';\r\n    const monthParam = parameters.monthID\r\n      ? `&monthID=${parameters.monthID}`\r\n      : '';\r\n    const yearParam = parameters.year\r\n      ? `&year=${parameters.year}`\r\n      : `&year=${yearOptions[0].id}`;\r\n\r\n    return `${channelIdParam}${monthParam}${yearParam}`;\r\n  };\r\n\r\n  const handleGetPrioritisationSession = () => {\r\n    PrioritisationService.getPrioritisationSession().then((response) => {\r\n      const channel = channelOptions.find(\r\n        (o) => o.id === response.data.channelID\r\n      );\r\n      const month =\r\n        response.data.monthID > 0\r\n          ? monthOptions.find((o) => o.id === response.data.monthID)\r\n          : monthOptions[0];\r\n      const year = yearOptions.find(\r\n        (o) => o.name.toString() === response.data.year\r\n      );\r\n      setPrioritisationSessionParameters(response.data);\r\n      channel && setSelectedChannel(channel.name);\r\n      if(year){\r\n        setSelectedYear(year.id)\r\n      };\r\n      setSelectedMonth(month?.value);\r\n      setPrioritisation({\r\n        ...prioritisation,\r\n        channelId: channel ? channel.id : null,\r\n        month: month.id,\r\n        year: year?.id,\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleSavePrioritisationSession = () => {\r\n    PrioritisationService.savePrioritisationSession(\r\n      constructPrioritisationSessionParameters(prioritisationSessionParameters)\r\n    );\r\n  };\r\n\r\n  const handleSelectChannel = (selected) => {\r\n    if (isDirty || isTitleGroupDirty) {\r\n      setNextFilter({ input: 'channel', selected });\r\n      setShowConfirmLeaveModal(true);\r\n    } else {\r\n      setSearchKey('');\r\n      setAllPrioritisePrograms([]);\r\n      setClearSearchIsActive(false);\r\n      setSelectedChannel(selected.name);\r\n      setPrioritisation((prevState) => ({\r\n        ...prevState,\r\n        channelId: selected.id,\r\n      }));\r\n      setFilterModel({ ...filterModel, channelId: selected.id });\r\n      onChangeFormSetPrioritisationSessionParameters({\r\n        channelID: selected.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelectMonth = (selected) => {\r\n    if (isDirty || isTitleGroupDirty) {\r\n      setNextFilter({ input: 'month', selected });\r\n      setShowConfirmLeaveModal(true);\r\n    } else {\r\n      setSearchKey('');\r\n      setClearSearchIsActive(false);\r\n      setSelectedMonth(selected.value);\r\n      setPrioritisation((prevState) => ({\r\n        ...prevState,\r\n        month: selected.id,\r\n      }));\r\n      onChangeFormSetPrioritisationSessionParameters({ monthID: selected.id });\r\n    }\r\n  };\r\n\r\n  const handleSelectYear = (selected) => {\r\n    if (isDirty || isTitleGroupDirty) {\r\n      setNextFilter({ input: 'year', selected });\r\n      setShowConfirmLeaveModal(true);\r\n    } else {\r\n      setSearchKey('');\r\n      setClearSearchIsActive(false);\r\n      setSelectedYear(selected.id);\r\n      setPrioritisation((prevState) => ({\r\n        ...prevState,\r\n        year: selected.id,\r\n      }));\r\n      onChangeFormSetPrioritisationSessionParameters({ year: selected.id });\r\n    }\r\n  };\r\n\r\n  const cancelDirtyForm = () => {\r\n    setNextTab();\r\n    setNextFilter({});\r\n  };\r\n\r\n  const isPrioritisationNotNull = () => {\r\n    return (\r\n      prioritisation.channelId &&\r\n      prioritisation.month &&\r\n      prioritisation.year &&\r\n      prioritisation.channelId !== null &&\r\n      prioritisation.month !== null &&\r\n      prioritisation.year !== null\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChannels();\r\n    ProfileService.getUser(AuthService.getUserIdentity().userId).then(\r\n      (response) => {\r\n        setTitleSource(response.data.organisationTitleSource);\r\n      }\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isPrioritisationNotNull() && activeTab === 'Titles') {\r\n      getPrograms(filterModel, searchKey, false, allPrioritisePrograms, true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filterModel, activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (isPrioritisationNotNull() && activeTab === 'Titles') {\r\n      getPrioritisedTitlesList();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [prioritisation, activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (isPrioritisationNotNull()) {\r\n      getPrograms(filterModel, searchKey, true, allPrioritisePrograms);\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [availableParameters]);\r\n\r\n  useEffect(() => {\r\n    if (channelOptions.length >= 1) {\r\n      handleGetPrioritisationSession();\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [channelOptions]);\r\n\r\n  useEffect(() => {\r\n    if (prioritisationSessionParameters) {\r\n      if (renderTimes > 0) {\r\n        handleSavePrioritisationSession();\r\n      }\r\n    }\r\n    setRenderTimes(renderTimes + 1);\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [prioritisationSessionParameters]);\r\n\r\n  useEffect(() => {\r\n    if (!isTitleGroupDirty && Object.keys(nextFilter).length > 0) {\r\n      handleDiscardChanges();\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [isTitleGroupDirty]);\r\n\r\n  useEffect(() => {\r\n    if (nextTab) {\r\n      if (isDirty || isTitleGroupDirty) setShowConfirmLeaveModal(true);\r\n    }\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n  }, [nextTab]);\r\n\r\n  const segmentButtonColor = () => {\r\n    if (!hasTitles) return '#b1b1b1';\r\n    if (hasSegments) return '#008662';\r\n    return '#FF7878';\r\n  };\r\n\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      label: 'Titles',\r\n      component: (\r\n        <>\r\n          <div className=\"d-flex\">\r\n            <div style={{ width: '60%' }}>\r\n              {selectedChannel === 'Please select a channel' ? (\r\n                <div\r\n                  className={\r\n                    tableMinimize\r\n                      ? Styles.divNoAvailableChannelSelectedSmall\r\n                      : Styles.divNoAvailableChannelSelected\r\n                  }\r\n                >\r\n                  <div\r\n                    style={{ display: 'table-cell', verticalAlign: 'middle' }}\r\n                  >\r\n                    <div>\r\n                      Please select a channel to list its available programme\r\n                      titles.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {!prioritisation.channelId ? (\r\n                    <div className={`${Styles.divNoAvailableChannelSelected}`}>\r\n                      <div\r\n                        style={{\r\n                          display: 'table-cell',\r\n                          verticalAlign: 'middle',\r\n                        }}\r\n                      >\r\n                        {titleSource === 2 ? (\r\n                          <>\r\n                            <div>\r\n                              No available programme titles in this channel\r\n                              covering the selected period.\r\n                            </div>\r\n                            <div style={{ marginTop: '40px' }}>\r\n                              You can add program titles by clicking import.\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <div>\r\n                            Please select a channel to list its available\r\n                            programme titles.\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className={Styles.tableLabel}>\r\n                        Available programme titles:\r\n                      </div>\r\n\r\n                      <AvailableProgramsComponent\r\n                        ref={availableProgramsRef}\r\n                        programs={programs}\r\n                        callbackViewProgram={handleViewProgram}\r\n                        handleSelectProgram={handleSelectProgram}\r\n                        isLoading={isLoadingPrograms || isLoadingPrioritise}\r\n                        availablePaginationParameters={\r\n                          availablePaginationParameters\r\n                        }\r\n                        paginate={paginateAvalailablePrograms}\r\n                        selectedPrograms={selectedProgramID}\r\n                        handleSetSortBy={handleSort}\r\n                        setFilterModel={setFilterModel}\r\n                        filterModel={filterModel}\r\n                        selectedChannel={selectedChannel}\r\n                        callbackViewSegment={getSegments}\r\n                        viewedProgram={viewedProgram}\r\n                        tableMinimize={tableMinimize}\r\n                        titleSource={titleSource}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className={Styles.divButtons}>\r\n              <button\r\n                onClick={handleAddProgram}\r\n                disabled={!hasSelectedPrograms}\r\n                type=\"button\"\r\n              >\r\n                Add Selected\r\n                <img style={{ marginTop: '11px' }} src={arrowLeftIcon} alt=\"\" />\r\n              </button>\r\n              <button\r\n                onClick={handleRemoveAll}\r\n                style={{ paddingTop: '9px' }}\r\n                disabled={allPrioritisePrograms.length === 0}\r\n                type=\"button\"\r\n              >\r\n                <img style={{ marginTop: '2px' }} src={arrowRightIcon} alt=\"\" />\r\n                <span style={{ marginLeft: '5px' }}>Remove All</span>\r\n              </button>\r\n              <button\r\n                onClick={handleRemoveProgram}\r\n                disabled={\r\n                  !hasSelectedPrioritise || allPrioritisePrograms.length === 0\r\n                }\r\n                type=\"button\"\r\n              >\r\n                <img\r\n                  style={{ marginTop: '11px' }}\r\n                  src={arrowRightIcon}\r\n                  alt=\"\"\r\n                />\r\n                Remove Selected\r\n              </button>\r\n            </div>\r\n\r\n            <div style={{ width: '33%' }}>\r\n              {selectedChannel === 'Please select a channel' ||\r\n              (allPrioritisePrograms.length === 0 && !isLoadingPrioritise) ? (\r\n                <div\r\n                  className={`${\r\n                    tableMinimize\r\n                      ? Styles.divNoAvailableChannelSelectedSmall\r\n                      : Styles.divNoAvailableChannelSelected\r\n                  }`}\r\n                  style={{ fontSize: '28px' }}\r\n                >\r\n                  <div\r\n                    style={{ display: 'table-cell', verticalAlign: 'middle' }}\r\n                  >\r\n                    <div>\r\n                      Please select and add programme titles to prioritise\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className={Styles.tableLabel}>\r\n                    Prioritised programme titles:\r\n                  </div>\r\n                  <PrioritisedProgramsComponent\r\n                    ref={prioritisedProgramRef}\r\n                    programs={prioritisedPrograms}\r\n                    callbackViewProgram={handleViewPriorityProgram}\r\n                    handleSelectProgram={handleSelectPriorityProgram}\r\n                    paginationParameters={prioritisedPaginationParameters}\r\n                    paginate={paginatePrioritisedPrograms}\r\n                    selectedPrograms={selectedPriorityProgramID}\r\n                    viewProgram={viewProgram}\r\n                    handleSortPrioritised={handleSortPrioritised}\r\n                    callbackViewSegment={getSegments}\r\n                    tableMinimize={tableMinimize}\r\n                    titleSource={titleSource}\r\n                    viewedProgram={viewedProgram}\r\n                    isLoading={isLoadingPrioritise}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {viewedProgram && (\r\n            <div style={{ width: '100%', marginTop: '8px' }}>\r\n              {titleSource === 1 ? (\r\n                <ProgramDetailsComponent\r\n                  component=\"Prioritisation\"\r\n                  program={viewProgram}\r\n                  callbackCloseDetails={handleCloseDetails}\r\n                />\r\n              ) : (\r\n                <ImportProgramDetailsComponent\r\n                  component=\"Prioritisation\"\r\n                  program={viewProgram}\r\n                  callbackCloseDetails={handleCloseDetails}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ float: 'right', marginTop: '8px' }}>\r\n            <Button\r\n              text=\"Save\"\r\n              isLoading={isSaving}\r\n              onClick={handleSavePriotisation}\r\n              disabled={!isDirty}\r\n            />\r\n          </div>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Title Groups',\r\n      component: (\r\n        <TitleGroupComponent\r\n          prioritisation={prioritisation}\r\n          setChanged={(e) => setIsTitleGroupDirty(e)}\r\n          changed={isTitleGroupDirty}\r\n          discardTitleGroupDirty={discardTitleGroupDirty}\r\n          setDiscardTitleGroupDirty={(e) => setDiscardTitleGroupDirty(e)}\r\n          saveTitleGroupDirty={saveTitleGroupDirty}\r\n          setSaveTitleGroupDirty={(e) => setSaveTitleGroupDirty(e)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <BannerComponent\r\n        componentName=\"Prioritisation\"\r\n        isAddButtonHidden\r\n        isSearchHidden\r\n      />\r\n\r\n      <hr style={{ background: 'rgb(200, 200, 200)' }} />\r\n      <div className={`row ${Styles.marginBottom}`}>\r\n        <div style={{ width: '80px' }}>\r\n          <div className={Styles.channelLabel}>Channel:</div>\r\n        </div>\r\n        <div style={{ width: '300px' }}>\r\n          <SelectComponent\r\n            text={selectedChannel}\r\n            list={channelOptions}\r\n            onSelect={handleSelectChannel}\r\n            width=\"300px\"\r\n            withSearch\r\n          />\r\n        </div>\r\n        <div style={{ width: 'auto', marginLeft: '10px' }}>\r\n          <div className={Styles.channelLabel}>Month:</div>\r\n        </div>\r\n        <div style={{ width: '180px', paddingLeft: '0' }}>\r\n          <SelectComponentCustom\r\n            text={selectedMonth}\r\n            list={monthOptions}\r\n            onSelect={handleSelectMonth}\r\n            width=\"180px\"\r\n          />\r\n        </div>\r\n        <div style={{ width: 'auto', marginLeft: '10px' }}>\r\n          <div className={Styles.channelLabel}>Year:</div>\r\n        </div>\r\n        <div style={{ width: '150px', paddingLeft: '0' }}>\r\n          <SelectComponent\r\n            text={selectedYear}\r\n            list={yearOptions}\r\n            onSelect={handleSelectYear}\r\n            width=\"150px\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          className={`${Styles.importButton}`}\r\n          style={{\r\n            display: titleSource === 2 ? null : 'none',\r\n            cursor: 'pointer',\r\n            backgroundColor:\r\n              selectedChannel === 'Please select a channel'\r\n                ? '#b1b1b1'\r\n                : '#008662',\r\n          }}\r\n          onClick={() => {\r\n            setFileNameUploaded('');\r\n            setUploadError('');\r\n            if (allprograms.length === 0) setModalShow(true);\r\n            else setModalVerifyShow(true);\r\n          }}\r\n          disabled={selectedChannel === 'Please select a channel'}\r\n          type=\"button\"\r\n        >\r\n          Import\r\n        </button>\r\n\r\n        <button\r\n          className={`${Styles.importButton}`}\r\n          style={{\r\n            display: titleSource === 2 ? null : 'none',\r\n            cursor: hasTitles ? 'pointer' : 'not-allowed',\r\n            backgroundColor: segmentButtonColor(),\r\n            width: 'auto',\r\n          }}\r\n          disabled={!hasTitles}\r\n          onClick={handleGetSegments}\r\n          type=\"button\"\r\n        >\r\n          {hasSegments ? 'Update Segments' : 'Get Segments'}\r\n        </button>\r\n      </div>\r\n\r\n      <TabsComponent\r\n        activeTab={activeTab}\r\n        labelList={tabs}\r\n        dirty={isDirty || isTitleGroupDirty}\r\n        tabChange={(e) => setNextTab(e)}\r\n        setActive={(e) => setActiveTab(e)}\r\n      />\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          {loadingUpload ? (\r\n            <div\r\n              style={{\r\n                fontSize: '50px',\r\n                color: '#13ad83',\r\n                backgroundColor: 'transparent',\r\n                position: 'relative',\r\n                height: '145px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontSize: '16px',\r\n                  color: '#000',\r\n                  textAlign: 'center',\r\n                  width: '715px',\r\n                }}\r\n              >\r\n                Importing and validation programme titles from sample.csv...\r\n              </div>\r\n\r\n              <i\r\n                className=\"fas fa-circle-notch fa-spin mr-1\"\r\n                style={{\r\n                  top: 0,\r\n                  bottom: 0,\r\n                  left: 0,\r\n                  right: 0,\r\n                  margin: 'auto',\r\n                  position: 'absolute',\r\n                  height: '50px',\r\n                  width: '50px',\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div style={{ fontWeight: 'bolder' }}>Import program titles</div>\r\n              <div>\r\n                <small>\r\n                  Download a{' '}\r\n                  <small\r\n                    style={{\r\n                      color: '#008662',\r\n                      textDecoration: 'none',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    onClick={exportExcelFile}\r\n                    onKeyDown={exportExcelFile}\r\n                    role=\"presentation\"\r\n                  >\r\n                    sample template\r\n                  </small>{' '}\r\n                  to see an example of the required format.\r\n                </small>\r\n              </div>\r\n              <div>\r\n                <small style={{ color: 'red' }}>{uploadError}</small>\r\n              </div>\r\n              <button\r\n                style={{\r\n                  marginTop: '30px',\r\n                  marginLeft: '0',\r\n                }}\r\n                className={Styles.importButton}\r\n                onClick={() => {\r\n                  fileUploadRef.current.click();\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                Choose file\r\n              </button>\r\n              <small style={{ marginLeft: '15px' }}>{fileNameUploaded}</small>\r\n              <input\r\n                ref={fileUploadRef}\r\n                type=\"file\"\r\n                accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, .csv\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleChangeFileInput}\r\n              />\r\n              <div\r\n                style={{\r\n                  paddingTop: '10px',\r\n                }}\r\n              >\r\n                <small>Acceptable formats: Excel, CSV</small>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  textAlign: 'right',\r\n                  paddingTop: '30px',\r\n                }}\r\n              >\r\n                <button\r\n                  className={Styles.cancelButton}\r\n                  onClick={() => setModalShow(false)}\r\n                  type=\"button\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className={Styles.importButton}\r\n                  onClick={handleImportFile}\r\n                  type=\"button\"\r\n                >\r\n                  Import\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={modalSuccessShow}\r\n        onHide={() => setModalSuccessShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <b>{` ${successCount} `}</b>\r\n            programs out of\r\n            <b>{` ${allUploadedTitles.length} `}</b>\r\n            were successfully imported and validated!\r\n          </div>\r\n\r\n          <div className={`${Styles.successDiv}`}>\r\n            <table>\r\n              <tbody className={`${Styles.successBody}`}>\r\n                {uploadedTitles.map((value) => (\r\n                  <tr\r\n                    key={value.id}\r\n                    className={`${Styles.trBorder}`}\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    <td className=\"table-body-column\" style={{ width: '90%' }}>\r\n                      {value.title}\r\n                    </td>\r\n                    <td className=\"table-body-column\">\r\n                      <i>\r\n                        <img\r\n                          src={value.successfullyImported ? checkIcon : xIcon}\r\n                          alt=\"\"\r\n                        />\r\n                      </i>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div style={{ marginTop: '10px' }}>\r\n            <div\r\n              className=\"form-check\"\r\n              style={{ marginRight: '20px', display: 'inline-block' }}\r\n              onClick={() => handleChangeRadio('all')}\r\n              onKeyDown={() => handleChangeRadio('all')}\r\n              role=\"presentation\"\r\n            >\r\n              <input\r\n                className={`${Styles.formCheck} form-check-input`}\r\n                type=\"radio\"\r\n                name=\"successFilter\"\r\n                id=\"flexRadioDefault1\"\r\n                checked={uploadedTitleFilter === 'all'}\r\n              />\r\n              <div className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                Show all\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"form-check\"\r\n              style={{ marginRight: '20px', display: 'inline-block' }}\r\n              onClick={() => handleChangeRadio('imported')}\r\n              onKeyDown={() => handleChangeRadio('imported')}\r\n              role=\"presentation\"\r\n            >\r\n              <input\r\n                className={`${Styles.formCheck} form-check-input`}\r\n                type=\"radio\"\r\n                name=\"successFilter\"\r\n                id=\"flexRadioDefault2\"\r\n                checked={uploadedTitleFilter === 'imported'}\r\n              />\r\n              <div className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n                Imported\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"form-check\"\r\n              style={{ marginRight: '20px', display: 'inline-block' }}\r\n              onClick={() => handleChangeRadio('notimported')}\r\n              onKeyDown={() => handleChangeRadio('notimported')}\r\n              role=\"presentation\"\r\n            >\r\n              <input\r\n                className={`${Styles.formCheck} form-check-input`}\r\n                type=\"radio\"\r\n                name=\"successFilter\"\r\n                id=\"flexRadioDefault3\"\r\n                checked={uploadedTitleFilter === 'notimported'}\r\n              />\r\n              <div className=\"form-check-label\" htmlFor=\"flexRadioDefault3\">\r\n                Not imported\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: 'right',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.saveButton}\r\n              onClick={() => setModalSuccessShow(false)}\r\n              style={{ marginRight: '0' }}\r\n              type=\"button\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"md\"\r\n        show={modalVerifyShow}\r\n        onHide={() => setModalVerifyShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            This channel already have existing programme titles.{' '}\r\n          </div>\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <b> Are you sure you want to proceed?</b>\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.cancelButton}\r\n              onClick={() => setModalVerifyShow(false)}\r\n              style={{ marginLeft: '0' }}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className={Styles.importButton}\r\n              onClick={handleProceedImport}\r\n              type=\"button\"\r\n            >\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={modalLoadingShow}\r\n        onHide={() => setModalLoadingShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div>\r\n            <div\r\n              style={{\r\n                fontSize: '50px',\r\n                color: '#13ad83',\r\n                backgroundColor: 'transparent',\r\n                position: 'relative',\r\n                height: '145px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontSize: '16px',\r\n                  color: '#000',\r\n                  textAlign: 'center',\r\n                  width: '715px',\r\n                }}\r\n              >\r\n                Updating Segment details...\r\n              </div>\r\n\r\n              <i\r\n                className=\"fas fa-circle-notch fa-spin mr-1\"\r\n                style={{\r\n                  top: 0,\r\n                  bottom: 0,\r\n                  left: 0,\r\n                  right: 0,\r\n                  margin: 'auto',\r\n                  position: 'absolute',\r\n                  height: '50px',\r\n                  width: '50px',\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={modalSegmentsShow}\r\n        onHide={() => setModalSegmentsShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            Segments updated for <b>{` ${successCount} `}</b>\r\n            programme titles out of <b>{allUploadedTitles.length}</b>!\r\n          </div>\r\n\r\n          <div className={`${Styles.successDiv}`}>\r\n            <table>\r\n              <tbody className={`${Styles.successBody}`}>\r\n                {uploadedTitles.map((value) => (\r\n                  <tr\r\n                    key={value.id}\r\n                    className={`${Styles.trBorder}`}\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    <td className=\"table-body-column\" style={{ width: '90%' }}>\r\n                      {value.title}\r\n                    </td>\r\n                    <td className=\"table-body-column\">\r\n                      <i>\r\n                        <img\r\n                          src={value.segmentsUpdated ? checkIcon : xIcon}\r\n                          alt=\"\"\r\n                        />\r\n                      </i>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div style={{ marginTop: '10px' }}>\r\n            <div\r\n              className=\"form-check\"\r\n              style={{ marginRight: '20px', display: 'inline-block' }}\r\n              onClick={() => handleChangeSegmentsRadio('all')}\r\n              onKeyDown={() => handleChangeSegmentsRadio('all')}\r\n              role=\"presentation\"\r\n            >\r\n              <input\r\n                className={`${Styles.formCheck} form-check-input`}\r\n                type=\"radio\"\r\n                name=\"segmentsuccessFilter\"\r\n                id=\"flexRadioDefault6\"\r\n                checked={uploadedTitleFilter === 'all'}\r\n              />\r\n              <div className=\"form-check-label\" htmlFor=\"flexRadioDefault6\">\r\n                Show all\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"form-check\"\r\n              style={{ marginRight: '20px', display: 'inline-block' }}\r\n              onClick={() => handleChangeSegmentsRadio('updated')}\r\n              onKeyDown={() => handleChangeSegmentsRadio('updated')}\r\n              role=\"presentation\"\r\n            >\r\n              <input\r\n                className={`${Styles.formCheck} form-check-input`}\r\n                type=\"radio\"\r\n                name=\"segmentsuccessFilter\"\r\n                id=\"flexRadioDefault4\"\r\n                checked={uploadedTitleFilter === 'updated'}\r\n              />\r\n              <div className=\"form-check-label\" htmlFor=\"flexRadioDefault4\">\r\n                Segments Updated\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"form-check\"\r\n              style={{ marginRight: '20px', display: 'inline-block' }}\r\n              onClick={() => handleChangeSegmentsRadio('notfound')}\r\n              onKeyDown={() => handleChangeSegmentsRadio('notfound')}\r\n              role=\"presentation\"\r\n            >\r\n              <input\r\n                className={`${Styles.formCheck} form-check-input`}\r\n                type=\"radio\"\r\n                name=\"segmentsuccessFilter\"\r\n                id=\"flexRadioDefault5\"\r\n                checked={uploadedTitleFilter === 'notfound'}\r\n              />\r\n              <div className=\"form-check-label\" htmlFor=\"flexRadioDefault5\">\r\n                No Segments Found\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: 'right',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.saveButton}\r\n              onClick={() => setModalSegmentsShow(false)}\r\n              style={{ marginRight: '0' }}\r\n              type=\"button\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        size=\"md\"\r\n        show={modalVerifySegmentsShow}\r\n        onHide={() => setModalVerifySegmentsShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Body style={{ padding: '35px' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            The programme titles already have existing segments.{' '}\r\n          </div>\r\n          <div style={{ textAlign: 'center' }}>\r\n            Updating their segments will delete all existing segments of the\r\n            programme titles.\r\n          </div>\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <b> Are you sure you want to proceed?</b>\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '30px',\r\n            }}\r\n          >\r\n            <button\r\n              className={Styles.cancelButton}\r\n              onClick={() => setModalVerifySegmentsShow(false)}\r\n              style={{ marginLeft: '0' }}\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className={Styles.importButton}\r\n              onClick={generateSegments}\r\n              type=\"button\"\r\n            >\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <ConfirmLeavePageModalComponent\r\n        show={showPrompt}\r\n        onHide={hidePrompt}\r\n        onSave={handleSavePriotisation}\r\n        onDiscard={confirmNavigation}\r\n      />\r\n\r\n      <ConfirmLeavePageModalComponent\r\n        show={showConfirmLeaveModal}\r\n        onHide={() => {\r\n          setShowConfirmLeaveModal(false);\r\n          cancelDirtyForm();\r\n        }}\r\n        onSave={() => {\r\n          handleSavePriotisation();\r\n          handleDiscardChanges();\r\n        }}\r\n        onDiscard={handleDiscardChanges}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrioritisationComponent;\r\n","import axios from 'axios';\r\n\r\nconst PrioritisationService = {\r\n  savePriotisation(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/SavePrioritisation`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  getChannels() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetChannelLookup`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getTitles(querystring, filter, prioritisedPrograms, fromSearch) {\r\n    // prettier-ignore\r\n    const prioritisedProgramsList = prioritisedPrograms === null ? [] : prioritisedPrograms;\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/GetProgrammeTitlesList${querystring}&channelId=${filter.channelId}&month=${filter.month}&year=${filter.year}&fromSearch=${fromSearch}`;\r\n    // +\r\n    // '&titleIds=' +\r\n    // filter.titleIds\r\n    return axios.post(url, prioritisedProgramsList);\r\n  },\r\n\r\n  getPriorityList(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/GetPrioritisationList?channelId=${parameters.channelId}&month=${parameters.month}&year=${parameters.year}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getTitleByID(id, channelId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/GetTitleDetails?titleId=${id}&channelId=${channelId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  uploadFile(formData, channelId, year, month, fileExtension) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/ImportExcelFile?channelId=${channelId}&year=${year}&month=${month}&fileExtension=${fileExtension}`;\r\n    return axios.post(url, formData);\r\n  },\r\n\r\n  getSegments(id) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/GetSegments/${id}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  exportUploadSample() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/ExportTitleUploader`;\r\n    return axios.get(url, { responseType: 'arraybuffer' });\r\n  },\r\n\r\n  generateSegments(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Title/GenerateSegments?ChannelId=${parameters.channelId}&Month=${parameters.month}&Year=${parameters.year}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getPrioritisationSession() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/GetPrioritisationSession`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  savePrioritisationSession(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Channel/AddPrioritisationSession${json}`;\r\n    return axios.post(url, json);\r\n  },\r\n  getTitleGroupList(parameters, initial) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}TitleGroup/GetTitlesGroupList${parameters}&initial=${initial}`;\r\n    return axios.get(url);\r\n  },\r\n  getTitleGroupPrograms(id, channelId, start, end) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}Schedule/GetTitleGroupPrograms?searchKey=${id}&channelId=${channelId}&start=${start}&end=${end}`;\r\n    return axios.get(url);\r\n  },\r\n  saveTitleGroupPriotisation(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}TitleGroup/SaveTitleGroupPrioritisation`;\r\n    return axios.post(url, json);\r\n  },\r\n};\r\n\r\nexport default PrioritisationService;\r\n","import axios from 'axios';\r\n\r\nconst ProfileService = {\r\n  getUser(id) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/${id}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  updateUser(userId, json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/${userId}`;\r\n    return axios.put(url, json);\r\n  },\r\n\r\n  changePassword(id, json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}user/changepassword/${id}`;\r\n    return axios.patch(url, json);\r\n  },\r\n};\r\nexport default ProfileService;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction SelectComponentCustom({\r\n  label,\r\n  text,\r\n  list,\r\n  onSelect,\r\n  width,\r\n  disabled,\r\n}) {\r\n  const optionRef = useRef();\r\n  const [showOptionList, setShowOptionList] = useState(false);\r\n  const [disabledSelect, setDisabledSelect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const backdropClicked = (e) => {\r\n      if (optionRef.current && !optionRef.current.contains(e.target)) setShowOptionList(false);\r\n    };\r\n\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  }, [optionRef]);\r\n\r\n  useEffect(() => {\r\n    setDisabledSelect(disabled);\r\n  }, [disabled]);\r\n\r\n  const toggleOptionList = () => {\r\n    setShowOptionList(true);\r\n  };\r\n\r\n  const selectItem = (value) => {\r\n    if (typeof onSelect === 'function') {\r\n      onSelect(value);\r\n      setShowOptionList(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.select}>\r\n      {label && <div className={styles.label}>{label}</div>}\r\n\r\n      {text && (\r\n        <button\r\n          className={styles.selectButton}\r\n          style={{ width }}\r\n          title={text}\r\n          onClick={toggleOptionList}\r\n          disabled={disabledSelect}\r\n          type=\"button\"\r\n        >\r\n          <span>{text}</span>\r\n        </button>\r\n      )}\r\n\r\n      {showOptionList && (\r\n        <div ref={optionRef} className={styles.optionList} style={{ width }}>\r\n          {list\r\n            && list.map((value) => (\r\n              <div\r\n                key={value.id}\r\n                className={styles.optionItem}\r\n                title={value.value}\r\n                onClick={() => selectItem(value)}\r\n                onKeyDown={() => selectItem(value)}\r\n                role=\"presentation\"\r\n              >\r\n                {value.value}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelectComponentCustom.propTypes = {\r\n  label: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n  onSelect: PropTypes.func.isRequired,\r\n  width: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nSelectComponentCustom.defaultProps = {\r\n  label: '',\r\n  list: null,\r\n  width: '70px',\r\n  disabled: false,\r\n};\r\n\r\nexport default SelectComponentCustom;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tabList\":\"Tabs_tabList__LI4lM\",\"tabListItem\":\"Tabs_tabListItem__6kYs+\",\"tabListActive\":\"Tabs_tabListActive__HaX2v\",\"tabHeader\":\"Tabs_tabHeader__htETO\",\"tabContent\":\"Tabs_tabContent__5440A\"};"],"names":["TabHeaderComponent","props","activeTab","onClick","label","customClassActiveHeader","useState","className","setClassName","handleOnClick","labelName","useEffect","Styles","onKeyDown","role","defaultProps","TabsComponent","labelList","customClass","dirty","tabChange","setActive","onSetSelectedTab","activeTabComponent","setActiveTab","onClickTabItem","map","child","id","component","height","AvailableProgramsDataComponent","forwardRef","ref","programs","callbackSelectPrograms","callbackViewProgram","isLoading","selectedPrograms","tableMinimize","callbackViewSegment","titleSource","viewedProgram","eyeRef","useRef","useImperativeHandle","scrollToProgram","setTimeout","current","scrollIntoView","behavior","block","selectRow","data","filteredArray","includes","filter","e","push","viewRow","target","name","eyeIconSource","parseInt","eyeOffIcon","eyeIconSelected","eyeIcon","filterStyle","length","style","backgroundColor","BootstrapSpinner","colSpan","fontSize","fontWeight","color","textAlign","overrode","textIndent","title","genreString","duration","grade","certificate","year","width","cursor","marginLeft","src","alt","getColumns","displayName","channelOptions","availableProgramsHeader","months","value","yearlist","i","start","prioritisedProgramsHeader","React","StartsWithFilterComponent","options","optionId","optionText","selectedOption","setSelectedOption","showOptions","setShowOptions","startsWithInput","setStartsWithInput","disableFilterButton","setDisableFilterButton","startsWithFilterRef","backdropClicked","contains","selectOption","option","changeToDefaultForm","setTemporaryFilterModel","action","model","JSON","parse","stringify","filterModel","titleFilter","titleFilterValue","useCache","genreFilter","genreFilterValue","durationFilter","durationFilterValue","gradeFilter","gradeFilterValue","yearFilter","yearFilterValue","certificateFilter","certificateFilterValue","undefined","onClickedButtonClearFilter","onClickedButtonFilter","toggleDropdown","clearFilterModel","document","addEventListener","removeEventListener","styles","type","display","marginBottom","placeholder","onChange","disabled","sortBy","handleSetSortBy","onClickedButtonClearAllFilters","tableHeaders","PrioritisationForms","showTitleNameFilter","setShowTitleNameFilter","showGenreFilter","setShowGenreFilter","showDurationFilter","setShowDurationFilter","showGradeFilter","setShowGradeFilter","showYearFilter","setShowYearFilter","showCertificateFilter","setShowCertificateFilter","showClearFilterIcon","setShowClearAllFilterIcon","titleNameFilterRef","genreFilterRef","durationFilterRef","gradeFilterRef","yearFilterRef","certificateFilterRef","header","onClickedButtonFilterHeader","handleSort","userSort","state","onClickedButtonClearAllFiltersHeader","filteredIcon","filterIcon","arrowUpIcon","transform","clearFilterIcon","AvailableProgramsComponent","handleSelectProgram","availablePaginationParameters","paginate","setFilterModel","dataComponentRef","tableHeaderColumns","sortInfo","setSortInfo","setSortBy","TableComponent","paginationParameters","sortHeader","hasExport","stylesTable","tableHeader","newArr","isTableBodyLoading","PropTypes","PrioritisedProgramsDataComponent","imageFilter","PrioritisedProgramsComponent","handleSortPrioritised","PrioritisedProgramsHeaderComponent","TitleGroupStorage","headerId","headerName","queryNames","sortable","totalCount","pageSize","currentPage","totalPages","selectTitleGroups","groups","clearSelected","setClearSelected","selectDetail","tableHeight","handleGetTitles","queryParameters","setQueryParameters","sortParameters","setSortParameters","prioritisation","tableParameters","setTableParameters","channelId","month","class","flexWrap","Table","noDataVerbiage","headers","list","isFetchingData","onFilter","selectedData","pageNumber","searchKey","onClearFilters","onSort","sortOrder","order","sort","onPaginate","onDoubleClickSelectData","onSingleClickSelectData","onAction","actionName","selectedId","defaultSelected","onMultiSelect","PrioritisedTitleGroupComponent","prioritisedGroups","selectPrioritisedGroups","TitleGroupDetailsComponent","viewGroupDetails","callbackCloseDetails","titles","setTitles","DateService","Date","UTC","end","PrioritisationService","then","response","responseData","a","b","titleName","toLowerCase","handleGetTitleGroupDetails","marginTop","closeIcon","TitleGroupComponent","changed","setChanged","discardTitleGroupDirty","setDiscardTitleGroupDirty","saveTitleGroupDirty","setSaveTitleGroupDirty","allGroups","setAllGroups","setGroups","allAvailableGroups","setAllAvailableGroups","setPaginationParameters","clearSelectedGroups","setClearSelectedGroups","selectedGroups","setSelectedGroups","setPrioritisedGroups","allPrioritisedGroups","setAllPrioritisedGroups","clearSelectedPrioritise","setClearSelectedPrioritise","selectedPrioritisedGroups","setSelectedPrioritisedGroups","selectedViewId","setSelectedViewId","setViewGroupDetails","paginationParametersPrioritised","setPaginationParametersPrioritised","isSaving","setIsSaving","setIsLoading","prioritisedQueryParameters","setPrioritisedQueryParameters","sortPrioritiseParameters","setSortPrioritiseParameters","mapAvailableData","x","y","group","totalAsset","initial","parameters","pagination","titleGroupFilter","titleGroupFilterValue","titlesCount","titlesCountFilter","titlesCountFilterValue","replace","queryString","constructQueryParameters","reponseData","mapAllData","prioritised","groupData","icon","toolTip","sortAvailable","prioritisedData","sortPrioritise","finally","availableData","allData","priorityData","concat","handleSelectDetail","selected","handleSavePriotised","titleGroupIDs","prioritisationParameters","success","availableList","toSkip","availableGroupData","slice","prevState","Math","ceil","prioritisedList","prioritisedGroupData","old","item","eyeSlashIcon","toPrioritise","prioritisedFilter","filterGroups","arrowLeftIcon","toAvailableData","paddingTop","arrowRightIcon","filterPrioritise","verticalAlign","float","Button","text","selectedChannel","setSelectedChannel","setChannelOptions","selectedMonth","setSelectedMonth","monthOptions","yearOptions","selectedYear","setSelectedYear","allprograms","setAllPrograms","setPrograms","allPrioritisePrograms","setAllPrioritisePrograms","prioritisedPrograms","setPrioritisedPrograms","viewProgram","setViewProgram","selectedProgramID","setSelectedProgramID","selectedPriorityProgramID","setSelectedPriorityProgramID","isLoadingPrograms","setIsLoadingPrograms","isLoadingPrioritise","setIsLoadingPrioritise","hasSelectedPrograms","setHasSelectedPrograms","hasSelectedPrioritise","setHasSelectedPrioritise","setClearSearchIsActive","setSearchKey","prioritisedSort","setPrioritisedSort","setViewedProgram","saveSearchKey","setAvailablePaginationParameters","page","size","availableParameters","setAvailableParameters","prioritisedPaginationParameters","setPrioritisedPaginationParameters","prioritisedParameters","setPrioritisedParameters","titleIds","setPrioritisation","availableProgramsRef","prioritisedProgramRef","fileUploadRef","modalShow","setModalShow","setTitleSource","hasTitles","setHasTitles","modalSuccessShow","setModalSuccessShow","modalVerifyShow","setModalVerifyShow","successCount","setSuccessCount","fileNameUploaded","setFileNameUploaded","uploadedTitleFilter","setUploadedTitleFilter","allUploadedTitles","setAllUploadedTitles","loadingUpload","setLoadingUpload","uploadedTitles","setUploadedTitles","uploadError","setUploadError","segments","setSegments","setTableMinimize","hasSegments","setHasSegments","modalLoadingShow","setModalLoadingShow","modalSegmentsShow","setModalSegmentsShow","modalVerifySegmentsShow","setModalVerifySegmentsShow","isDirty","setIsDirty","isTitleGroupDirty","setIsTitleGroupDirty","nextTab","setNextTab","showConfirmLeaveModal","setShowConfirmLeaveModal","nextFilter","setNextFilter","addedPrograms","setAddedPrograms","removedPrograms","setRemovedPrograms","useCallbackPrompt","showPrompt","confirmNavigation","cancelNavigation","hidePrompt","renderTimes","setRenderTimes","prioritisationSessionParameters","setPrioritisationSessionParameters","onChangeFormSetPrioritisationSessionParameters","cleanDirtyForm","handleChangeTab","handleDiscardChanges","Object","keys","input","channelID","monthID","handleCloseDetails","getPrioritisedPrograms","programList","prioritisedProgramsList","priotizePrograms","getPrograms","filters","search","fromSearch","prioritiseList","fromFilter","newAvailableParameters","query","searchKeyParam","titleFilterParam","titleFilterValueParam","genreFilterParam","genreFilterValueParam","durationFilterParam","durationFilterValueParam","gradeFilterParam","gradeFilterValueParam","yearFilterParam","yearFilterValueParam","sortByParam","sortParam","constructQueryString","titleList","val","o","hasSegment","constructedProgrammeTitles","titleId","overrodeValues","genre","totalData","handleSavePriotisation","valid","titleIDs","danger","error","searchRef","selectedItems","handleChangeRadio","successfullyImported","exportExcelFile","blob","Blob","saveAs","getSegments","programID","generateSegments","count","items","segmentsUpdated","handleChangeSegmentsRadio","handleSavePrioritisationSession","channelIdParam","monthParam","yearParam","constructPrioritisationSessionParameters","isPrioritisationNotNull","channels","channelList","channelName","ProfileService","AuthService","userId","organisationTitleSource","sortedPrioritisedTitles","prioritizePrograms","channel","find","toString","tabs","programsAdded","programsRemoved","selectedProgram","program","removeIndex","indexOf","splice","emptyArray","ImportProgramDetailsComponent","BannerComponent","componentName","isAddButtonHidden","isSearchHidden","background","onSelect","withSearch","paddingLeft","Modal","show","onHide","padding","position","top","bottom","left","right","margin","textDecoration","click","accept","files","file","fileExtension","split","pop","formData","FormData","append","catch","message","checkIcon","xIcon","marginRight","checked","htmlFor","ConfirmLeavePageModalComponent","onSave","onDiscard","savePriotisation","json","url","process","axios","getChannels","getTitles","querystring","getPriorityList","getTitleByID","uploadFile","exportUploadSample","responseType","getPrioritisationSession","savePrioritisationSession","getTitleGroupList","getTitleGroupPrograms","saveTitleGroupPriotisation","getUser","updateUser","changePassword","SelectComponentCustom","optionRef","showOptionList","setShowOptionList","disabledSelect","setDisabledSelect","selectItem"],"sourceRoot":""}
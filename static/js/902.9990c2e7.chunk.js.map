{"version":3,"file":"static/js/902.9990c2e7.chunk.js","mappings":"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","sources":["webpack://sky/./src/components/login/login.module.css?e6ba","assets/icons/Sign-In.svg","webpack://sky/./src/shared/elements/checkbox/styles.module.css?8553","shared/elements/checkbox/checkbox.component.jsx","core/cryptr.service.js","components/login/LoginComponent.jsx","webpack://sky/./src/shared/footer/footer.module.css?3eac","shared/footer/footer.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"login_body__FeUaw\",\"panel\":\"login_panel__Bt9vA\",\"signInPanel\":\"login_signInPanel__eegWO\",\"virtualAiLogo\":\"login_virtualAiLogo__sioxN\",\"title\":\"login_title__kkF6L\",\"description\":\"login_description__tDJNU\",\"emailInput\":\"login_emailInput__d1pT1\",\"passwordInput\":\"login_passwordInput__+z-aB\",\"eyeIcon\":\"login_eyeIcon__mOQOj\",\"errorAlertText\":\"login_errorAlertText__3yPtx\",\"signInButton\":\"login_signInButton__FHRjk\",\"signInIcon\":\"login_signInIcon__AXy1O\",\"marginTop0\":\"login_marginTop0__KPCC6\",\"redirectUrlText\":\"login_redirectUrlText__mt8bW\",\"credentialList\":\"login_credentialList__7cjNs\",\"credentialListItem\":\"login_credentialListItem__+qPmp\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSignIn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 18,\n    viewBox: \"0 0 20 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 4L7.6 5.4L10.2 8H0V10H10.2L7.6 12.6L9 14L14 9L9 4ZM18 16H10V18H18C19.1 18 20 17.1 20 16V2C20 0.9 19.1 0 18 0H10V2H18V16Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSignIn);\nexport default __webpack_public_path__ + \"static/media/Sign-In.2382f2c305ac4e6667b6d8a921086991.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"checkboxDiv\":\"styles_checkboxDiv__RE2W8\",\"box\":\"styles_box__rL2XP\",\"circle\":\"styles_circle__bMPcJ\",\"notChecked\":\"styles_notChecked__4CGRE\",\"checked\":\"styles_checked__UYmhI\",\"checkIcon\":\"styles_checkIcon__KSTqC\",\"label\":\"styles_label__8ZNuq\",\"disabled\":\"styles_disabled__ndc1H\",\"disabledNotChecked\":\"styles_disabledNotChecked__bZk7f\",\"disabledChecked\":\"styles_disabledChecked__iJz1g\",\"labelRight\":\"styles_labelRight__Jbs53\",\"labelBold\":\"styles_labelBold__0Xh+U\",\"labelDisabled\":\"styles_labelDisabled__NyL2H\"};","import React, { useEffect, useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction CheckboxComponent({\r\n  label,\r\n  shape,\r\n  disabled,\r\n  active,\r\n  onCheck,\r\n  checkBoxName,\r\n  isLeft,\r\n}) {\r\n  const [isActive, setIsActive] = useState(active);\r\n\r\n  // styles\r\n  const form = shape === 'box' ? styles.box : shape === 'circle' && styles.circle;\r\n  const isChecked = isActive ? styles.checked : styles.notChecked;\r\n  const isDisabled = disabled && styles.disabled;\r\n  // prettier-ignore\r\n  const isDisabledChecked = disabled\r\n        && (isActive ? styles.disabledChecked : styles.disabledNotChecked);\r\n\r\n  useEffect(() => {\r\n    setIsActive(active && active);\r\n  }, [active]);\r\n\r\n  const executeOnCheck = () => {\r\n    setIsActive(active === true ? true : !isActive);\r\n    onCheck(!isActive, checkBoxName);\r\n  };\r\n\r\n  const onKeyDownExecuteOnCheck = (e) => {\r\n    if (e.key === 'Enter') executeOnCheck();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.checkboxDiv}>\r\n      {isLeft && (\r\n        <div\r\n          className={`${form} ${isChecked} ${isDisabled} ${isDisabledChecked}`}\r\n          onClick={executeOnCheck}\r\n          onKeyDown={onKeyDownExecuteOnCheck}\r\n          role=\"presentation\"\r\n          tabIndex={0}\r\n        >\r\n          <span className={styles.checkIcon} />\r\n        </div>\r\n      )}\r\n\r\n      {label && (\r\n        <div\r\n          className={`${\r\n            isLeft ? styles.label : styles.labelRight\r\n          } ${!isActive && styles.labelDisabled}`}\r\n        >\r\n          {label}\r\n        </div>\r\n      )}\r\n      {!isLeft && (\r\n        <div\r\n          className={`${form} ${isChecked} ${isDisabled} ${isDisabledChecked}`}\r\n          onClick={executeOnCheck}\r\n          onKeyDown={executeOnCheck}\r\n          role=\"presentation\"\r\n        >\r\n          <span className={styles.checkIcon} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCheckboxComponent.propTypes = {\r\n  label: PropTypes.string,\r\n  shape: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  active: PropTypes.bool,\r\n  onCheck: PropTypes.func,\r\n  checkBoxName: PropTypes.string,\r\n  isLeft: PropTypes.bool,\r\n};\r\n\r\nCheckboxComponent.defaultProps = {\r\n  label: '',\r\n  shape: 'box',\r\n  disabled: false,\r\n  active: true,\r\n  onCheck: null,\r\n  checkBoxName: '',\r\n  isLeft: true,\r\n};\r\n\r\nexport default CheckboxComponent;\r\n","const guid = '350d252399bc4a899f48fea09759fd2b';\r\nconst CryptoJS = require('crypto-js');\r\n\r\nconst CryptrService = {\r\n  encryptString(plainText) {\r\n    // prettier-ignore\r\n    return CryptoJS.AES.encrypt(plainText, guid).toString();\r\n  },\r\n\r\n  decryptString(encryptedText) {\r\n    // prettier-ignore\r\n    const bytes = CryptoJS.AES.decrypt(encryptedText, guid);\r\n\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  },\r\n};\r\n\r\nexport default CryptrService;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Styles from './login.module.css';\r\n\r\nimport eyeIcon from '../../assets/icons/Eye.png';\r\nimport eyeOnIcon from '../../assets/icons/Eye-On.png';\r\nimport signInIcon from '../../assets/icons/Sign-In.svg';\r\nimport op2miseLogo from '../../assets/icons/op2mise.svg';\r\n\r\nimport FooterComponent from '../../shared/footer/footer.component';\r\n\r\nimport AuthService from '../../core/auth.service';\r\nimport CheckboxComponent from '../../shared/elements/checkbox/checkbox.component';\r\nimport CryptrService from '../../core/cryptr.service';\r\n\r\nfunction LoginComponent({ callbackUserLogon }) {\r\n  const navigate = useNavigate();\r\n  const credentialListRef = useRef();\r\n  const emailInputRef = useRef();\r\n\r\n  const [loginParameters, setLoginParameters] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showButtonSpinner, setShowButtonSpinner] = useState(false);\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\r\n    'Invalid email or password, please try again'\r\n  );\r\n  const [shouldRemember, setShouldRemember] = useState(\r\n    AuthService.getRememberedCredentials().length > 0\r\n  );\r\n  const [showRememberedCredentials, setShowRememberedCredentials] = useState(\r\n    false\r\n  );\r\n  const [rememberedCredentials] = useState(\r\n    AuthService.getRememberedCredentials()\r\n  );\r\n\r\n  const togglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const onEnterTogglePassword = (e) => {\r\n    if (e.key === 'Enter') togglePassword();\r\n  };\r\n\r\n  const onChangeSetLoginParameters = (e) => {\r\n    setLoginParameters((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n      password: e.target.name === 'password' ? e.target.value : '',\r\n      ssid:\r\n        e.target.name === 'password'\r\n          ? CryptrService.encryptString(e.target.value)\r\n          : '',\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setShowButtonSpinner(true);\r\n    setShowErrorMessage(false);\r\n    AuthService.login(loginParameters)\r\n      .then((response) => {\r\n        AuthService.setUserIdentity(response.data);\r\n\r\n        setTimeout(() => {\r\n          callbackUserLogon(response.data.userId);\r\n          if (response.data.roleId === 1) {\r\n            navigate(`${process.env.REACT_APP_SUBFOLDER}/organisation`);\r\n          } else {\r\n            navigate(`${process.env.REACT_APP_SUBFOLDER}/channel-profiles`);\r\n          }\r\n          if (shouldRemember) {\r\n            AuthService.rememberCredential(response.data);\r\n          } else {\r\n            AuthService.removeCredential(response.data);\r\n          }\r\n          setShowButtonSpinner(false);\r\n        }, 500);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 401)\r\n          setErrorMessage('Username or password incorrect.');\r\n        else {\r\n          setErrorMessage(error.response.data.message);\r\n        }\r\n\r\n        setShowErrorMessage(true);\r\n        setShowButtonSpinner(false);\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  const handleSubmitFromEnterKey = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (loginParameters.password !== '' && loginParameters.email !== '')\r\n        handleSubmit();\r\n    }\r\n\r\n    if (e.which === 9) setShowRememberedCredentials(false);\r\n  };\r\n\r\n  const onCheckSetShouldRemember = (state) => {\r\n    setShouldRemember(state);\r\n  };\r\n\r\n  const onFocusEmailInput = () => {\r\n    setShowRememberedCredentials(true);\r\n  };\r\n\r\n  const onClickSetLoginParameters = (credential) => {\r\n    setLoginParameters({\r\n      email: credential.email,\r\n      password: CryptrService.decryptString(credential.ssid),\r\n    });\r\n  };\r\n\r\n  const redirectToForgotPasswordPage = () => {\r\n    navigate(`${process.env.REACT_APP_SUBFOLDER}/forgot-password`);\r\n  };\r\n\r\n  const onEnterRedirectToForgotPasswordPage = (e) => {\r\n    if (e.key === 'Enter') redirectToForgotPasswordPage();\r\n  };\r\n\r\n  const backdropClicked = (e) => {\r\n    if (\r\n      credentialListRef.current &&\r\n      !credentialListRef.current.contains(e.target) &&\r\n      emailInputRef.current &&\r\n      !emailInputRef.current.contains(e.target)\r\n    ) {\r\n      setShowRememberedCredentials(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rememberedCredentials.length > 0 && rememberedCredentials[0].ssid) {\r\n      setLoginParameters({\r\n        email: rememberedCredentials[0].email,\r\n        password: CryptrService.decryptString(rememberedCredentials[0].ssid),\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  });\r\n\r\n  return (\r\n    <div className={Styles.body}>\r\n      <div className={Styles.panel}>\r\n        <div className=\"container\">\r\n          <div className=\"row py-3 text-center\">\r\n            <img\r\n              className={`${Styles.virtualAiLogo} `}\r\n              src={op2miseLogo}\r\n              alt=\"op2miseLogo\"\r\n            />\r\n            <div className={Styles.signInPanel}>\r\n              <p className={Styles.title}>\r\n                <div style={{ height: '30px' }} />\r\n                Sign In\r\n              </p>\r\n              <input\r\n                ref={emailInputRef}\r\n                onFocus={onFocusEmailInput}\r\n                className={Styles.emailInput}\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={loginParameters.email}\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                onChange={onChangeSetLoginParameters}\r\n                onKeyDown={handleSubmitFromEnterKey}\r\n              />\r\n              {showRememberedCredentials && (\r\n                <div ref={credentialListRef} className={Styles.credentialList}>\r\n                  {loginParameters.email\r\n                    ? AuthService.getRememberedCredentials()\r\n                        .filter((o) => o.email.includes(loginParameters.email))\r\n                        .map((credential) => (\r\n                          <div\r\n                            key={credential.id}\r\n                            className={Styles.credentialListItem}\r\n                            title={credential.email}\r\n                            onClick={() =>\r\n                              onClickSetLoginParameters(credential)\r\n                            }\r\n                            onKeyDown={() =>\r\n                              onClickSetLoginParameters(credential)\r\n                            }\r\n                            role=\"presentation\"\r\n                          >\r\n                            {credential.email}\r\n                          </div>\r\n                        ))\r\n                    : AuthService.getRememberedCredentials().map(\r\n                        (credential) => (\r\n                          <div\r\n                            key={credential.id}\r\n                            className={Styles.credentialListItem}\r\n                            title={credential.email}\r\n                            onClick={() =>\r\n                              onClickSetLoginParameters(credential)\r\n                            }\r\n                            onKeyDown={() =>\r\n                              onClickSetLoginParameters(credential)\r\n                            }\r\n                            role=\"presentation\"\r\n                          >\r\n                            {credential.email}\r\n                          </div>\r\n                        )\r\n                      )}\r\n                </div>\r\n              )}\r\n              <br />\r\n              <div className=\"input-group position-relative\">\r\n                <input\r\n                  className={Styles.passwordInput}\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  placeholder=\"Password\"\r\n                  value={loginParameters.password}\r\n                  name=\"password\"\r\n                  onChange={onChangeSetLoginParameters}\r\n                  onKeyDown={handleSubmitFromEnterKey}\r\n                />\r\n                <div className={`${Styles.eyeIcon} input-group-append`}>\r\n                  {showPassword ? (\r\n                    <img\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                        height: '12.03px',\r\n                        width: '15.03px',\r\n                      }}\r\n                      src={eyeOnIcon}\r\n                      alt=\"EyeOnIcon\"\r\n                      onClick={togglePassword}\r\n                      onKeyDown={onEnterTogglePassword}\r\n                      role=\"presentation\"\r\n                      tabIndex={0}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                      }}\r\n                      src={eyeIcon}\r\n                      alt=\"EyeIcon\"\r\n                      onClick={togglePassword}\r\n                      onKeyDown={onEnterTogglePassword}\r\n                      role=\"presentation\"\r\n                      tabIndex={0}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  marginLeft: '50px',\r\n                  marginTop: '15px',\r\n                }}\r\n              >\r\n                <CheckboxComponent\r\n                  label=\"Remember me\"\r\n                  onCheck={onCheckSetShouldRemember}\r\n                  disabled={showButtonSpinner}\r\n                  active={shouldRemember}\r\n                />\r\n              </div>\r\n              <p\r\n                className={Styles.errorAlertText}\r\n                style={{\r\n                  display: showErrorMessage ? null : 'none',\r\n                }}\r\n              >\r\n                {errorMessage}\r\n              </p>\r\n              <button\r\n                className={`${Styles.signInButton} ${\r\n                  showErrorMessage ? Styles.marginTop0 : ''\r\n                }`}\r\n                onClick={handleSubmit}\r\n                disabled={\r\n                  showButtonSpinner ||\r\n                  loginParameters.password.length === 0 ||\r\n                  loginParameters.email.length === 0\r\n                }\r\n                type=\"button\"\r\n              >\r\n                Sign In{' '}\r\n                {showButtonSpinner ? (\r\n                  <i\r\n                    className=\"fas fa-circle-notch fa-spin mr-1\"\r\n                    style={{\r\n                      height: '20px',\r\n                      width: '20px',\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    className={Styles.signInIcon}\r\n                    src={signInIcon}\r\n                    alt=\"SignInIcon\"\r\n                  />\r\n                )}\r\n              </button>\r\n              <p\r\n                className={Styles.redirectUrlText}\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={redirectToForgotPasswordPage}\r\n                onKeyDown={onEnterRedirectToForgotPasswordPage}\r\n                role=\"presentation\"\r\n                tabIndex={0}\r\n              >\r\n                Forgot password?\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\nLoginComponent.propTypes = {\r\n  callbackUserLogon: PropTypes.func.isRequired,\r\n};\r\nexport default LoginComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"vaiFooter\":\"footer_vaiFooter__NGKVU\",\"vaiFooterText\":\"footer_vaiFooterText__PL00u\",\"vaiFooterTextGray\":\"footer_vaiFooterTextGray__a44Hr\"};","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styles from './footer.module.css';\r\n\r\nfunction FooterComponent() {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className={styles.vaiFooter}>\r\n      <p\r\n        className={`${\r\n          location.pathname === `/${process.env.SUBFOLDER}/login`\r\n            ? styles.vaiFooterTextGray\r\n            : null\r\n        } ${styles.vaiFooterText}`}\r\n      >\r\n        Virtual AI Ltd. © {new Date().getFullYear()}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FooterComponent;\r\n"],"names":["CheckboxComponent","label","shape","disabled","active","onCheck","checkBoxName","isLeft","useState","isActive","setIsActive","form","styles","isChecked","isDisabled","isDisabledChecked","useEffect","executeOnCheck","className","onClick","onKeyDown","e","key","role","tabIndex","defaultProps","guid","CryptoJS","require","encryptString","plainText","AES","encrypt","toString","decryptString","encryptedText","decrypt","enc","Utf8","callbackUserLogon","navigate","useNavigate","credentialListRef","useRef","emailInputRef","email","password","loginParameters","setLoginParameters","showPassword","setShowPassword","showButtonSpinner","setShowButtonSpinner","showErrorMessage","setShowErrorMessage","errorMessage","setErrorMessage","AuthService","length","shouldRemember","setShouldRemember","showRememberedCredentials","setShowRememberedCredentials","rememberedCredentials","togglePassword","onEnterTogglePassword","onChangeSetLoginParameters","prevState","target","name","value","CryptrService","handleSubmit","then","response","data","setTimeout","userId","roleId","process","catch","error","status","message","finally","handleSubmitFromEnterKey","which","onClickSetLoginParameters","credential","ssid","redirectToForgotPasswordPage","backdropClicked","current","contains","document","addEventListener","removeEventListener","Styles","src","op2miseLogo","alt","style","height","ref","onFocus","type","placeholder","autoComplete","onChange","filter","o","includes","map","title","id","cursor","width","eyeOnIcon","eyeIcon","position","marginLeft","marginTop","state","display","signInIcon","location","useLocation","pathname","SUBFOLDER","Date","getFullYear"],"sourceRoot":""}
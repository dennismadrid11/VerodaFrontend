{"version":3,"file":"static/js/223.f60de3a3.chunk.js","mappings":"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","sources":["components/_reusable/blocker/UsePromptComponent.ts","components/_reusable/blocker/UseBlockerComponent.ts","webpack://sky/./src/components/prioritisation/import-program-details/ImportProgramDetails.module.css?8971","components/prioritisation/import-program-details/ImportProgramDetailsComponent.jsx","webpack://sky/./src/components/prioritisation/prioritisation-program-details/PrioritisationProgramDetails.module.css?d257","components/prioritisation/prioritisation-program-details/PrioritisationProgramDetailComponent.jsx","webpack://sky/./src/components/title-group/modals/confirm-leave-page-modal/styles.module.css?8ec1","components/title-group/modals/confirm-leave-page-modal/ConfirmLeavePageModalComponent.jsx"],"sourcesContent":["/* eslint-disable */\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport { useBlocker } from './UseBlockerComponent.ts';\r\n\r\nexport function useCallbackPrompt(when: boolean): (boolean | (() => void))[] {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n  const [lastLocation, setLastLocation] = useState<any>(null);\r\n  const [confirmedNavigation, setConfirmedNavigation] = useState(false);\r\n\r\n  const cancelNavigation = useCallback(() => {\r\n    setShowPrompt(false);\r\n    setConfirmedNavigation(false);\r\n    setLastLocation(null);\r\n  }, []);\r\n\r\n  // handle blocking when user click on another route prompt will be shown\r\n  const handleBlockedNavigation = useCallback(\r\n    (nextLocation) => {\r\n      // in if condition we are checking next location and current location are equals or not\r\n      if (\r\n        !confirmedNavigation\r\n        && nextLocation.location.pathname !== location.pathname\r\n      ) {\r\n        setShowPrompt(true);\r\n        setLastLocation(nextLocation);\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    [confirmedNavigation],\r\n  );\r\n\r\n  const confirmNavigation = useCallback(() => {\r\n    setShowPrompt(false);\r\n    setConfirmedNavigation(true);\r\n  }, []);\r\n\r\n  const hidePrompt = () => {\r\n    setShowPrompt(false);\r\n    setConfirmedNavigation(false);\r\n    setLastLocation(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (confirmedNavigation && lastLocation) {\r\n      navigate(lastLocation.location.pathname);\r\n    }\r\n  }, [confirmedNavigation, lastLocation]);\r\n\r\n  useBlocker(handleBlockedNavigation, when);\r\n\r\n  return [showPrompt, confirmNavigation, cancelNavigation, hidePrompt]\r\n}\r\n","/* eslint-disable */\r\nimport * as React from 'react';\r\nimport { UNSAFE_NavigationContext } from 'react-router-dom';\r\nimport type { History, Blocker, Transition } from 'history';\r\n\r\nexport function useBlocker(blocker: Blocker, when = true): void {\r\n  const navigator = React.useContext(UNSAFE_NavigationContext)\r\n    .navigator as History;\r\n\r\n  React.useEffect(() => {\r\n    if (!when) return;\r\n    const unblock = navigator.block((tx: Transition) => {\r\n      const autoUnblockingTx = {\r\n        ...tx,\r\n        retry() {\r\n          unblock();\r\n          tx.retry();\r\n        },\r\n      };\r\n\r\n      blocker(autoUnblockingTx);\r\n    });\r\n\r\n    return unblock;\r\n  }, [navigator, blocker, when]);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"panel\":\"ImportProgramDetails_panel__RrjSN\",\"content\":\"ImportProgramDetails_content__uSiOm\",\"labelField\":\"ImportProgramDetails_labelField__Rf06z\",\"closeIcon\":\"ImportProgramDetails_closeIcon__u4bjs\",\"fontBold\":\"ImportProgramDetails_fontBold__Z0sIY\",\"titleAttributesOverrideIcon\":\"ImportProgramDetails_titleAttributesOverrideIcon__cOk1X\",\"attributesOverrideIcon\":\"ImportProgramDetails_attributesOverrideIcon__bLlY5\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ImportProgramDetails.module.css';\r\nimport closeIcon from '../../../assets/icons/Close.svg';\r\n\r\nimport { attributesOverrideGreenIcon, attributesOverrideGreenToggledIcon } from '../../../assets';\r\n\r\nfunction ImportProgramDetailsComponent({ component, program, callbackCloseDetails }) {\r\n  const [overrideValues, setOverrideValues] = useState({\r\n    title: false,\r\n    grade: false,\r\n    rating: false,\r\n  });\r\n  const overrideSeparator = ':@:';\r\n\r\n  const handleToggleOverrideValues = (name) => {\r\n    setOverrideValues({ ...overrideValues, [name]: !overrideValues[name] });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {program && (\r\n        <div className=\"col-12\">\r\n          <div className={styles.panel}>\r\n            <div className=\"position-relative\">\r\n              <i>\r\n                <img\r\n                  className={styles.closeIcon}\r\n                  src={closeIcon}\r\n                  alt=\"\"\r\n                  onClick={callbackCloseDetails}\r\n                  onKeyDown={callbackCloseDetails}\r\n                  role=\"presentation\"\r\n                />\r\n              </i>\r\n            </div>\r\n\r\n            <div style={{marginBottom: '10px'}}>\r\n              <b style={{ fontSize: '20px', fontWeight: 600, fontSize: '16px' }}>\r\n                {\r\n                  !overrideValues.title\r\n                  ? program.titleName.split(overrideSeparator)[0]\r\n                  : program.titleName.split(overrideSeparator)[1]\r\n                }\r\n                {program.titleName.split(overrideSeparator)[1] && (\r\n                  <img\r\n                    class={styles.titleAttributesOverrideIcon}\r\n                    src={overrideValues.title ? attributesOverrideGreenIcon : attributesOverrideGreenToggledIcon}\r\n                    onClick={() => handleToggleOverrideValues('title')}\r\n                    onKeyDown={() => handleToggleOverrideValues('title')}\r\n                    alt=\"\"\r\n                    title={\r\n                      overrideValues.title\r\n                      ? program.titleName.split(overrideSeparator)[0]\r\n                      : program.titleName.split(overrideSeparator)[1]\r\n                    }\r\n                  />\r\n                )}\r\n              </b>\r\n            </div>\r\n\r\n            <div className={styles.content}>\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Title ID:</b>\r\n                    <b className={styles.fontBold}>{program.titleId}</b>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    {' '}\r\n                    <b className={styles.labelField}>Studio:</b>\r\n                    \r\n                    <b className={styles.fontBold}>\r\n                      {' '}\r\n                      {program.titleAttributes.Studio}\r\n                    </b>\r\n                  </div>\r\n                  <div className=\"col-12\" style={{marginBottom: '20px'}}>\r\n                    {' '}\r\n                    <b className={styles.labelField}>Rating:</b>\r\n                    \r\n                    <div className=\"d-flex\">\r\n                      <div className={styles.fontBold}>\r\n                        {' '}\r\n                        {\r\n                          !overrideValues.rating\r\n                          ? program.titleAttributes.Rating.split(overrideSeparator)[0] || <br />\r\n                          : program.titleAttributes.Rating.split(overrideSeparator)[1] || <br />\r\n                        }\r\n                      </div>\r\n                      <div style={{ marginTop: '-5px' }}>\r\n                        {program.titleAttributes.Rating.split(overrideSeparator)[1] && (\r\n                          <img\r\n                            class={styles.attributesOverrideIcon}\r\n                            src={overrideValues.rating ? attributesOverrideGreenIcon : attributesOverrideGreenToggledIcon}\r\n                            onClick={() => handleToggleOverrideValues('rating')}\r\n                            onKeyDown={() => handleToggleOverrideValues('rating')}\r\n                            alt=\"\"\r\n                            title={\r\n                            overrideValues.rating\r\n                            ? program.titleAttributes.Rating.split(overrideSeparator)[0]\r\n                            : program.titleAttributes.Rating.split(overrideSeparator)[1]\r\n                            }\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>              \r\n                </div>\r\n\r\n                <div className=\"col-3\">\r\n                  <div className=\"col-12\">\r\n                    {' '}\r\n                    <b className={styles.labelField}>Grade:</b>\r\n                    \r\n                    <div className=\"d-flex\">\r\n                      <div className={styles.fontBold}>\r\n                        {' '}\r\n                        {\r\n                          !overrideValues.grade\r\n                          ? program.titleAttributes.Grade.split(overrideSeparator)[0] || <br />\r\n                          : program.titleAttributes.Grade.split(overrideSeparator)[1] || <br />\r\n                        }\r\n                      </div>\r\n                      <div style={{ marginTop: '-5px' }}>\r\n                        {program.titleAttributes.Grade.split(overrideSeparator)[1] && (\r\n                          <img\r\n                            class={styles.attributesOverrideIcon}\r\n                            src={overrideValues.grade ? attributesOverrideGreenIcon : attributesOverrideGreenToggledIcon}\r\n                            onClick={() => handleToggleOverrideValues('grade')}\r\n                            onKeyDown={() => handleToggleOverrideValues('grade')}\r\n                            alt=\"\"\r\n                            title={\r\n                              overrideValues.grade\r\n                              ? program.titleAttributes.Grade.split(overrideSeparator)[0]\r\n                              : program.titleAttributes.Grade.split(overrideSeparator)[1]\r\n                            }\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Play Restriction:</b>\r\n                    \r\n                    <b className={styles.fontBold}>\r\n                      {' '}\r\n                      {program.titleAttributes.PlayRestrictions}\r\n                    </b>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Duration:</b>\r\n                    {' '}\r\n                    \r\n                    <b className={styles.fontBold}>\r\n                      {\r\n                        !overrideValues.duration\r\n                        ? program.titleAttributes.Duration\r\n                            && program.titleAttributes.Duration.split(overrideSeparator)[0]\r\n                        || program.duration.split(overrideSeparator)[0]\r\n                        : program.titleAttributes.Duration\r\n                            && program.titleAttributes.Duration.split(overrideSeparator)[1]\r\n                        || program.duration.split(overrideSeparator)[1]\r\n                      }\r\n                      {(program.titleAttributes.Duration && program.titleAttributes.Duration.split(overrideSeparator)[1]\r\n                      || program.duration.split(overrideSeparator)[1]) && (\r\n                        <img\r\n                          class={styles.attributesOverrideIcon}\r\n                          src={overrideValues.duration ? attributesOverrideGreenIcon : attributesOverrideGreenToggledIcon}\r\n                          onClick={() => handleToggleOverrideValues('duration')}\r\n                          onKeyDown={() => handleToggleOverrideValues('duration')}\r\n                          alt=\"\"\r\n                          title={\r\n                            overrideValues.duration\r\n                            ? program.titleAttributes.Duration\r\n                            && program.titleAttributes.Duration.split(overrideSeparator)[0]\r\n                        || program.duration.split(overrideSeparator)[0]\r\n                        : program.titleAttributes.Duration\r\n                            && program.titleAttributes.Duration.split(overrideSeparator)[1]\r\n                        || program.duration.split(overrideSeparator)[1]\r\n                          }\r\n                        />\r\n                      )}\r\n                    </b>\r\n                  </div>\r\n                </div>\r\n\r\n                {component === 'Prioritisation' && (\r\n                    <div className=\"col-3\">\r\n                        <div className=\"col-12\">\r\n                            <b className={styles.labelField}>Window Start Date</b>\r\n                            \r\n                            <b className={styles.fontBold}>\r\n                              {program.titleAttributes.WindowStartDate || <br />}\r\n                            </b>\r\n                        </div>    \r\n                        <div className=\"col-12\">\r\n                            <b className={styles.labelField}>Window End Date</b>\r\n                            \r\n                            <b className={styles.fontBold}>\r\n                              {program.titleAttributes.WindowEndDate || <br />}\r\n                            </b>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"col-3\">\r\n                    <div className=\"col-12\">\r\n                        <b className={styles.labelField}>Play Before: </b>\r\n                    \r\n                        <b className={styles.fontBold}>\r\n                            {program.titleAttributes.PlayBefore || <br />}\r\n                        </b>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <b className={styles.labelField}>Play After:</b>\r\n                        {' '}\r\n                    \r\n                        <b className={styles.fontBold}>\r\n                            {program.titleAttributes.PlayAfter || <br />}\r\n                        </b>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\" style={{ marginTop: '20px' }}>\r\n                  <div className=\"col-3\">\r\n                      <b className={styles.labelField}>Channels</b>\r\n                  </div>\r\n                  <div className=\"col-3\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                          <b className={styles.labelField}>Window Start Date</b>\r\n                      </div>    \r\n                      <div className=\"col-6\">\r\n                          <b className={styles.labelField}>Window End Date</b>\r\n                      </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              {program.channels.map((channel) => (\r\n                  <div className=\"row\">\r\n                      <div className=\"col-3\">\r\n                          <b className={styles.fontBold}>{channel.name}</b>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                          <div className=\"row\">\r\n                              <div className=\"col-6\">                                \r\n                                  <b className={styles.fontBold}>{channel.windowsStartDate}</b>\r\n                              </div>    \r\n                              <div className=\"col-6\">                                \r\n                                  <b className={styles.fontBold}>{channel.windowsEndDate}</b>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n              \r\n              <div className=\"row\" style={{ marginTop: '20px' }}>\r\n                  <div className=\"col-3\">\r\n                      <b className={styles.labelField}>TC_IN</b>\r\n                      <b className={styles.fontBold}>00:00:00</b>\r\n                      <b className={styles.fontBold}>00:00:00</b>\r\n                      <b className={styles.fontBold}>00:00:00</b>\r\n                  </div>\r\n                  <div className=\"col-3\">\r\n                      <b className={styles.labelField}>TC_OUT</b>\r\n                      <b className={styles.fontBold}>00:00:12</b>\r\n                      <b className={styles.fontBold}>00:00:12</b>\r\n                      <b className={styles.fontBold}>00:00:12</b>\r\n                  </div>\r\n                  <div className=\"col-3\">\r\n                      <b className={styles.labelField}>DURATION</b>\r\n                      <b className={styles.fontBold}>12</b>\r\n                      <b className={styles.fontBold}>12</b>\r\n                      <b className={styles.fontBold}>12</b>\r\n                  </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nImportProgramDetailsComponent.propTypes = {\r\n  component: PropTypes.string.isRequired,\r\n  program: PropTypes.shape.isRequired,\r\n  callbackCloseDetails: PropTypes.func.isRequired,\r\n};\r\nexport default ImportProgramDetailsComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"panel\":\"PrioritisationProgramDetails_panel__MX+YY\",\"content\":\"PrioritisationProgramDetails_content__uiJAl\",\"test\":\"PrioritisationProgramDetails_test__XCVlS\",\"labelField\":\"PrioritisationProgramDetails_labelField__tHSnr\",\"closeIcon\":\"PrioritisationProgramDetails_closeIcon__3XYxn\",\"fontBold\":\"PrioritisationProgramDetails_fontBold__s9uxx\",\"titleAttributesOverrideIcon\":\"PrioritisationProgramDetails_titleAttributesOverrideIcon__iF9JH\",\"attributesOverrideIcon\":\"PrioritisationProgramDetails_attributesOverrideIcon__k7R0f\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './PrioritisationProgramDetails.module.css';\r\nimport closeIcon from '../../../assets/icons/Close.svg';\r\n\r\nimport {\r\n  attributesOverrideGreenIcon,\r\n  attributesOverrideGreenToggledIcon,\r\n} from '../../../assets';\r\nimport { useEffect } from 'react';\r\n\r\nfunction ProgramDetailsComponent({ component, program, callbackCloseDetails }) {\r\n  const [overrideValues, setOverrideValues] = useState({\r\n    title: false,\r\n    genre: false,\r\n    grade: false,\r\n    certificate: false,\r\n    yearofProduction: false,\r\n    duration: false,\r\n  });\r\n  const overrideSeparator = ':@:';\r\n\r\n  const handleToggleOverrideValues = (name) => {\r\n    setOverrideValues({ ...overrideValues, [name]: !overrideValues[name] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (program) {\r\n      setOverrideValues({\r\n        title: false,\r\n        genre: !program.titleAttributes.Genre\r\n          ? ''\r\n          : program.titleAttributes.Genre.split(overrideSeparator)[1],\r\n        grade: !program.titleAttributes.Grade\r\n          ? ''\r\n          : program.titleAttributes.Grade.split(overrideSeparator)[1],\r\n        certificate: !program.titleAttributes.Certificate\r\n          ? ''\r\n          : program.titleAttributes.Certificate.split(overrideSeparator)[1],\r\n        yearofProduction: program.titleAttributes.YearofProduction\r\n          ? program.titleAttributes.YearofProduction.split(overrideSeparator)[1]\r\n          : '',\r\n        duration: !program.titleAttributes.Duration\r\n          ? ''\r\n          : program.titleAttributes.Duration.split(overrideSeparator)[1],\r\n      });\r\n    }\r\n  }, [program]);\r\n\r\n  return (\r\n    <div>\r\n      {program && (\r\n        <div className=\"col-12\">\r\n          <div className={styles.panel}>\r\n            <div className=\"position-relative\">\r\n              <i>\r\n                <img\r\n                  className={styles.closeIcon}\r\n                  src={closeIcon}\r\n                  alt=\"\"\r\n                  onClick={callbackCloseDetails}\r\n                  onKeyDown={callbackCloseDetails}\r\n                  role=\"presentation\"\r\n                />\r\n              </i>\r\n            </div>\r\n            <div className={styles.programDetails}>\r\n              <div className={`${styles.titleDiv} d-flex`}>\r\n                <div className={styles.test}>\r\n                  {!overrideValues.title\r\n                    ? program.titleName.split(overrideSeparator)[0]\r\n                    : program.titleName.split(overrideSeparator)[1]}\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    class={styles.titleAttributesOverrideIcon}\r\n                    src={\r\n                      overrideValues.title\r\n                        ? attributesOverrideGreenIcon\r\n                        : attributesOverrideGreenToggledIcon\r\n                    }\r\n                    onClick={() => handleToggleOverrideValues('title')}\r\n                    onKeyDown={() => handleToggleOverrideValues('title')}\r\n                    alt=\"\"\r\n                    title={\r\n                      overrideValues.title\r\n                        ? program.titleName.split(overrideSeparator)[0]\r\n                        : program.titleName.split(overrideSeparator)[1]\r\n                    }\r\n                    hidden={\r\n                      program.titleName.split(overrideSeparator)[0].trim === '' ||\r\n                      !program.titleName.split(overrideSeparator)[1]\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.content}>\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Title ID:</b>\r\n                    <b className={styles.fontBold}>{program.titleId}</b>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    {' '}\r\n                    <b className={styles.labelField}>Deal Code:</b>\r\n                    <b className={styles.fontBold}>\r\n                      {' '}\r\n                      {program.titleAttributes.DealCode}\r\n                    </b>\r\n                  </div>\r\n                  <div className={`${styles.dealNameDiv} col-12`}>\r\n                    {' '}\r\n                    <b className={styles.labelField}>Deal Name:</b>\r\n                    <b className={styles.fontBold}>\r\n                      {' '}\r\n                      {program.titleAttributes.DealName}\r\n                    </b>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-3\">\r\n                  <div className=\"col-12\">\r\n                    {' '}\r\n                    <b className={styles.labelField}>Genre:</b>\r\n                    <div className=\"d-flex\">\r\n                      <div className={styles.fontBold}>\r\n                        {' '}\r\n                        {!program.titleAttributes.Genre\r\n                          ? ''\r\n                          : !overrideValues.genre\r\n                          ? program.titleAttributes.Genre.split(\r\n                              overrideSeparator\r\n                            )[0] || <br />\r\n                          : program.titleAttributes.Genre.split(\r\n                              overrideSeparator\r\n                            )[1] || <br />}\r\n                      </div>\r\n                      <div className={styles.attributesLabel}>\r\n                        <img\r\n                          class={styles.attributesOverrideIcon}\r\n                          src={\r\n                            overrideValues.genre\r\n                              ? attributesOverrideGreenIcon\r\n                              : attributesOverrideGreenToggledIcon\r\n                          }\r\n                          onClick={() => handleToggleOverrideValues('genre')}\r\n                          onKeyDown={() => handleToggleOverrideValues('genre')}\r\n                          alt=\"\"\r\n                          title={\r\n                            !program.titleAttributes.Genre\r\n                              ? ''\r\n                              : overrideValues.genre\r\n                              ? program.titleAttributes.Genre.split(\r\n                                  overrideSeparator\r\n                                )[0]\r\n                              : program.titleAttributes.Genre.split(\r\n                                  overrideSeparator\r\n                                )[1]\r\n                          }\r\n                          hidden={\r\n                            !program.titleAttributes.Genre ||\r\n                            program.titleAttributes.Genre.split(\r\n                              overrideSeparator\r\n                            )[0].trim === '' ||\r\n                            !program.titleAttributes.Genre.split(\r\n                              overrideSeparator\r\n                            )[1]\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Duration (hh:mm:ss):</b>{' '}\r\n                    <div className=\"d-flex\">\r\n                      <div className={styles.fontBold}>\r\n                        {' '}\r\n                        {!program.titleAttributes.Duration\r\n                          ? ''\r\n                          : !overrideValues.duration\r\n                          ? program.titleAttributes.Duration.split(\r\n                              overrideSeparator\r\n                            )[0] || <br />\r\n                          : program.titleAttributes.Duration.split(\r\n                              overrideSeparator\r\n                            )[1] || <br />}\r\n                      </div>\r\n                      <div className={styles.attributesLabel}>\r\n                        <img\r\n                          class={styles.attributesOverrideIcon}\r\n                          src={\r\n                            overrideValues.duration\r\n                              ? attributesOverrideGreenIcon\r\n                              : attributesOverrideGreenToggledIcon\r\n                          }\r\n                          onClick={() => handleToggleOverrideValues('duration')}\r\n                          onKeyDown={() =>\r\n                            handleToggleOverrideValues('duration')\r\n                          }\r\n                          alt=\"\"\r\n                          title={\r\n                            !program.titleAttributes.Duration\r\n                              ? ''\r\n                              : overrideValues.duration\r\n                              ? program.titleAttributes.Duration.split(\r\n                                  overrideSeparator\r\n                                )[0]\r\n                              : program.titleAttributes.Duration.split(\r\n                                  overrideSeparator\r\n                                )[1]\r\n                          }\r\n                          hidden={\r\n                            !program.titleAttributes.Duration ||\r\n                            program.titleAttributes.Duration.split(\r\n                              overrideSeparator\r\n                            )[0].trim === '' ||\r\n                            !program.titleAttributes.Duration.split(\r\n                              overrideSeparator\r\n                            )[1]\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Year of Production: </b>\r\n\r\n                    <div className=\"d-flex\">\r\n                      <div className={styles.fontBold}>\r\n                        {' '}\r\n                        {!overrideValues.yearofProduction\r\n                          ? program.titleAttributes.YearofProduction\r\n                            ? program.titleAttributes.YearofProduction.split(\r\n                                overrideSeparator\r\n                              )[0] || <br />\r\n                            : ''\r\n                          : program.titleAttributes.YearofProduction\r\n                          ? program.titleAttributes.YearofProduction.split(\r\n                              overrideSeparator\r\n                            )[1] || <br />\r\n                          : ''}\r\n                      </div>\r\n                      <div className={styles.attributesLabel}>\r\n                        <img\r\n                          class={styles.attributesOverrideIcon}\r\n                          src={\r\n                            overrideValues.yearofProduction\r\n                              ? attributesOverrideGreenIcon\r\n                              : attributesOverrideGreenToggledIcon\r\n                          }\r\n                          onClick={() =>\r\n                            handleToggleOverrideValues('yearofProduction')\r\n                          }\r\n                          onKeyDown={() =>\r\n                            handleToggleOverrideValues('yearofProduction')\r\n                          }\r\n                          alt=\"\"\r\n                          title={\r\n                            overrideValues.yearofProduction\r\n                              ? program.titleAttributes.YearofProduction\r\n                                ? program.titleAttributes.YearofProduction.split(\r\n                                    overrideSeparator\r\n                                  )[0]\r\n                                : ''\r\n                              : program.titleAttributes.YearofProduction\r\n                              ? program.titleAttributes.YearofProduction.split(\r\n                                  overrideSeparator\r\n                                )[1]\r\n                              : ''\r\n                          }\r\n                          hidden={\r\n                            !program.titleAttributes.YearofProduction ||\r\n                            program.titleAttributes.YearofProduction.split(\r\n                              overrideSeparator\r\n                            )[0].trim === '' ||\r\n                            !program.titleAttributes.YearofProduction.split(\r\n                              overrideSeparator\r\n                            )[1]\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-3\">\r\n                  <div className=\"col-12\">\r\n                    {' '}\r\n                    <b className={styles.labelField}>Grade:</b>{' '}\r\n                    <div className=\"d-flex\">\r\n                      <div className={styles.fontBold}>\r\n                        {' '}\r\n                        {!program.titleAttributes.Grade\r\n                          ? ''\r\n                          : !overrideValues.grade\r\n                          ? program.titleAttributes.Grade.split(\r\n                              overrideSeparator\r\n                            )[0] || <br />\r\n                          : program.titleAttributes.Grade.split(\r\n                              overrideSeparator\r\n                            )[1] || <br />}\r\n                      </div>\r\n                      <div className={styles.attributesLabel}>\r\n                        <img\r\n                          class={styles.attributesOverrideIcon}\r\n                          src={\r\n                            overrideValues.grade\r\n                              ? attributesOverrideGreenIcon\r\n                              : attributesOverrideGreenToggledIcon\r\n                          }\r\n                          onClick={() => handleToggleOverrideValues('grade')}\r\n                          onKeyDown={() => handleToggleOverrideValues('grade')}\r\n                          alt=\"\"\r\n                          title={\r\n                            !program.titleAttributes.Grade\r\n                              ? ''\r\n                              : overrideValues.grade\r\n                              ? program.titleAttributes.Grade.split(\r\n                                  overrideSeparator\r\n                                )[0]\r\n                              : program.titleAttributes.Grade.split(\r\n                                  overrideSeparator\r\n                                )[1]\r\n                          }\r\n                          hidden={\r\n                            !program.titleAttributes.Grade ||\r\n                            program.titleAttributes.Grade.split(\r\n                              overrideSeparator\r\n                            )[0].trim === ''||\r\n                            !program.titleAttributes.Grade.split(\r\n                              overrideSeparator\r\n                            )[1]\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Certificate: </b>\r\n\r\n                    <div className=\"d-flex\">\r\n                      <div className={styles.fontBold}>\r\n                        {' '}\r\n                        {program.titleAttributes.certificate === ''\r\n                          ? ''\r\n                          : !overrideValues.certificate\r\n                          ? program.titleAttributes.Certificate.split(\r\n                              overrideSeparator\r\n                            )[0] || <br />\r\n                          : program.titleAttributes.Certificate.split(\r\n                              overrideSeparator\r\n                            )[1] || <br />}\r\n                      </div>\r\n                      <div className={styles.attributesLabel}>\r\n                        <img\r\n                          class={styles.attributesOverrideIcon}\r\n                          src={\r\n                            overrideValues.certificate\r\n                              ? attributesOverrideGreenIcon\r\n                              : attributesOverrideGreenToggledIcon\r\n                          }\r\n                          onClick={() =>\r\n                            handleToggleOverrideValues('certificate')\r\n                          }\r\n                          onKeyDown={() =>\r\n                            handleToggleOverrideValues('certificate')\r\n                          }\r\n                          alt=\"\"\r\n                          title={\r\n                            !program.titleAttributes.Certificate\r\n                              ? ''\r\n                              : overrideValues.certificate\r\n                              ? program.titleAttributes.Certificate.split(\r\n                                  overrideSeparator\r\n                                )[0]\r\n                              : program.titleAttributes.Certificate.split(\r\n                                  overrideSeparator\r\n                                )[1]\r\n                          }\r\n                          hidden={\r\n                            program.titleAttributes.certificate === '' ||\r\n                            program.titleAttributes.Certificate.split(\r\n                              overrideSeparator\r\n                            )[0].trim === '' ||\r\n                            !program.titleAttributes.Certificate.split(\r\n                              overrideSeparator\r\n                            )[1]\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {(component === 'Prioritisation' || component === 'Schedule') && (\r\n                    <>\r\n                      <div className=\"col-12\">\r\n                        <b className={styles.labelField}>Window Start Date</b>\r\n\r\n                        <b className={styles.fontBold}>\r\n                          {program.titleAttributes.WindowStartDate}\r\n                        </b>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <b className={styles.labelField}>Window End Date</b>\r\n\r\n                        <b className={styles.fontBold}>\r\n                          {program.titleAttributes.WindowEndDate}\r\n                        </b>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"col-3\">\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Day Type: </b>\r\n\r\n                    <b className={styles.fontBold}>\r\n                      {program.titleAttributes.DayType}\r\n                    </b>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <b className={styles.labelField}>Day Period:</b>{' '}\r\n                    <b className={styles.fontBold}>\r\n                      {program.titleAttributes.DayPeriod}\r\n                    </b>\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    {' '}\r\n                    <b className={styles.labelField}>Exhib Plays:</b>{' '}\r\n                    <b className={styles.fontBold}>\r\n                      {program.titleAttributes.ExhibPlays}\r\n                    </b>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {'Title Group/Title Exclusions'.includes(component) && (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                      <b className={styles.labelField}>Channels</b>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <b className={styles.labelField}>Window Start Date</b>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <b className={styles.labelField}>Window End Date</b>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {program.channels.map((channel) => (\r\n                    <div className=\"row\">\r\n                      <div className=\"col-3\">\r\n                        <b className={styles.fontBold}>{channel.name}</b>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6\">\r\n                            <b className={styles.fontBold}>\r\n                              {channel.windowsStartDate}\r\n                            </b>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <b className={styles.fontBold}>\r\n                              {channel.windowsEndDate}\r\n                            </b>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nProgramDetailsComponent.propTypes = {\r\n  program: PropTypes.shape.isRequired,\r\n  callbackCloseDetails: PropTypes.func.isRequired,\r\n};\r\nexport default ProgramDetailsComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBody\":\"styles_modalBody__lbsoV\",\"modalBodyButtons\":\"styles_modalBodyButtons__i133D\",\"cancelButton\":\"styles_cancelButton__ItBco\",\"saveModalButton\":\"styles_saveModalButton__dhh6y\"};","import { Modal } from 'react-bootstrap';\r\nimport styles from './styles.module.css';\r\n\r\nconst ConfirmLeavePageModalComponent = ({ show, onHide, onSave, onDiscard }) => {\r\n    return (\r\n        <Modal\r\n            size=\"md\"\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n            <Modal.Body className={styles.modalBody}>\r\n                <div>\r\n                    You have unsaved changes, are you sure you want to navigate away\r\n                    from this page?\r\n                </div>\r\n                <div className={styles.modalBodyButtons}>\r\n                    <button\r\n                        className={styles.saveModalButton}\r\n                        onClick={onSave}\r\n                    >\r\n                        Save and proceed\r\n                    </button>\r\n                    <button\r\n                        className={styles.saveModalButton}\r\n                        onClick={onDiscard}\r\n                    >\r\n                        Discard changes and proceed\r\n                    </button>\r\n                    <button\r\n                        className={styles.cancelButton}\r\n                        onClick={onHide}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ConfirmLeavePageModalComponent;"],"names":["useCallbackPrompt","when","navigate","useNavigate","location","useLocation","useState","showPrompt","setShowPrompt","lastLocation","setLastLocation","confirmedNavigation","setConfirmedNavigation","cancelNavigation","useCallback","handleBlockedNavigation","nextLocation","pathname","confirmNavigation","useEffect","blocker","navigator","React","UNSAFE_NavigationContext","unblock","block","tx","autoUnblockingTx","retry","useBlocker","component","program","callbackCloseDetails","title","grade","rating","overrideValues","setOverrideValues","overrideSeparator","handleToggleOverrideValues","name","className","styles","src","closeIcon","alt","onClick","onKeyDown","role","style","marginBottom","fontSize","fontWeight","titleName","split","class","attributesOverrideGreenIcon","attributesOverrideGreenToggledIcon","titleId","titleAttributes","Studio","Rating","marginTop","Grade","PlayRestrictions","duration","Duration","WindowStartDate","WindowEndDate","PlayBefore","PlayAfter","channels","map","channel","windowsStartDate","windowsEndDate","genre","certificate","yearofProduction","Genre","Certificate","YearofProduction","hidden","trim","DealCode","DealName","DayType","DayPeriod","ExhibPlays","includes","show","onHide","onSave","onDiscard","Modal","size"],"sourceRoot":""}
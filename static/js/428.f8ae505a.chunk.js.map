{"version":3,"file":"static/js/428.f8ae505a.chunk.js","mappings":"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","sources":["assets/icons/Clear-Filter.svg","assets/icons/Schedule-List.svg","webpack://sky/./src/components/_reusable/table/table.module.css?bbe8","webpack://sky/./src/components/_reusable/table/table-footer/TableFooter.module.css?5630","components/_reusable/table/table-footer/TableFooterComponent.jsx","components/_reusable/table/TableComponent.jsx"],"sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClearFilter(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 19,\n    viewBox: \"0 0 18 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_741_10803)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.58 0.209999C14.17 -0.120001 13.56 -0.0600005 13.23 0.349999L7.44999 7.49C7.43999 7.51 7.42999 7.52 7.41999 7.53C6.81999 7.41 6.14999 7.43 5.42999 7.61C3.56999 8.07 1.89999 9.39 1.07999 11.06C-0.320014 13.89 0.0299855 18.23 0.0399855 18.41L0.0999855 19H11.84H13.47L12.28 17.89C12.26 17.88 10.7 16.41 10.08 14.2C9.83999 13.36 9.83999 12.5 9.82999 11.66C9.80999 10.53 9.79998 9.36 9.10999 8.5L14.73 1.56C15.06 1.15 15 0.549999 14.58 0.209999ZM5.73999 8.86C6.60999 8.65 7.38999 8.72 7.86999 9.07C8.27999 9.37 8.43999 9.81 8.49999 10.44C7.89999 10.64 7.34999 10.64 6.81999 10.44C6.05999 10.15 5.52999 9.49 5.21999 9.02C5.38999 8.95 5.55999 8.9 5.73999 8.86ZM10.44 17.72H8.23999C7.31999 16.67 6.94999 14.56 6.87999 13.79C6.84999 13.44 6.53999 13.18 6.18999 13.21C5.83999 13.24 5.57999 13.55 5.60999 13.9C5.61999 14.01 5.80999 16.11 6.69999 17.72H4.79999C4.11999 16.55 4.04999 14.59 4.08999 13.88C4.10999 13.53 3.83999 13.23 3.48999 13.21C3.13999 13.19 2.83999 13.46 2.81999 13.81C2.80999 13.92 2.70999 16.02 3.39999 17.72H1.28999C1.24999 16.48 1.26999 13.57 2.22999 11.63C2.61999 10.83 3.28999 10.12 4.07999 9.6C4.46999 10.24 5.20999 11.19 6.34999 11.63C6.76999 11.79 7.19999 11.87 7.63999 11.87C7.93999 11.87 8.23999 11.83 8.54999 11.76C8.55999 12.61 8.56999 13.57 8.84999 14.55C9.21999 15.89 9.87998 16.98 10.44 17.72Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6301 14.51V16.88L14.0501 17.67V14.51L11.6801 10.96V10.17H18.0001V10.96L15.6301 14.51ZM12.6301 10.96L14.8401 14.27L17.0501 10.96H12.6301Z\",\n    fill: \"black\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_741_10803\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 19,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearFilter);\nexport default __webpack_public_path__ + \"static/media/Clear-Filter.353e938cac1815fe51e6794e3d3ee292.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgScheduleList(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 19,\n    height: 18,\n    viewBox: \"0 0 19 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 4H6.5C5.4 4 4.5 4.9 4.5 6V16C4.5 17.1 5.4 18 6.5 18H16.5C17.6 18 18.5 17.1 18.5 16V6C18.5 4.9 17.6 4 16.5 4ZM16.5 6V8H6.5V6H16.5ZM10.5 12V10H12.5V12H10.5ZM12.5 14V16H10.5V14H12.5ZM8.5 12H6.5V10H8.5V12ZM14.5 10H16.5V12H14.5V10ZM6.5 14H8.5V16H6.5V14ZM14.5 16V14H16.5V16H14.5ZM3.5 14H2.5C1.4 14 0.5 13.1 0.5 12V2C0.5 0.9 1.4 0 2.5 0H12.5C13.6 0 14.5 0.9 14.5 2V3H12.5V2H2.5V12H3.5V14Z\",\n    fill: \"#008662\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgScheduleList);\nexport default __webpack_public_path__ + \"static/media/Schedule-List.427e1e20a2914f5d13044254c0c4ed08.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"table_table__XJuX3\",\"boxShadow\":\"table_boxShadow__+f7fe\",\"tableBodyDiv\":\"table_tableBodyDiv__21h4n\",\"tableBody\":\"table_tableBody__dTCWT\",\"activeView\":\"table_activeView__Srq-P\",\"table-body-row\":\"table_table-body-row__jqPYF\",\"td\":\"table_td__RvC-k\"};","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"TableFooter_footer__-IReU\",\"tableFooter\":\"TableFooter_tableFooter__s8cWh\",\"label\":\"TableFooter_label__D07XZ\",\"labelCol\":\"TableFooter_labelCol__bmrXD\",\"labelOverflowHidden\":\"TableFooter_labelOverflowHidden__9Ocm7\",\"paginationCol\":\"TableFooter_paginationCol__Rqiad\",\"paginationBtn\":\"TableFooter_paginationBtn__yaKAU\",\"paginationActiveBtn\":\"TableFooter_paginationActiveBtn__NUOmN\",\"chevLeftIcon\":\"TableFooter_chevLeftIcon__rKzDl\",\"chevRightIcon\":\"TableFooter_chevRightIcon__WGEzE\",\"chevFirstPage\":\"TableFooter_chevFirstPage__6Zcd5\",\"chevLastPage\":\"TableFooter_chevLastPage__CgJ9I\",\"listSelection\":\"TableFooter_listSelection__A5hCm\",\"pageSizeOptions\":\"TableFooter_pageSizeOptions__fVFhy\",\"optionItem\":\"TableFooter_optionItem__st1DA\",\"exportButton\":\"TableFooter_exportButton__s12KG\"};","import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './TableFooter.module.css';\r\nimport chevLeft from '../../../../assets/icons/Chev-Left.png';\r\nimport chevRight from '../../../../assets/icons/Chev-Right.png';\r\nimport chevLeftFirst from '../../../../assets/icons/Chev-Left-First.png';\r\nimport chevRightLast from '../../../../assets/icons/Chev-Right-Last.png';\r\n\r\nfunction TableFooterComponent(props) {\r\n  const {\r\n    hasExport,\r\n    // exportUsers,\r\n    paginationParameters,\r\n    isExporting,\r\n    onExport,\r\n    isTableBodyLoading,\r\n    paginate,\r\n    paginationData,\r\n  } = props;\r\n  const [showPageSizeOptions, setShowPageSizeOptions] = useState(false);\r\n  const pageSizeOptions = [50, 100, 200];\r\n  const totalPages = Math.trunc(paginationParameters.totalPages);\r\n  const firstPages = [1, 2, 3];\r\n  const initialButtons = [1, 2, 3, 4, 5];\r\n  const [middlePages, setMiddlePages] = useState([4, 5, 6, 7, 8]);\r\n  const lastPages = [totalPages - 2, totalPages - 1, totalPages];\r\n  const pageSizeOptionsRef = useRef();\r\n\r\n  // const handleExportUsers = () => {\r\n  //   exportUsers();\r\n  // };\r\n\r\n  const paginateTo = (currentPage) => {\r\n    if (currentPage < totalPages - 3 || currentPage > totalPages - 3) {\r\n      setMiddlePages([\r\n        (middlePages[0] = totalPages - 6),\r\n        (middlePages[1] = totalPages - 5),\r\n        (middlePages[2] = totalPages - 4),\r\n        (middlePages[3] = totalPages - 3),\r\n        (middlePages[4] = totalPages - 2),\r\n      ]);\r\n    }\r\n    if (currentPage > 6 && currentPage < totalPages - 4) {\r\n      setMiddlePages([\r\n        (middlePages[0] = currentPage - 2),\r\n        (middlePages[1] = currentPage - 1),\r\n        (middlePages[2] = currentPage),\r\n        (middlePages[3] = currentPage + 1),\r\n        (middlePages[4] = currentPage + 2),\r\n      ]);\r\n    }\r\n    if (currentPage <= 6) {\r\n      setMiddlePages([\r\n        (middlePages[0] = 3),\r\n        (middlePages[1] = 4),\r\n        (middlePages[2] = 5),\r\n        (middlePages[3] = 6),\r\n        (middlePages[4] = 7),\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const paginateToFirstPage = () => {\r\n    paginate(1, paginationData.pageSize);\r\n    paginateTo(1);\r\n  };\r\n\r\n  const paginateToLastPage = () => {\r\n    paginate(totalPages, paginationData.pageSize);\r\n    paginateTo(totalPages);\r\n  };\r\n\r\n  const decrementPageButtonNumbers = () => {\r\n    if (\r\n      paginationData.currentPage > 6\r\n      && paginationData.currentPage < totalPages - 4\r\n    ) {\r\n      setMiddlePages([\r\n        middlePages[0] - 1,\r\n        middlePages[1] - 1,\r\n        middlePages[2] - 1,\r\n        middlePages[3] - 1,\r\n        middlePages[4] - 1,\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const incrementPageButtonNumbers = () => {\r\n    if (\r\n      paginationData.currentPage > 5\r\n      && paginationData.currentPage < totalPages - 5\r\n    ) {\r\n      setMiddlePages([\r\n        middlePages[0] + 1,\r\n        middlePages[1] + 1,\r\n        middlePages[2] + 1,\r\n        middlePages[3] + 1,\r\n        middlePages[4] + 1,\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const togglePageSizeOptions = () => {\r\n    setShowPageSizeOptions(!showPageSizeOptions);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (paginationData.currentPage > 1) {\r\n      paginate(paginationData.currentPage - 1, paginationData.pageSize);\r\n    }\r\n    decrementPageButtonNumbers();\r\n  };\r\n\r\n  const setCurrentPage = (page) => {\r\n    paginate(page, paginationData.pageSize);\r\n    paginateTo(page);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (paginationData.currentPage < paginationData.totalPages) {\r\n      paginate(paginationData.currentPage + 1, paginationData.pageSize);\r\n    }\r\n    incrementPageButtonNumbers();\r\n  };\r\n\r\n  const handlePageSize = (size) => {\r\n    paginate(1, size);\r\n    setShowPageSizeOptions(false);\r\n  };\r\n\r\n  const pageFrom = () => {\r\n    if (paginationParameters.totalCount > 0) {\r\n      if (paginationParameters.currentPage > 1) {\r\n        return (\r\n          (paginationParameters.currentPage - 1)\r\n            * paginationParameters.pageSize\r\n          + 1\r\n        );\r\n      }\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const pageTo = () => {\r\n    if (paginationParameters.totalCount > 0) {\r\n      if (\r\n        paginationParameters.currentPage > 1\r\n        && (paginationParameters.currentPage - 1) * paginationParameters.pageSize\r\n          + paginationParameters.pageSize\r\n          < paginationParameters.totalCount\r\n      ) {\r\n        const computeTo = (paginationParameters.currentPage - 1)\r\n            * paginationParameters.pageSize\r\n          + paginationParameters.pageSize;\r\n        return computeTo;\r\n      }\r\n      if (paginationParameters.pageSize !== null) {\r\n        if (paginationParameters.totalCount > paginationParameters.pageSize) {\r\n          if (paginationParameters.currentPage === totalPages) {\r\n            return paginationParameters.totalCount;\r\n          }\r\n          return paginationParameters.pageSize;\r\n        }\r\n        return paginationParameters.totalCount;\r\n      }\r\n      return 0;\r\n    }\r\n    return 0;\r\n\r\n    // paginationParameters.totalCount > 0\r\n    //           ? paginationParameters.currentPage > 1\r\n    //             && (paginationParameters.currentPage - 1)\r\n    //               * paginationParameters.pageSize\r\n    //               + paginationParameters.pageSize\r\n    //               < paginationParameters.totalCount\r\n    //       ? // Render ((currentPage - 1) * pageSize) + pageSize, if totalCount is greater\r\n    //                than 0,   currentPage is greater than 1 and less than totalCount\r\n    //             (paginationParameters.currentPage - 1)\r\n    //                 * paginationParameters.pageSize\r\n    //               + paginationParameters.pageSize\r\n    //             : // Render pageSize if condition above is false\r\n    //             paginationParameters.pageSize\r\n    //               ? paginationParameters.totalCount\r\n    //               > paginationParameters.pageSize\r\n    //                 ? // Render pagesize as value, if totalCount is greater than 0 and totalCount\r\n    //                 paginationParameters.currentPage === totalPages\r\n    //                   ? paginationParameters.totalCount\r\n    //                   : paginationParameters.pageSize\r\n    //                 : // Render totalCount as value, if totalCount is\r\n    //                        greater than 0 and less than pageSize\r\n    //                 paginationParameters.totalCount\r\n    //               : // Render zero if all conditions is false\r\n    //               0\r\n    //           : 0\r\n  };\r\n\r\n  const paginationBtn = () => {\r\n    if (paginationParameters.totalCount > 0) {\r\n      if (paginationParameters.pageSize != null) {\r\n        if (paginationParameters.totalCount > paginationParameters.pageSize) {\r\n          return paginationParameters.pageSize;\r\n        }\r\n        return paginationParameters.totalCount;\r\n      }\r\n      return 0;\r\n    }\r\n    return 0;\r\n\r\n    // paginationParameters.totalCount > 0\r\n    //  ? paginationParameters.pageSize\r\n    //   ? paginationParameters.totalCount\r\n    //    > paginationParameters.pageSize\r\n    //   ? // Render pagesize as value of totalCount is greater than 0 and totalCount\r\n    //   paginationParameters.pageSize\r\n    //  : // Render totalCount as value of totalCount is greater than 0 and less than pageSize\r\n    //                 paginationParameters.totalCount\r\n    //               : // Render zero if all conditions is false\r\n    //               0\r\n    //             : 0\r\n  };\r\n\r\n  const moreThanFive = () => {\r\n    if (\r\n      paginationParameters.currentPage > 2\r\n      && paginationParameters.currentPage < totalPages - 1\r\n    ) {\r\n      return (\r\n        <>\r\n          {/* Render if total pages is more than 5 and you're in page 6 above */}\r\n          <button\r\n            className={`${Styles.paginationBtn} ${\r\n              paginationParameters.currentPage === 1\r\n                ? Styles.paginationActiveBtn\r\n                : null\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => setCurrentPage(1)}\r\n          >\r\n            1\r\n          </button>\r\n          <button className={Styles.paginationBtn} type=\"button\">\r\n            ..\r\n          </button>\r\n          {middlePages.map((button) => (\r\n            <button\r\n              className={`${Styles.paginationBtn} ${\r\n                button === paginationParameters.currentPage\r\n                  ? Styles.paginationActiveBtn\r\n                  : null\r\n              }`}\r\n              type=\"button\"\r\n              key={button.id}\r\n              onClick={() => setCurrentPage(button)}\r\n            >\r\n              {button}\r\n            </button>\r\n          ))}\r\n          <button className={Styles.paginationBtn} type=\"button\">\r\n            ..\r\n          </button>\r\n          <button\r\n            className={`${Styles.paginationBtn} ${\r\n              Math.trunc(paginationParameters.totalPages)\r\n              === paginationParameters.currentPage\r\n                ? Styles.paginationActiveBtn\r\n                : null\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => setCurrentPage(Math.trunc(paginationParameters.totalPages))}\r\n          >\r\n            {Math.trunc(paginationParameters.totalPages)}\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {/* Render if total pages is more than 5 and you're in\r\n            page 1/2/3/lastpage - 2/lastpage - 1/lastpage */}\r\n        {firstPages.map((button) => (\r\n          <button\r\n            className={`${Styles.paginationBtn} ${\r\n              button === paginationParameters.currentPage\r\n                ? Styles.paginationActiveBtn\r\n                : null\r\n            }`}\r\n            type=\"button\"\r\n            key={button.id}\r\n            onClick={() => setCurrentPage(button)}\r\n          >\r\n            {button}\r\n          </button>\r\n        ))}\r\n        <button className={Styles.paginationBtn} type=\"button\">\r\n          ..\r\n        </button>\r\n        {lastPages.map((button) => (\r\n          <button\r\n            className={`${Styles.paginationBtn} ${\r\n              button === paginationParameters.currentPage\r\n                ? Styles.paginationActiveBtn\r\n                : null\r\n            }`}\r\n            type=\"button\"\r\n            key={button.id}\r\n            onClick={() => setCurrentPage(button)}\r\n          >\r\n            {button}\r\n          </button>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={Styles.footer}>\r\n      <div>\r\n        <div\r\n          className=\"d-flex\"\r\n          hidden={paginationParameters.totalPages === 0 || isTableBodyLoading}\r\n        >\r\n          <div className={`${Styles.labelCol} d-flex align-items-center`}>\r\n          <span className={Styles.label}>Listing</span>\r\n          <span className=\"position-relative\">\r\n            <button\r\n              className={Styles.listSelection}\r\n              onClick={togglePageSizeOptions}\r\n              disabled={paginationParameters.totalCount === 0}\r\n              type=\"button\"\r\n            >\r\n              {paginationBtn()}\r\n            </button>\r\n            <div\r\n              ref={pageSizeOptionsRef}\r\n              className={Styles.pageSizeOptions}\r\n              style={{\r\n                display: showPageSizeOptions ? null : 'none',\r\n                height: `${pageSizeOptions.length * 25}px`,\r\n                marginTop: `-${pageSizeOptions.length * 25 - 1}px`,\r\n              }}\r\n            >\r\n              {pageSizeOptions.map((value) => (\r\n                <div\r\n                  className={Styles.optionItem}\r\n                  key={value.id}\r\n                  onClick={() => handlePageSize(value)}\r\n                  onKeyDown={() => handlePageSize(value)}\r\n                  role=\"presentation\"\r\n                >\r\n                  {value}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </span>\r\n          <div className={Styles.labelOverflowHidden}>\r\n            <span className={Styles.label}>\r\n              entries, showing {pageFrom()} to {pageTo()} of{' '}\r\n              {paginationParameters.totalCount\r\n                ? paginationParameters.totalCount\r\n                : 0}\r\n            </span>\r\n          </div>\r\n          {hasExport && (\r\n            <button\r\n              className={Styles.exportButton}\r\n              onClick={onExport}\r\n              style={{\r\n                left: paginationParameters.totalPages < 2 ? null : '0',\r\n                marginRight:\r\n                  paginationParameters.totalPages < 2 ? '20px' : 'auto',\r\n                marginLeft: paginationParameters.totalPages < 2 ? null : 'auto',\r\n              }}\r\n              disabled={\r\n                paginationParameters.totalCount === 0\r\n                  ? true\r\n                  : false || isExporting\r\n              }\r\n              type=\"button\"\r\n            >\r\n              Export\r\n              {' '}\r\n              {isExporting && (\r\n                <i className=\"fas fa-circle-notch fa-spin mx-2\" />\r\n              )}\r\n            </button>\r\n          )}\r\n          </div>\r\n          <div className={Styles.paginationCol}>\r\n          <div\r\n            className=\"btn-group float-end\"\r\n            role=\"group\"\r\n            style={{ display: totalPages > 1 ? null : 'none' }}\r\n          >\r\n            <button\r\n              className={Styles.paginationBtn}\r\n              type=\"button\"\r\n              onClick={paginateToFirstPage}\r\n            >\r\n              <img\r\n                className={Styles.chevFirstPage}\r\n                src={chevLeftFirst}\r\n                alt=\"Paginate-Left-First\"\r\n              />\r\n            </button>\r\n            <button\r\n              className={Styles.paginationBtn}\r\n              type=\"button\"\r\n              onClick={handlePreviousPage}\r\n            >\r\n              <img\r\n                className={Styles.chevLeftIcon}\r\n                src={chevLeft}\r\n                alt=\"Paginate-Left\"\r\n              />\r\n            </button>\r\n            {paginationParameters.totalPages > 5 ? (\r\n              moreThanFive()\r\n            ) : (\r\n              <>\r\n                {totalPages === 5 && (\r\n                  <>\r\n                    {/* Render if total pages is Equal to 5 */}\r\n                    {initialButtons.map((button) => (\r\n                      <button\r\n                        className={`${Styles.paginationBtn} ${\r\n                          button === paginationParameters.currentPage\r\n                            ? Styles.paginationActiveBtn\r\n                            : null\r\n                        }`}\r\n                        type=\"button\"\r\n                        key={button.id}\r\n                        onClick={() => setCurrentPage(button)}\r\n                      >\r\n                        {button}\r\n                      </button>\r\n                    ))}\r\n                  </>\r\n                )}\r\n                {totalPages !== 5 && (\r\n                  <>\r\n                    {/* Render if total pages is less than 5 */}\r\n                    {initialButtons\r\n                      .slice(0, paginationParameters.totalPages)\r\n                      .map((button) => (\r\n                        <button\r\n                          className={`${Styles.paginationBtn} ${\r\n                            button === paginationParameters.currentPage\r\n                              ? Styles.paginationActiveBtn\r\n                              : null\r\n                          }`}\r\n                          type=\"button\"\r\n                          key={button.id}\r\n                          onClick={() => setCurrentPage(button)}\r\n                        >\r\n                          {button}\r\n                        </button>\r\n                      ))}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <button\r\n              className={Styles.paginationBtn}\r\n              type=\"button\"\r\n              onClick={handleNextPage}\r\n            >\r\n              <img\r\n                className={Styles.chevRightIcon}\r\n                src={chevRight}\r\n                alt=\"Paginate-Right\"\r\n              />\r\n            </button>\r\n            <button\r\n              className={Styles.paginationBtn}\r\n              type=\"button\"\r\n              onClick={paginateToLastPage}\r\n            >\r\n              <img\r\n                className={Styles.chevLastPage}\r\n                src={chevRightLast}\r\n                alt=\"Paginate-Right-Last\"\r\n              />\r\n            </button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTableFooterComponent.propTypes = {\r\n  hasExport: PropTypes.bool,\r\n  // exportUsers: PropTypes.func.isRequired,\r\n  paginationParameters: PropTypes.shape.isRequired,\r\n  isExporting: PropTypes.bool,\r\n  onExport: PropTypes.func.isRequired,\r\n  isTableBodyLoading: PropTypes.bool,\r\n  paginate: PropTypes.func.isRequired,\r\n  paginationData: PropTypes.shape.isRequired,\r\n};\r\nTableFooterComponent.defaultProps = {\r\n  hasExport: false,\r\n  isExporting: false,\r\n  isTableBodyLoading: true,\r\n};\r\nexport default TableFooterComponent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './table.module.css';\r\n// import TableBodyComponent from './table-body/TableBodyComponent';\r\nimport TableFooterComponent from './table-footer/TableFooterComponent';\r\n\r\nfunction TableComponent({\r\n  component,\r\n  paginationParameters,\r\n  hasExport,\r\n  onExport,\r\n  tableHeader,\r\n  stylesTable,\r\n  paginate,\r\n  isTableBodyLoading,\r\n}) {\r\n  return (\r\n    <div className={Styles.boxShadow}>\r\n      <table className={Styles.table}>\r\n        <thead>\r\n          {/* <TableHeaderComponent\r\n              tableHeaderColumns={tableHeaderColumns}\r\n              sortHeader={sortHeader}\r\n              filterModel={filterModel}\r\n              setFilterModel={setFilterModel}\r\n              sortColumn={sortColumn}\r\n              sortBy={sortBy}\r\n              filterList={filterList}\r\n              filterShow={filterShow}\r\n            /> */}\r\n          {tableHeader}\r\n        </thead>\r\n        <div\r\n          className={stylesTable !== null ? stylesTable : Styles.tableBodyDiv}\r\n        >\r\n          <tbody className={Styles.tableBody}>\r\n            {component}\r\n            {' '}\r\n            {/* <TableBodyComponent component={component} /> */}\r\n          </tbody>\r\n        </div>\r\n      </table>\r\n      <TableFooterComponent\r\n        paginationParameters={paginationParameters}\r\n        component={component}\r\n        hasExport={hasExport}\r\n        onExport={onExport}\r\n        paginate={paginate}\r\n        paginationData={paginationParameters}\r\n        isTableBodyLoading={isTableBodyLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nTableComponent.propTypes = {\r\n  component: PropTypes.func,\r\n  paginationParameters: PropTypes.shape.isRequired,\r\n  hasExport: PropTypes.bool,\r\n  onExport: PropTypes.func.isRequired,\r\n  tableHeader: PropTypes.func.isRequired,\r\n  stylesTable: PropTypes.shape,\r\n  paginate: PropTypes.func.isRequired,\r\n  isTableBodyLoading: PropTypes.bool,\r\n};\r\nTableComponent.defaultProps = {\r\n  component: null,\r\n  hasExport: false,\r\n  stylesTable: null,\r\n  isTableBodyLoading: true,\r\n};\r\nexport default TableComponent;\r\n"],"names":["TableFooterComponent","props","hasExport","paginationParameters","isExporting","onExport","isTableBodyLoading","paginate","paginationData","useState","showPageSizeOptions","setShowPageSizeOptions","pageSizeOptions","totalPages","Math","trunc","firstPages","initialButtons","middlePages","setMiddlePages","lastPages","pageSizeOptionsRef","useRef","paginateTo","currentPage","setCurrentPage","page","pageSize","handlePageSize","size","className","Styles","hidden","onClick","disabled","totalCount","type","ref","style","display","height","length","marginTop","map","value","onKeyDown","role","id","left","marginRight","marginLeft","src","chevLeftFirst","alt","chevLeft","button","slice","chevRight","chevRightLast","defaultProps","TableComponent","component","tableHeader","stylesTable"],"sourceRoot":""}
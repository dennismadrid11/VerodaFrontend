{"version":3,"file":"static/js/122.5f24be91.chunk.js","mappings":"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","sources":["assets/icons/Vector.svg","webpack://sky/./src/components/title-group/TitleGroup.module.css?357d","assets/icons/Pencil.svg","components/title-group/TitleGroupService.js","webpack://sky/./src/components/title-group/modals/title-group-form-modal/TitleGroupFormModal.module.css?93e1","components/title-group/modals/title-group-form-modal/TitleGroupModalFormComponent.jsx","webpack://sky/./src/components/title-group/modals/delete-title-group-modal/DeleteTitleGroupModal.module.css?0244","components/title-group/modals/delete-title-group-modal/DeleteTitleGroupModalComponent.jsx","webpack://sky/./src/components/title-group/title-table/Table.module.css?1324","webpack://sky/./src/components/title-group/title-table/table-header/TitleGroupTableHeader.module.css?d278","components/title-group/TitleGroupForms.js","webpack://sky/./src/components/title-group/title-table/table-header/filters/starts-with-filter/starts.with.filter.module.css?aad6","components/title-group/title-table/table-header/filters/starts-with-filter/starts.with.filter.component.jsx","components/title-group/title-table/table-header/TitleGroupTableHeaderComponent.jsx","components/title-group/title-table/TableData.jsx","components/title-group/title-table/TableComponent.jsx","webpack://sky/./src/components/title-group/selected-title-table/SelectedTitleTable.module.css?eb47","components/title-group/selected-title-table/SelectedTitleTableData.jsx","webpack://sky/./src/components/title-group/selected-title-table/table-header/SelectedTitleTableHeader.module.css?c9e6","components/title-group/selected-title-table/table-header/SelectedTitleTableHeaderComponent.jsx","components/title-group/selected-title-table/SelectedTitleTableComponent.jsx","components/title-group/TitleGroupComponent.jsx","webpack://sky/./src/shared/components/bootstrap-spinner/styles.module.css?480b","shared/components/bootstrap-spinner/BootstrapSpinner.jsx","webpack://sky/./src/shared/elements/input/styles.module.css?ed2d","shared/elements/input/input.component.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgVector(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 23,\n    height: 24,\n    viewBox: \"0 0 23 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.5 23.2347C5.28663 23.2347 0.25 18.198 0.25 11.9847C0.25 5.77129 5.28663 0.734665 11.5 0.734665C17.7134 0.734665 22.75 5.77129 22.75 11.9847C22.75 18.198 17.7134 23.2347 11.5 23.2347ZM11.5 20.9847C13.8869 20.9847 16.1761 20.0365 17.864 18.3486C19.5518 16.6608 20.5 14.3716 20.5 11.9847C20.5 9.59772 19.5518 7.30853 17.864 5.6207C16.1761 3.93288 13.8869 2.98466 11.5 2.98466C9.11305 2.98466 6.82387 3.93288 5.13604 5.6207C3.44821 7.30853 2.5 9.59772 2.5 11.9847C2.5 14.3716 3.44821 16.6608 5.13604 18.3486C6.82387 20.0365 9.11305 20.9847 11.5 20.9847V20.9847ZM11.5 10.3939L14.6815 7.21129L16.2734 8.80316L13.0907 11.9847L16.2734 15.1662L14.6815 16.758L11.5 13.5754L8.3185 16.758L6.72662 15.1662L9.90925 11.9847L6.72662 8.80316L8.3185 7.21129L11.5 10.3939Z\",\n    fill: \"#008662\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVector);\nexport default __webpack_public_path__ + \"static/media/Vector.3bad804acc57a5bd5969c1dffefce226.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"titleGroupSelect\":\"TitleGroup_titleGroupSelect__FGRWn\",\"actionButtons\":\"TitleGroup_actionButtons__vBySV\",\"disabledActionButton\":\"TitleGroup_disabledActionButton__6S9rH\",\"headerSearch\":\"TitleGroup_headerSearch__Z-PrE\",\"divButton\":\"TitleGroup_divButton__WmiUg\",\"addButton\":\"TitleGroup_addButton__3tfYN\",\"removeButton\":\"TitleGroup_removeButton__2zX94\",\"divNoAvailableChannelSelected\":\"TitleGroup_divNoAvailableChannelSelected__vTBZ2\",\"divNoAvailableChannelSelectedSmall\":\"TitleGroup_divNoAvailableChannelSelectedSmall__IIxym\",\"chevLastUp\":\"TitleGroup_chevLastUp__a7O4B\",\"chevUp\":\"TitleGroup_chevUp__ccSx6\",\"chevLastDown\":\"TitleGroup_chevLastDown__1ctng\",\"chevDown\":\"TitleGroup_chevDown__EIb2k\",\"divButtons\":\"TitleGroup_divButtons__s6d63\",\"searchWrapper\":\"TitleGroup_searchWrapper__aoU68\",\"search\":\"TitleGroup_search__xKKgh\",\"timesIcon\":\"TitleGroup_timesIcon__YxXND\",\"searchIcon\":\"TitleGroup_searchIcon__Wu6rj\",\"timesIconWrapper\":\"TitleGroup_timesIconWrapper__2tbY-\",\"searchIconWrapper\":\"TitleGroup_searchIconWrapper__mHIQl\",\"tableLabel\":\"TitleGroup_tableLabel__PPzoD\",\"buttons\":\"TitleGroup_buttons__MhzEw\",\"programDetailsWrapper\":\"TitleGroup_programDetailsWrapper__AO1gZ\",\"verbiage\":\"TitleGroup_verbiage__SERBY\",\"selectedTableWrapper\":\"TitleGroup_selectedTableWrapper__cvXZI\",\"removeAllButton\":\"TitleGroup_removeAllButton__REfSQ\",\"arrowIcon\":\"TitleGroup_arrowIcon__1S6B5\",\"programmeTitlesTableWrapper\":\"TitleGroup_programmeTitlesTableWrapper__r-l-U\",\"divider\":\"TitleGroup_divider__AAp7-\",\"addIcon\":\"TitleGroup_addIcon__SB4yK\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 21,\n    viewBox: \"0 0 20 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.0387 7.99326L12.5068 6.46142L2.41667 16.5516V18.0834H3.9485L14.0387 7.99326ZM15.5705 6.46142L17.1023 4.92959L15.5705 3.39776L14.0387 4.92959L15.5705 6.46142ZM4.8455 20.2501H0.25V15.6535L14.8046 1.09892C15.0077 0.89583 15.2832 0.781738 15.5705 0.781738C15.8578 0.781738 16.1333 0.89583 16.3364 1.09892L19.4012 4.16367C19.6043 4.36683 19.7184 4.64233 19.7184 4.92959C19.7184 5.21685 19.6043 5.49235 19.4012 5.69551L4.84658 20.2501H4.8455Z\",\n    fill: \"#008662\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/Pencil.2112dbd10376389ff2a3aa97dd0a6ede.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios';\r\n\r\nconst TitleGroupService = {\r\n  getTitleGroupLookup() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/getTitleGroupLookup`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getTitleGroup(titleGroupId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/getTitleGroup/${titleGroupId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  addTitleGroup(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/addTitleGroup`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  editTitleGroup(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/editTitleGroup`;\r\n    return axios.put(url, json);\r\n  },\r\n  deleteTitleGroup(titleGroupId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/deleteTitleGroup/${titleGroupId}`;\r\n    return axios.delete(url);\r\n  },\r\n\r\n  getTitles(parameters) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/getTitles${parameters}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getTitle(titleId) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/getTitle/${titleId}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  saveTitlesToGroup(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/saveTitlesToGroup`;\r\n    return axios.post(url, json);\r\n  },\r\n\r\n  getTitlesFromGroup(parameters) {\r\n    const titleIdsParameter = parameters.titleIds\r\n      ? `&titleIds=${parameters.titleIds\r\n          .map((value) => value.titleId)\r\n          .join(',')}`\r\n      : '';\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/getTitlesFromGroup?groupId=${parameters.groupId}${titleIdsParameter}`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  getTitleGroupSession() {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/getTitleGroupSession`;\r\n    return axios.get(url);\r\n  },\r\n\r\n  saveTitleGroupSession(json) {\r\n    const url = `${process.env.REACT_APP_HOST_URL}titleGroup/saveTitleGroupSession`;\r\n    return axios.post(url, json);\r\n  },\r\n};\r\n\r\nexport default TitleGroupService;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBody\":\"TitleGroupFormModal_modalBody__KVRmL\",\"title\":\"TitleGroupFormModal_title__NXoei\",\"titleGroupNameInput\":\"TitleGroupFormModal_titleGroupNameInput__uis8I\",\"actionButtons\":\"TitleGroupFormModal_actionButtons__uy1jz\"};","import React, {\r\n  useEffect,\r\n  useState,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Modal } from 'react-bootstrap';\r\nimport InputComponent from '../../../../shared/elements/input/input.component';\r\nimport styles from './TitleGroupFormModal.module.css';\r\nimport Button from '../../../../shared/components/button/Button';\r\n\r\nconst TitleGroupFormModalComponent = forwardRef(\r\n  (\r\n    {\r\n      show,\r\n      onHide,\r\n      isSaving,\r\n      onSave,\r\n      onUpdate,\r\n      formType,\r\n      predefinedName,\r\n      setSavedCreateTitleGroupNameText,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [titleGroupName, setTitleGroupName] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      clearTitleGroupName() {\r\n        setTitleGroupName('');\r\n      },\r\n      setErrorMessage(message) {\r\n        setErrorMessage(message);\r\n      },\r\n    }));\r\n\r\n    useEffect(() => {\r\n      if (formType === 'Edit') {\r\n        setTitleGroupName(predefinedName);\r\n      } else {\r\n        setTitleGroupName('');\r\n      }\r\n    }, [predefinedName, formType, show]);\r\n\r\n    const onChangeSetTitleGroupName = (e) => {\r\n      setTitleGroupName(e.target.value);\r\n      setErrorMessage('');\r\n      if (formType === 'Create') setSavedCreateTitleGroupNameText(e.target.value);\r\n    };\r\n\r\n    const onValidate = () => {\r\n      setErrorMessage(titleGroupName ? '' : 'Title group name is required');\r\n\r\n      if (titleGroupName) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const onSubmit = () => {\r\n      if (onValidate()) {\r\n        if (formType === 'Create') {\r\n          onSave({ titleGroupName });\r\n        } else {\r\n          onUpdate({ titleGroupName });\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onHide} centered>\r\n        <div className={styles.modalBody}>\r\n          <div>\r\n            {formType === 'Create' ? (\r\n              <div className={styles.title}>New Title Group</div>\r\n            ) : (\r\n              <div className={styles.title}>Edit Title Group</div>\r\n            )}\r\n          </div>\r\n\r\n          <div className={styles.titleGroupNameInput}>\r\n            <InputComponent\r\n              label=\"Title Group Name\"\r\n              placeHolder=\"Enter the title group name\"\r\n              errorMessage={errorMessage}\r\n              showErrorMessage={!!errorMessage}\r\n              value={titleGroupName}\r\n              maxLength=\"100\"\r\n              isRequired\r\n              onChange={onChangeSetTitleGroupName}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.actionButtons}>\r\n            <Button text=\"Cancel\" defaultBtn onClick={onHide} />\r\n            {formType === 'Create' ? (\r\n              <Button text=\"Save\" onClick={onSubmit} isLoading={isSaving} />\r\n            ) : (\r\n              <Button text=\"Update\" onClick={onSubmit} isLoading={isSaving} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  },\r\n);\r\nTitleGroupFormModalComponent.propTypes = {\r\n  show: PropTypes.bool,\r\n  onHide: PropTypes.func.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n  formType: PropTypes.string,\r\n  predefinedName: PropTypes.string,\r\n  setSavedCreateTitleGroupNameText: PropTypes.func.isRequired,\r\n};\r\nTitleGroupFormModalComponent.defaultProps = {\r\n  show: false,\r\n  formType: '',\r\n  predefinedName: '',\r\n};\r\nTitleGroupFormModalComponent.displayName = 'TitleGroupFormModalComponent';\r\nexport default TitleGroupFormModalComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBody\":\"DeleteTitleGroupModal_modalBody__8xa1W\",\"verbiage\":\"DeleteTitleGroupModal_verbiage__KcOzU\",\"actionButtons\":\"DeleteTitleGroupModal_actionButtons__eR6P5\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport styles from './DeleteTitleGroupModal.module.css';\r\nimport Button from '../../../../shared/components/button/Button';\r\n\r\nfunction DeleteTitleGroupModalComponent({ show, isSaving, onDelete, onHide }) {\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered>\r\n      <div className={styles.modalBody}>\r\n        <div className={styles.verbiage}>\r\n          <p>\r\n            You are permanently deleting this title group\r\n            {' '}\r\n            <br />\r\n            {' '}\r\n            <b>Are you sure you want to proceed?</b>\r\n          </p>\r\n        </div>\r\n\r\n        <div className={styles.actionButtons}>\r\n          <Button text=\"Cancel\" defaultBtn onClick={onHide} />\r\n          <Button text=\"Proceed\" onClick={onDelete} isLoading={isSaving} />\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nDeleteTitleGroupModalComponent.propTypes = {\r\n  show: PropTypes.bool,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n};\r\nDeleteTitleGroupModalComponent.defaultProps = {\r\n  show: false,\r\n};\r\nexport default DeleteTitleGroupModalComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBodyDiv\":\"Table_tableBodyDiv__DIOkT\",\"tableBodyDivSmall\":\"Table_tableBodyDivSmall__5LXH0\",\"isHighlighted\":\"Table_isHighlighted__MQa9z\"};","// extracted by mini-css-extract-plugin\nexport default {\"columns\":\"TitleGroupTableHeader_columns__9p6Zl\",\"filterIcons\":\"TitleGroupTableHeader_filterIcons__779gW\",\"clearFilterIcons\":\"TitleGroupTableHeader_clearFilterIcons__Qlkps\",\"dropdownFilter\":\"TitleGroupTableHeader_dropdownFilter__pVQTn\",\"dropdownDateCreated\":\"TitleGroupTableHeader_dropdownDateCreated__jdtqA\"};","class TitleGroupForms {\r\n  tableHeaders = ['Title Name', 'Genre', 'Duration', 'Grade', 'Year', 'Certificate', ''];\r\n\r\n  selectedTitleTableHeaders = ['Title Name'];\r\n}\r\n\r\nconst titleGroupForms = new TitleGroupForms();\r\nexport default titleGroupForms;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"startsWithButton\":\"starts_with_filter_startsWithButton__gwrdh\",\"startsWithInput\":\"starts_with_filter_startsWithInput__rAdYb\",\"clearFilterButton\":\"starts_with_filter_clearFilterButton__gzLlq\",\"filterButton\":\"starts_with_filter_filterButton__IFlaV\",\"options\":\"starts_with_filter_options__OuBB8\",\"optionItem\":\"starts_with_filter_optionItem__WMgaL\"};","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './starts.with.filter.module.css';\r\n\r\nconst { forwardRef, useImperativeHandle } = React;\r\nconst StartsWithFilterComponent = forwardRef((props, ref) => {\r\n  const options = [\r\n    {\r\n      optionId: 1,\r\n      optionText: 'Starts With',\r\n    },\r\n    {\r\n      optionId: 2,\r\n      optionText: 'Ends With',\r\n    },\r\n    {\r\n      optionId: 3,\r\n      optionText: 'Contains',\r\n    },\r\n    {\r\n      optionId: 4,\r\n      optionText: 'Equal',\r\n    },\r\n    {\r\n      optionId: 5,\r\n      optionText: 'Not Equal',\r\n    },\r\n  ];\r\n  const [selectedOption, setSelectedOption] = useState(options[0]);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [startsWithInput, setStartsWithInput] = useState('');\r\n  const [disableFilterButton, setDisableFilterButton] = useState(true);\r\n  const startsWithFilterRef = useRef();\r\n\r\n  const backdropClicked = (e) => {\r\n    if (!startsWithFilterRef.current.contains(e.target)) {\r\n      props.backdropClicked(props.component);\r\n      setShowOptions(false);\r\n    }\r\n  };\r\n\r\n  const toggleOptions = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  const selectOption = (option) => {\r\n    setSelectedOption(option);\r\n    setShowOptions(false);\r\n    if (startsWithInput !== '') {\r\n      setDisableFilterButton(false);\r\n    }\r\n  };\r\n\r\n  const bindInput = (e) => {\r\n    setDisableFilterButton(false);\r\n\r\n    setStartsWithInput(e.target.value);\r\n    if (selectedOption.optionId === options[0].optionId) {\r\n      selectOption(options[0]);\r\n    }\r\n  };\r\n\r\n  const changeToDefaultForm = () => {\r\n    setSelectedOption(options[0]);\r\n    setStartsWithInput('');\r\n    setDisableFilterButton(true);\r\n  };\r\n\r\n  const setTemporaryFilterModel = (action) => {\r\n    const model = JSON.parse(JSON.stringify(props.filterModel));\r\n    if (action === 'Filter') {\r\n      if (props.component === 'Title Name') {\r\n        model.titleFilter = selectedOption.optionId;\r\n        model.titleFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Genre') {\r\n        model.genreFilter = selectedOption.optionId;\r\n        model.genreFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Duration') {\r\n        model.durationFilter = selectedOption.optionId;\r\n        model.durationFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Grade') {\r\n        model.gradeFilter = selectedOption.optionId;\r\n        model.gradeFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Year') {\r\n        model.yearFilter = selectedOption.optionId;\r\n        model.yearFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Certificate') {\r\n        model.certificateFilter = selectedOption.optionId;\r\n        model.certificateFilterValue = startsWithInput;\r\n        model.useCache = true;\r\n      }\r\n    } else {\r\n      if (props.component === 'Title Name') {\r\n        model.titleFilter = undefined;\r\n        model.titleFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Genre') {\r\n        model.genreFilter = undefined;\r\n        model.genreFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Duration') {\r\n        model.durationFilter = undefined;\r\n        model.durationFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Grade') {\r\n        model.gradeFilter = undefined;\r\n        model.gradeFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Year') {\r\n        model.yearFilter = undefined;\r\n        model.yearFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n      if (props.component === 'Certificate') {\r\n        model.certificateFilter = undefined;\r\n        model.certificateFilterValue = undefined;\r\n        model.useCache = true;\r\n      }\r\n    }\r\n\r\n    return model;\r\n  };\r\n\r\n  const onClickedButtonFilter = () => {\r\n    props.onClickedButtonFilter(setTemporaryFilterModel('Filter'));\r\n    props.toggleDropdown(null);\r\n    setDisableFilterButton(true);\r\n  };\r\n\r\n  const onClickedButtonClearFilter = () => {\r\n    changeToDefaultForm();\r\n    props.onClickedButtonFilter(setTemporaryFilterModel('Clear'));\r\n    props.toggleDropdown(null);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    clearFilterModel() {\r\n      changeToDefaultForm();\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', backdropClicked);\r\n    return () => document.removeEventListener('mousedown', backdropClicked);\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-3\" ref={startsWithFilterRef}>\r\n      <div />\r\n      <div className=\"position-relative\">\r\n        <button\r\n          className={styles.startsWithButton}\r\n          onClick={toggleOptions}\r\n          type=\"button\"\r\n        >\r\n          {selectedOption.optionText}\r\n        </button>\r\n        <div\r\n          className={styles.options}\r\n          style={{\r\n            display: showOptions ? null : 'none',\r\n            marginBottom: `-${25 * options.length}px`,\r\n            height: '127px',\r\n          }}\r\n        >\r\n          {options.map((value) => (\r\n            <div\r\n              className={styles.optionItem}\r\n              key={value.id}\r\n              onClick={() => selectOption(value)}\r\n              onKeyDown={() => selectOption(value)}\r\n              role=\"presentation\"\r\n            >\r\n              <span>{value.optionText}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <input\r\n        className={styles.startsWithInput}\r\n        type=\"text\"\r\n        value={startsWithInput}\r\n        placeholder=\"Enter the value\"\r\n        onChange={bindInput}\r\n      />\r\n      <hr style={{ backgroundColor: '#6d6d73' }} />\r\n      <div className=\"d-flex\">\r\n        <p\r\n          className={styles.clearFilterButton}\r\n          onClick={onClickedButtonClearFilter}\r\n          onKeyDown={onClickedButtonClearFilter}\r\n          role=\"presentation\"\r\n        >\r\n          Clear\r\n        </p>\r\n        <button\r\n          className={styles.filterButton}\r\n          onClick={onClickedButtonFilter}\r\n          disabled={disableFilterButton}\r\n          type=\"button\"\r\n        >\r\n          Filter\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nStartsWithFilterComponent.propTypes = {\r\n  backdropClicked: PropTypes.func.isRequired,\r\n  component: PropTypes.string,\r\n  onClickedButtonFilter: PropTypes.func.isRequired,\r\n  toggleDropdown: PropTypes.func.isRequired,\r\n  filterModel: PropTypes.shape.isRequired,\r\n};\r\nStartsWithFilterComponent.defaultProps = {\r\n  component: '',\r\n};\r\nStartsWithFilterComponent.displayName = 'StartsWithFilterComponent';\r\nexport default StartsWithFilterComponent;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './TitleGroupTableHeader.module.css';\r\nimport filterIcon from '../../../../assets/icons/Filter.png';\r\nimport filteredIcon from '../../../../assets/icons/Filtered.png';\r\nimport arrowUpIcon from '../../../../assets/icons/Arrow-Up.png';\r\nimport clearFilterIcon from '../../../../assets/icons/Clear-Filter.svg';\r\n\r\nimport TitleGroupForms from '../../TitleGroupForms';\r\n\r\nimport StartsWithFilterComponent from './filters/starts-with-filter/starts.with.filter.component';\r\n\r\nfunction TitleGroupTableHeaderComponent(props) {\r\n  const {\r\n    filterModel,\r\n    onClickedButtonFilter,\r\n    sortBy,\r\n    handleSetSortBy,\r\n    onClickedButtonClearAllFilters,\r\n    onClickedButtonClearFilter,\r\n    titleSource,\r\n  } = props;\r\n  const { tableHeaders } = TitleGroupForms;\r\n  const [showTitleNameFilter, setShowTitleNameFilter] = useState(false);\r\n  const [showGenreFilter, setShowGenreFilter] = useState(false);\r\n  const [showDurationFilter, setShowDurationFilter] = useState(false);\r\n  const [showGradeFilter, setShowGradeFilter] = useState(false);\r\n  const [showYearFilter, setShowYearFilter] = useState(false);\r\n  const [showCertificateFilter, setShowCertificateFilter] = useState(false);\r\n\r\n  const [showClearFilterIcon, setShowClearAllFilterIcon] = useState(false);\r\n  const titleNameFilterRef = useRef();\r\n  const genreFilterRef = useRef();\r\n  const durationFilterRef = useRef();\r\n  const gradeFilterRef = useRef();\r\n  const yearFilterRef = useRef();\r\n  const certificateFilterRef = useRef();\r\n\r\n  const toggleDropdown = (header) => {\r\n    if (header === tableHeaders[0]) {\r\n      setShowTitleNameFilter(!showTitleNameFilter);\r\n    } else {\r\n      setShowTitleNameFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[1]) {\r\n      setShowGenreFilter(!showGenreFilter);\r\n    } else {\r\n      setShowGenreFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[2]) {\r\n      setShowDurationFilter(!showDurationFilter);\r\n    } else {\r\n      setShowDurationFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[3]) {\r\n      setShowGradeFilter(!showGradeFilter);\r\n    } else {\r\n      setShowGradeFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[4]) {\r\n      setShowYearFilter(!showYearFilter);\r\n    } else {\r\n      setShowYearFilter(false);\r\n    }\r\n\r\n    if (header === tableHeaders[5]) {\r\n      setShowCertificateFilter(!showCertificateFilter);\r\n    } else {\r\n      setShowCertificateFilter(false);\r\n    }\r\n  };\r\n\r\n  const backdropClicked = (header) => {\r\n    switch (header) {\r\n      case tableHeaders[0]:\r\n        setShowTitleNameFilter(false);\r\n        break;\r\n      case tableHeaders[1]:\r\n        setShowGenreFilter(false);\r\n        break;\r\n      case tableHeaders[2]:\r\n        setShowDurationFilter(false);\r\n        break;\r\n      case tableHeaders[3]:\r\n        setShowGradeFilter(false);\r\n        break;\r\n      case tableHeaders[4]:\r\n        setShowYearFilter(false);\r\n        break;\r\n      case tableHeaders[5]:\r\n        setShowCertificateFilter(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onClickedButtonFilterClick = (model) => {\r\n    onClickedButtonFilter(model);\r\n  };\r\n\r\n  const handleSort = (id) => {\r\n    const model = JSON.parse(JSON.stringify(filterModel));\r\n\r\n    model.titleGroupSort = id;\r\n    model.sortBy = sortBy[id].state ? 2 : 1;\r\n\r\n    onClickedButtonFilterClick(model);\r\n    handleSetSortBy(id);\r\n  };\r\n\r\n  const onClickedButtonClearAllFiltersTitle = () => {\r\n    titleNameFilterRef.current.clearFilterModel();\r\n    genreFilterRef.current.clearFilterModel();\r\n    durationFilterRef.current.clearFilterModel();\r\n    gradeFilterRef.current.clearFilterModel();\r\n    yearFilterRef.current.clearFilterModel();\r\n    certificateFilterRef.current.clearFilterModel();\r\n\r\n    onClickedButtonClearAllFilters();\r\n  };\r\n\r\n  const handleClearFilterIcon = () => {\r\n    setShowClearAllFilterIcon(\r\n      (\r\n        filterModel.titleFilter\r\n        || filterModel.titleFilterValue\r\n        || filterModel.genreFilter\r\n        || filterModel.genreFilterValue\r\n        || filterModel.gradeFilter\r\n        || filterModel.gradeFilterValue\r\n        || filterModel.certificateFilter\r\n        || filterModel.certificateFilterValue\r\n        || filterModel.yearFilter\r\n        || filterModel.yearFilterValue\r\n      ),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClearFilterIcon();\r\n    // eslint-disable-next-line\r\n  }, [filterModel]);\r\n\r\n  return (\r\n    <tr>\r\n      <td className={styles.columns}>\r\n        <span\r\n          onClick={() => handleSort(1)}\r\n          onKeyDown={() => handleSort(1)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[0]}\r\n        </span>\r\n        {' '}\r\n        <img\r\n          className={`${styles.filterIcons} mx-2`}\r\n          src={\r\n            filterModel.titleFilter && filterModel.titleFilterValue\r\n              ? filteredIcon\r\n              : filterIcon\r\n          }\r\n          alt=\"FilterIcon1\"\r\n          onClick={() => toggleDropdown(`${tableHeaders[0]}`)}\r\n          onKeyDown={() => toggleDropdown(`${tableHeaders[0]}`)}\r\n          role=\"presentation\"\r\n        />\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showTitleNameFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={titleNameFilterRef}\r\n            component={tableHeaders[0]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterClick}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[0]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon1\"\r\n          style={{\r\n            display:\r\n              filterModel.titleGroupSort === 1\r\n              || filterModel.titleGroupSort === undefined\r\n                ? null\r\n                : 'none',\r\n            transform: sortBy[1].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n      <td className={styles.columns} hidden={titleSource === 2}>\r\n        <span\r\n          onClick={() => handleSort(2)}\r\n          onKeyDown={() => handleSort(2)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[1]}\r\n        </span>\r\n        {' '}\r\n        <img\r\n          className={`${styles.filterIcons} mx-2`}\r\n          src={\r\n            filterModel.genreFilter && filterModel.genreFilterValue\r\n              ? filteredIcon\r\n              : filterIcon\r\n          }\r\n          alt=\"FilterIcon2\"\r\n          onClick={() => toggleDropdown(`${tableHeaders[1]}`)}\r\n          onKeyDown={() => toggleDropdown(`${tableHeaders[1]}`)}\r\n          role=\"presentation\"\r\n        />\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showGenreFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={genreFilterRef}\r\n            component={tableHeaders[1]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterClick}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[1]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon2\"\r\n          style={{\r\n            display: filterModel.titleGroupSort === 2 ? null : 'none',\r\n            transform: sortBy[2].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n      <td className={styles.columns}>\r\n        <span\r\n          onClick={() => handleSort(3)}\r\n          onKeyDown={() => handleSort(3)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[2]}\r\n        </span>\r\n        {' '}\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showDurationFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={durationFilterRef}\r\n            component={tableHeaders[2]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterClick}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[2]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon3\"\r\n          style={{\r\n            display: filterModel.titleGroupSort === 3 ? null : 'none',\r\n            transform: sortBy[3].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n      <td className={styles.columns} hidden={titleSource === 2}>\r\n        <span\r\n          onClick={() => handleSort(4)}\r\n          onKeyDown={() => handleSort(4)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[3]}\r\n        </span>\r\n        {' '}\r\n        <img\r\n          className={`${styles.filterIcons} mx-2`}\r\n          src={\r\n            filterModel.gradeFilter && filterModel.gradeFilterValue\r\n              ? filteredIcon\r\n              : filterIcon\r\n          }\r\n          alt=\"FilterIcon3\"\r\n          onClick={() => toggleDropdown(`${tableHeaders[3]}`)}\r\n          onKeyDown={() => toggleDropdown(`${tableHeaders[3]}`)}\r\n          role=\"presentation\"\r\n        />\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showGradeFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={gradeFilterRef}\r\n            component={tableHeaders[3]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterClick}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[3]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon4\"\r\n          style={{\r\n            display: filterModel.titleGroupSort === 4 ? null : 'none',\r\n            transform: sortBy[4].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n      <td className={styles.columns} hidden={titleSource === 2}>\r\n        <span\r\n          onClick={() => handleSort(5)}\r\n          onKeyDown={() => handleSort(5)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[5]}\r\n        </span>\r\n        {' '}\r\n        <img\r\n          className={`${styles.filterIcons} mx-2`}\r\n          src={\r\n            filterModel.certificateFilter && filterModel.certificateFilterValue\r\n              ? filteredIcon\r\n              : filterIcon\r\n          }\r\n          alt=\"FilterIcon6\"\r\n          onClick={() => toggleDropdown(`${tableHeaders[5]}`)}\r\n          onKeyDown={() => toggleDropdown(`${tableHeaders[5]}`)}\r\n          role=\"presentation\"\r\n        />\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showCertificateFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={certificateFilterRef}\r\n            component={tableHeaders[5]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterClick}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[5]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon4\"\r\n          style={{\r\n            display: filterModel.titleGroupSort === 5 ? null : 'none',\r\n            transform: sortBy[5].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n      </td>\r\n      <td className={styles.columns} hidden={titleSource === 2}>\r\n        <span\r\n          onClick={() => handleSort(6)}\r\n          onKeyDown={() => handleSort(6)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[4]}\r\n        </span>\r\n        {' '}\r\n        <img\r\n          className={`${styles.filterIcons} mx-1`}\r\n          src={\r\n            filterModel.yearFilter && filterModel.yearFilterValue\r\n              ? filteredIcon\r\n              : filterIcon\r\n          }\r\n          alt=\"FilterIcon5\"\r\n          onClick={() => toggleDropdown(`${tableHeaders[4]}`)}\r\n          onKeyDown={() => toggleDropdown(`${tableHeaders[4]}`)}\r\n          role=\"presentation\"\r\n          backdropClicked={backdropClicked}\r\n        />\r\n        <div\r\n          className={styles.dropdownFilter}\r\n          style={{ display: showYearFilter ? null : 'none' }}\r\n        >\r\n          <StartsWithFilterComponent\r\n            ref={yearFilterRef}\r\n            component={tableHeaders[4]}\r\n            filterModel={filterModel}\r\n            onClickedButtonFilter={onClickedButtonFilterClick}\r\n            onClickedButtonClearFilter={() => onClickedButtonClearFilter(`${tableHeaders[4]}`)}\r\n            toggleDropdown={toggleDropdown}\r\n            backdropClicked={backdropClicked}\r\n          />\r\n        </div>\r\n        <img\r\n          src={arrowUpIcon}\r\n          alt=\"ArrowUpIcon5\"\r\n          style={{\r\n            display: filterModel.titleGroupSort === 6 ? null : 'none',\r\n            transform: sortBy[6].state ? 'rotate(0deg)' : 'rotate(180deg)',\r\n          }}\r\n        />\r\n        <img\r\n          className={`${styles.clearFilterIcons}`}\r\n          style={{ display: showClearFilterIcon ? null : 'none' }}\r\n          src={clearFilterIcon}\r\n          alt=\"ClearFilterIcon\"\r\n          onClick={onClickedButtonClearAllFiltersTitle}\r\n          onKeyDown={onClickedButtonClearAllFiltersTitle}\r\n          role=\"presentation\"\r\n        />\r\n      </td>\r\n      <td\r\n        className={styles.columns}\r\n        style={{ width: titleSource === 2 ? '135px' : '30px' }}\r\n      >\r\n        {titleSource === 2 && 'Segments'}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nTitleGroupTableHeaderComponent.propTypes = {\r\n  filterModel: PropTypes.shape.isRequired,\r\n  onClickedButtonFilter: PropTypes.func.isRequired,\r\n  sortBy: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  handleSetSortBy: PropTypes.func.isRequired,\r\n  onClickedButtonClearAllFilters: PropTypes.func.isRequired,\r\n  onClickedButtonClearFilter: PropTypes.func.isRequired,\r\n  titleSource: PropTypes.number.isRequired,\r\n};\r\nexport default TitleGroupTableHeaderComponent;\r\n","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport eyeIcon from '../../../assets/icons/Prioritisation-eye.svg';\r\nimport eyeIconSelected from '../../../assets/icons/Prioritisation-selectedeye.svg';\r\nimport eyeOffIcon from '../../../assets/icons/Eye.png';\r\nimport styles from './Table.module.css';\r\nimport BootstrapSpinner from '../../../shared/components/bootstrap-spinner/BootstrapSpinner';\r\n\r\nconst TableData = forwardRef(\r\n  (\r\n    {\r\n      programs,\r\n      callbackSelectPrograms,\r\n      isLoading,\r\n      selectedPrograms,\r\n      tableMinimize,\r\n      viewedProgram,\r\n      onEyeSelect,\r\n      titleSource,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const eyeRef = useRef();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        setTimeout(() => {\r\n          eyeRef.current?.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n          });\r\n        }, 500);\r\n      },\r\n    }));\r\n    \r\n\r\n    const selectRow = (data) => {\r\n      let filteredArray = [];\r\n      if (selectedPrograms.includes(data.titleId)) {\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.titleId);\r\n        callbackSelectPrograms(filteredArray);\r\n      } else {\r\n        filteredArray = selectedPrograms;\r\n        filteredArray.push(data.titleId);\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.titleId);\r\n        filteredArray.push(data.titleId);\r\n        callbackSelectPrograms(filteredArray);\r\n      }\r\n    };\r\n\r\n    const viewRow = (data) => {\r\n      onEyeSelect(data.target.name);\r\n    };\r\n\r\n    const getEyeIcon = (data) => {\r\n      if (viewedProgram && parseInt(viewedProgram, 10) === data.titleId) return eyeOffIcon;\r\n      if (selectedPrograms.includes(data.titleId)) return eyeIconSelected;\r\n      return eyeIcon;\r\n    };\r\n\r\n    const filterBrightness = (data) => {\r\n      if (selectedPrograms.includes(data.titleId)) return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      if (\r\n        parseInt(viewedProgram, 10) === data.titleId\r\n        && selectedPrograms.includes(data.titleId)\r\n      ) return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      return 'brightness(0) saturate(100%) invert(23%) sepia(67%) saturate(6736%) hue-rotate(162deg) brightness(100%) contrast(101%)';\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {programs.length === 0 && (\r\n          <>\r\n            {isLoading && (\r\n              <div\r\n                className={`${\r\n                  !tableMinimize\r\n                    ? styles.tableBodyDiv\r\n                    : styles.tableBodyDivSmall\r\n                }`}\r\n                style={{ backgroundColor: 'transparent' }}\r\n              >\r\n                <BootstrapSpinner />\r\n              </div>\r\n            )}\r\n            {isLoading === false && (\r\n              <tr\r\n                className={`${\r\n                  !tableMinimize\r\n                    ? styles.tableBodyDiv\r\n                    : styles.tableBodyDivSmall\r\n                }`}\r\n              >\r\n                <td\r\n                  colSpan=\"7\"\r\n                  style={{\r\n                    fontSize: '24px',\r\n                    fontWeight: '300',\r\n                    color: '#008662',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n                >\r\n                  No Programme Titles Found\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </>\r\n        )}\r\n        {programs.length > 0 && (\r\n          <>\r\n            {' '}\r\n            {isLoading ? (\r\n              <div\r\n                className={`${\r\n                  !tableMinimize\r\n                    ? styles.tableBodyDiv\r\n                    : styles.tableBodyDivSmall\r\n                }`}\r\n                style={{ backgroundColor: 'transparent' }}\r\n              >\r\n                <BootstrapSpinner />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {programs.map((data) => (\r\n                  <tr\r\n                    key={data.id}\r\n                    className={`${\r\n                      selectedPrograms.includes(data.titleId)\r\n                        ? 'table-body-row-active'\r\n                        : 'table-body-row'\r\n                    } ${data.overrode && styles.isHighlighted}`}\r\n                  >\r\n                    <td\r\n                      className=\"table-body-column\"\r\n                      style={{ textIndent: '25px' }}\r\n                      onClick={() => selectRow(data)}\r\n                      onKeyDown={() => selectRow(data)}\r\n                      role=\"presentation\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      title={data.titleName}\r\n                    >\r\n                      {data.titleName}\r\n                    </td>\r\n                    <td\r\n                      className=\"table-body-column\"\r\n                      style={{ textIndent: '30px' }}\r\n                      onClick={() => selectRow(data)}\r\n                      onKeyDown={() => selectRow(data)}\r\n                      role=\"presentation\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      title={data.genre}\r\n                      hidden={titleSource === 2}\r\n                    >\r\n                      {data.genre}\r\n                    </td>\r\n                    <td\r\n                      className=\"table-body-column\"\r\n                      style={{\r\n                        textIndent: '23px',\r\n                      }}\r\n                      onClick={() => selectRow(data)}\r\n                      onKeyDown={() => selectRow(data)}\r\n                      role=\"presentation\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      title={data.duration}\r\n                    >\r\n                      {data.duration}\r\n                    </td>\r\n                    <td\r\n                      className=\"table-body-column\"\r\n                      onClick={() => selectRow(data)}\r\n                      onKeyDown={() => selectRow(data)}\r\n                      role=\"presentation\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      style={{ textIndent: '32px' }}\r\n                      title={data.grade}\r\n                      hidden={titleSource === 2}\r\n                    >\r\n                      {data.grade}\r\n                    </td>\r\n                    <td\r\n                      className=\"table-body-column\"\r\n                      onClick={() => selectRow(data)}\r\n                      onKeyDown={() => selectRow(data)}\r\n                      role=\"presentation\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      style={{ textIndent: '32px' }}\r\n                      title={data.certificate}\r\n                      hidden={titleSource === 2}\r\n                    >\r\n                      {data.certificate}\r\n                    </td>\r\n                    <td\r\n                      className=\"table-body-column\"\r\n                      style={{ textIndent: '35px' }}\r\n                      onClick={() => selectRow(data)}\r\n                      onKeyDown={() => selectRow(data)}\r\n                      role=\"presentation\"\r\n                      data-toggle=\"tooltip\"\r\n                      data-placement=\"top\"\r\n                      title={data.year}\r\n                      hidden={titleSource === 2}\r\n                    >\r\n                      {data.year}\r\n                    </td>\r\n                    <td\r\n                      className=\"table-body-column\"\r\n                      style={{\r\n                        width: titleSource !== 2 ? '25px' : '130px',\r\n                      }}\r\n                    >\r\n                      <img\r\n                        ref={\r\n                          viewedProgram\r\n                          && parseInt(viewedProgram, 10) === data.titleId\r\n                            ? eyeRef\r\n                            : null\r\n                        }\r\n                        name={data.titleId}\r\n                        style={{\r\n                          cursor: 'pointer',\r\n                          filter: filterBrightness(data),\r\n                          marginLeft: titleSource === 1 && '-20px',\r\n                        }}\r\n                        src={getEyeIcon(data)}\r\n                        alt=\"EyeIcon\"\r\n                        onClick={viewRow}\r\n                        onKeyDown={viewRow}\r\n                        role=\"presentation\"\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  },\r\n);\r\nTableData.propTypes = {\r\n  programs: PropTypes.arrayOf(PropTypes.shape),\r\n  callbackSelectPrograms: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool,\r\n  selectedPrograms: PropTypes.arrayOf(PropTypes.number),\r\n  tableMinimize: PropTypes.bool,\r\n  viewedProgram: PropTypes.number,\r\n  onEyeSelect: PropTypes.func.isRequired,\r\n  titleSource: PropTypes.number.isRequired,\r\n};\r\nTableData.defaultProps = {\r\n  programs: null,\r\n  isLoading: true,\r\n  selectedPrograms: null,\r\n  tableMinimize: false,\r\n  viewedProgram: null,\r\n};\r\nTableData.displayName = 'TableData';\r\nexport default TableData;\r\n","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Table.module.css';\r\n\r\nimport TitleGroupTableHeaderComponent from './table-header/TitleGroupTableHeaderComponent';\r\nimport TableData from './TableData';\r\nimport TableComponent from '../../_reusable/table/TableComponent';\r\n\r\nconst TitleTableComponent = forwardRef(\r\n  (\r\n    {\r\n      list,\r\n      filterModel,\r\n      sortBy,\r\n      selectedTitles,\r\n      paginationParameters,\r\n      isTableLoading,\r\n      tableMinimize,\r\n      onFilter,\r\n      onClearFilter,\r\n      onSort,\r\n      callbackSelectPrograms,\r\n      paginate,\r\n      onEyeSelect,\r\n      viewedProgram,\r\n      titleSource,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const dataComponentRef = useRef();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        dataComponentRef.current.scrollToProgram();\r\n      },\r\n    }));\r\n\r\n    return (\r\n      <TableComponent\r\n        component={(\r\n          <TableData\r\n            ref={dataComponentRef}\r\n            programs={list}\r\n            selectedPrograms={selectedTitles}\r\n            isLoading={isTableLoading}\r\n            callbackSelectPrograms={callbackSelectPrograms}\r\n            onEyeSelect={onEyeSelect}\r\n            viewedProgram={viewedProgram}\r\n            titleSource={titleSource}\r\n          />\r\n        )}\r\n        stylesTable={\r\n          !tableMinimize ? styles.tableBodyDiv : styles.tableBodyDivSmall\r\n        }\r\n        tableHeader={(\r\n          <TitleGroupTableHeaderComponent\r\n            filterModel={filterModel}\r\n            sortBy={sortBy}\r\n            onClickedButtonFilter={onFilter}\r\n            onClickedButtonClearAllFilters={onClearFilter}\r\n            handleSetSortBy={onSort}\r\n            titleSource={titleSource}\r\n          />\r\n        )}\r\n        paginate={paginate}\r\n        paginationParameters={paginationParameters}\r\n        isTableBodyLoading={isTableLoading}\r\n      />\r\n    );\r\n  },\r\n);\r\nTitleTableComponent.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.shape),\r\n  filterModel: PropTypes.shape.isRequired,\r\n  sortBy: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  selectedTitles: PropTypes.arrayOf(PropTypes.shape),\r\n  paginationParameters: PropTypes.shape.isRequired,\r\n  isTableLoading: PropTypes.bool,\r\n  tableMinimize: PropTypes.bool,\r\n  onFilter: PropTypes.func.isRequired,\r\n  onClearFilter: PropTypes.func.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  callbackSelectPrograms: PropTypes.func.isRequired,\r\n  paginate: PropTypes.func.isRequired,\r\n  onEyeSelect: PropTypes.func.isRequired,\r\n  viewedProgram: PropTypes.number,\r\n  titleSource: PropTypes.number.isRequired,\r\n};\r\nTitleTableComponent.defaultProps = {\r\n  list: null,\r\n  selectedTitles: null,\r\n  isTableLoading: true,\r\n  tableMinimize: true,\r\n  viewedProgram: null,\r\n};\r\nTitleTableComponent.displayName = 'TitleTableComponent';\r\nexport default TitleTableComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBodyDiv\":\"SelectedTitleTable_tableBodyDiv__tIDP+\",\"tableBodyDivSmall\":\"SelectedTitleTable_tableBodyDivSmall__r-O6v\",\"isHighlighted\":\"SelectedTitleTable_isHighlighted__7Do6L\"};","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport eyeIcon from '../../../assets/icons/Prioritisation-eye.svg';\r\nimport eyeIconSelected from '../../../assets/icons/Prioritisation-selectedeye.svg';\r\nimport eyeOffIcon from '../../../assets/icons/Eye.png';\r\nimport Styles from './SelectedTitleTable.module.css';\r\nimport BootstrapSpinner from '../../../shared/components/bootstrap-spinner/BootstrapSpinner';\r\n\r\nconst SelectedTableData = forwardRef(\r\n  (\r\n    {\r\n      programs,\r\n      callbackSelectPrograms,\r\n      selectedPrograms,\r\n      isLoading,\r\n      tableMinimize,\r\n      viewedProgram,\r\n      onEyeSelect,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const eyeRef = useRef();\r\n    const selectedRowRef = useRef();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        setTimeout(() => {\r\n          eyeRef.current?.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n          });\r\n        }, 500);\r\n      },\r\n      scrollToSelectedRowPerDrag() {\r\n        if (selectedRowRef.current !== null) {\r\n          selectedRowRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n          });\r\n        }\r\n      },\r\n    }));\r\n\r\n    const selectRow = (data) => {\r\n      let filteredArray = [];\r\n      if (selectedPrograms.includes(data.titleId)) {\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.titleId);\r\n        callbackSelectPrograms(filteredArray);\r\n      } else {\r\n        filteredArray = selectedPrograms;\r\n        filteredArray.push(data.titleId);\r\n        filteredArray = selectedPrograms.filter((e) => e !== data.titleId);\r\n        filteredArray.push(data.titleId);\r\n        callbackSelectPrograms(filteredArray);\r\n      }\r\n    };\r\n\r\n    const viewRow = (data) => {\r\n      onEyeSelect(data.target.name);\r\n    };\r\n\r\n    const getEyeIcon = (data) => {\r\n      if (parseInt(viewedProgram, 10) === data.titleId) return eyeOffIcon;\r\n      if (selectedPrograms.includes(data.titleId)) return eyeIconSelected;\r\n      return eyeIcon;\r\n    };\r\n    const getFilterBrightness = (data) => {\r\n      if (selectedPrograms.includes(data.titleId)) return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      if (\r\n        parseInt(viewedProgram, 10) === data.titleId\r\n        && selectedPrograms.includes(data.titleId)\r\n      ) return 'brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(0%) hue-rotate(264deg) brightness(105%) contrast(104%)';\r\n      return 'brightness(0) saturate(100%) invert(23%) sepia(67%) saturate(6736%) hue-rotate(162deg) brightness(100%) contrast(101%)';\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {isLoading && (\r\n          <div\r\n            className={`${\r\n              !tableMinimize ? Styles.tableBodyDiv : Styles.tableBodyDivSmall\r\n            }`}\r\n            style={{ backgroundColor: 'transparent' }}\r\n          >\r\n            <BootstrapSpinner />\r\n          </div>\r\n        )}\r\n        {programs.length === 0 && !isLoading && (\r\n          <tr\r\n            className={`${\r\n              !tableMinimize\r\n                ? Styles.prioritizeTableBodyDiv\r\n                : Styles.prioritizeTableBodyDivSmall\r\n            }`}\r\n          >\r\n            <td\r\n              colSpan=\"7\"\r\n              style={{\r\n                fontSize: '40px',\r\n                color: '#13ad83',\r\n                textAlign: 'center',\r\n                backgroundColor: 'transparent',\r\n              }}\r\n            >\r\n              Please select and add programme titles to group\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {programs.length > 0 && !isLoading && (\r\n          <>\r\n            {programs.map((data) => (\r\n              <tr\r\n                ref={\r\n                  selectedPrograms.length === 1\r\n                  && selectedPrograms[0] === data.titleId\r\n                    ? selectedRowRef\r\n                    : null\r\n                }\r\n                key={data.id}\r\n                className={`${\r\n                  selectedPrograms.includes(data.titleId)\r\n                    ? 'table-body-row-active'\r\n                    : 'table-body-row'\r\n                } ${data.overrode && Styles.isHighlighted}`}\r\n              >\r\n                <td\r\n                  className=\"table-body-column\"\r\n                  onClick={() => selectRow(data)}\r\n                  onKeyDown={() => selectRow(data)}\r\n                  role=\"presentation\"\r\n                  style={{ textIndent: '25px' }}\r\n                  title={data.titleName}\r\n                >\r\n                  {data.titleName}\r\n                </td>\r\n                <td className=\"table-body-column\" style={{ width: '30px' }}>\r\n                  <img\r\n                    ref={\r\n                      parseInt(viewedProgram, 10) === data.titleId\r\n                        ? eyeRef\r\n                        : null\r\n                    }\r\n                    name={data.titleId}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      marginLeft: '-20px',\r\n                      filter: getFilterBrightness(data),\r\n                    }}\r\n                    src={getEyeIcon(data)}\r\n                    alt=\"EyeIcon\"\r\n                    onClick={viewRow}\r\n                    onKeyDown={viewRow}\r\n                    role=\"presentation\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  },\r\n);\r\nSelectedTableData.propTypes = {\r\n  programs: PropTypes.arrayOf(PropTypes.shape),\r\n  callbackSelectPrograms: PropTypes.func.isRequired,\r\n  selectedPrograms: PropTypes.arrayOf(PropTypes.number),\r\n  tableMinimize: PropTypes.bool,\r\n  viewedProgram: PropTypes.number,\r\n  onEyeSelect: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool,\r\n};\r\nSelectedTableData.defaultProps = {\r\n  programs: null,\r\n  selectedPrograms: null,\r\n  tableMinimize: false,\r\n  viewedProgram: null,\r\n  isLoading: true,\r\n};\r\nSelectedTableData.displayName = 'SelectedTableData';\r\nexport default SelectedTableData;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"columns\":\"SelectedTitleTableHeader_columns__NxYQj\",\"filterIcons\":\"SelectedTitleTableHeader_filterIcons__i4EHZ\",\"clearFilterIcons\":\"SelectedTitleTableHeader_clearFilterIcons__ueRgf\",\"dropdownFilter\":\"SelectedTitleTableHeader_dropdownFilter__76kdq\",\"dropdownDateCreated\":\"SelectedTitleTableHeader_dropdownDateCreated__L1IlF\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './SelectedTitleTableHeader.module.css';\r\nimport TitleGroupForms from '../../TitleGroupForms';\r\n\r\nfunction SelectedTitleTableHeaderComponent(props) {\r\n  const {\r\n    filterModel, sortBy, onClickedButtonFilter, handleSetSortBy,\r\n  } = props;\r\n  const tableHeaders = TitleGroupForms.selectedTitleTableHeaders;\r\n\r\n  const handleSort = (id) => {\r\n    const model = JSON.parse(JSON.stringify(filterModel));\r\n\r\n    model.userSort = id;\r\n    model.sortBy = sortBy[id].state ? 2 : 1;\r\n\r\n    onClickedButtonFilter(model);\r\n    handleSetSortBy(id);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className={styles.columns}>\r\n        <span\r\n          onClick={() => handleSort(1)}\r\n          onKeyDown={() => handleSort(1)}\r\n          role=\"presentation\"\r\n        >\r\n          {tableHeaders[0]}\r\n        </span>\r\n        {' '}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nSelectedTitleTableHeaderComponent.propTypes = {\r\n  filterModel: PropTypes.shape.isRequired,\r\n  sortBy: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  onClickedButtonFilter: PropTypes.func.isRequired,\r\n  handleSetSortBy: PropTypes.func.isRequired,\r\n};\r\nexport default SelectedTitleTableHeaderComponent;\r\n","import React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useState,\r\n  useRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './SelectedTitleTable.module.css';\r\n\r\nimport TableComponent from '../../_reusable/table/TableComponent';\r\nimport SelectedTableData from './SelectedTitleTableData';\r\nimport SelectedTitleTableHeaderComponent from './table-header/SelectedTitleTableHeaderComponent';\r\n\r\nconst SelectedTitleTable = forwardRef(\r\n  (\r\n    {\r\n      selectedTitles,\r\n      list,\r\n      paginationParameters,\r\n      filterModel,\r\n      isTableLoading,\r\n      tableMinimize,\r\n      handleSortSelectedTitles,\r\n      paginate,\r\n      callbackSelectPrograms,\r\n      onEyeSelect,\r\n      viewedProgram,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const dataComponentRef = useRef();\r\n    const [sortBy, setSortBy] = useState([\r\n      {},\r\n      {\r\n        state: false,\r\n      },\r\n      {\r\n        state: false,\r\n      },\r\n    ]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      scrollToProgram() {\r\n        dataComponentRef.current.scrollToProgram();\r\n      },\r\n      scrollToSelectedRowPerDrag() {\r\n        dataComponentRef.current.scrollToSelectedRowPerDrag();\r\n      },\r\n    }));\r\n\r\n    const handleSetSortBy = (id) => {\r\n      const newArr = sortBy;\r\n\r\n      if (newArr[id].state === true) {\r\n        newArr[id].state = false;\r\n      } else {\r\n        newArr[id].state = true;\r\n      }\r\n\r\n      setSortBy(newArr);\r\n    };\r\n\r\n    const onClickedButtonFilter = (model) => {\r\n      handleSortSelectedTitles(model);\r\n    };\r\n\r\n    return (\r\n      <TableComponent\r\n        component={(\r\n          <SelectedTableData\r\n            ref={dataComponentRef}\r\n            programs={list}\r\n            selectedPrograms={selectedTitles}\r\n            isLoading={isTableLoading}\r\n            callbackSelectPrograms={callbackSelectPrograms}\r\n            onEyeSelect={onEyeSelect}\r\n            viewedProgram={viewedProgram}\r\n          />\r\n        )}\r\n        stylesTable={\r\n          !tableMinimize ? styles.tableBodyDiv : styles.tableBodyDivSmall\r\n        }\r\n        tableHeader={(\r\n          <SelectedTitleTableHeaderComponent\r\n            filterModel={filterModel}\r\n            sortBy={sortBy}\r\n            handleSetSortBy={handleSetSortBy}\r\n            onClickedButtonFilter={onClickedButtonFilter}\r\n          />\r\n        )}\r\n        paginationParameters={paginationParameters}\r\n        paginate={paginate}\r\n        isTableBodyLoading={isTableLoading}\r\n      />\r\n    );\r\n  },\r\n);\r\nSelectedTitleTable.propTypes = {\r\n  selectedTitles: PropTypes.arrayOf(PropTypes.shape),\r\n  list: PropTypes.arrayOf(PropTypes.shape),\r\n  paginationParameters: PropTypes.shape,\r\n  filterModel: PropTypes.shape,\r\n  isTableLoading: PropTypes.bool,\r\n  tableMinimize: PropTypes.bool,\r\n  handleSortSelectedTitles: PropTypes.func.isRequired,\r\n  paginate: PropTypes.func.isRequired,\r\n  callbackSelectPrograms: PropTypes.func.isRequired,\r\n  onEyeSelect: PropTypes.func.isRequired,\r\n  viewedProgram: PropTypes.number,\r\n};\r\nSelectedTitleTable.defaultProps = {\r\n  selectedTitles: null,\r\n  list: null,\r\n  paginationParameters: null,\r\n  filterModel: null,\r\n  isTableLoading: true,\r\n  tableMinimize: false,\r\n  viewedProgram: null,\r\n};\r\nSelectedTitleTable.displayName = 'SelectedTitleTable';\r\nexport default SelectedTitleTable;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport styles from './TitleGroup.module.css';\r\nimport AddButton from '../../assets/icons/Vector.svg';\r\n\r\nimport pencilIcon from '../../assets/icons/Pencil.svg';\r\nimport trashCanIcon from '../../assets/icons/Trash-Can-sm.svg';\r\nimport { arrowLeftIcon, arrowRightIcon } from '../../assets/index';\r\nimport SelectComponent from '../../shared/elements/select/select.component';\r\nimport BannerComponent from '../_reusable/banner/BannerComponent';\r\nimport TitleGroupService from './TitleGroupService';\r\nimport TitleGroupFormModalComponent from './modals/title-group-form-modal/TitleGroupModalFormComponent';\r\nimport DeleteTitleGroupModalComponent from './modals/delete-title-group-modal/DeleteTitleGroupModalComponent';\r\nimport TableComponent from './title-table/TableComponent';\r\nimport SelectedTitleTable from './selected-title-table/SelectedTitleTableComponent';\r\nimport { useCallbackPrompt } from '../_reusable/blocker/UsePromptComponent.ts';\r\nimport {\r\n  success,\r\n  danger,\r\n} from '../../shared/elements/notification/NotifyComponent';\r\nimport AuthService from '../../core/auth.service';\r\nimport ProfileService from '../../shared/profile/profile.service';\r\nimport Button from '../../shared/components/button/Button';\r\nimport ProgramDetailsComponent from '../prioritisation/prioritisation-program-details/PrioritisationProgramDetailComponent';\r\nimport ImportProgramDetailsComponent from '../prioritisation/import-program-details/ImportProgramDetailsComponent';\r\nimport ConfirmLeavePageModalComponent from './modals/confirm-leave-page-modal/ConfirmLeavePageModalComponent';\r\n\r\nfunction TitleGroupComponent() {\r\n  const titleGroupFormRef = useRef();\r\n  const selectedTitleTableRef = useRef();\r\n  const tableRef = useRef();\r\n  const [saveButtonIsDisabled, setSaveButtonIsDisabled] = useState(true);\r\n  const [hasNoSession, setHasNoSession] = useState(false);\r\n  const [renderTimes, setRenderTimes] = useState(0);\r\n  const [titles, setTitles] = useState([]);\r\n  const [titleGroupLookup, setTitleGroupLookup] = useState([]);\r\n  const [isSavingTitlesToGroup, setIsSavingTitlesToGroup] = useState(false);\r\n  const [\r\n    savedCreateTitleGroupNameText,\r\n    setSavedCreateTitleGroupNameText,\r\n  ] = useState('');\r\n  const [selectedTitleGroupText, setSelectedTitleGroupText] = useState(\r\n    'No available title group'\r\n  );\r\n  const [selectedTitleGroupId, setSelectedTitleGroupId] = useState();\r\n  const [showTitleGroupFormModal, setShowTitleGroupFormModal] = useState('');\r\n  const [\r\n    showDeleteTitleGroupFormModal,\r\n    setShowDeleteTitleGroupFormModal,\r\n  ] = useState(false);\r\n  const [formType, setFormType] = useState('');\r\n  const [filterModel, setFilterModel] = useState({\r\n    page: 1,\r\n    size: 50,\r\n    titleSort: 1,\r\n    sortBy: 1,\r\n  });\r\n  const [sortBy, setSortBy] = useState([\r\n    {},\r\n    { state: true },\r\n    { state: false },\r\n    { state: false },\r\n    { state: false },\r\n    { state: false },\r\n    { state: false },\r\n  ]);\r\n  const [selectedTitles, setSelectedTitles] = useState([]);\r\n  const [titlesPaginationParameters, setTitlesPaginationParameters] = useState(\r\n    {}\r\n  );\r\n  const [isTableLoading, setIsTableLoading] = useState(true);\r\n  const [tableMinimize, setTableMinimize] = useState(false);\r\n  const [addedPrograms, setAddedPrograms] = useState([]);\r\n  const [removedPrograms, setRemovedPrograms] = useState([]);\r\n  const [\r\n    isLoadingSelectedTitlesTable,\r\n    setIsLoadingSelectedTitlesTable,\r\n  ] = useState(false);\r\n  const [hasSelectedPrograms, setHasSelectedPrograms] = useState(false);\r\n  const [hasSelectedTitlesFromGroup, setHasSelectedTitlesFromGroup] = useState(\r\n    false\r\n  );\r\n  const [allTitlesFromGroup, setAllTitlesFromGroup] = useState([]);\r\n  const [titlesFromGroup, setTitlesFromGroup] = useState([]);\r\n  const [titlesFromGroupParameters, setTitlesFromGroupParameters] = useState({\r\n    page: 1,\r\n    size: 50,\r\n  });\r\n  const [\r\n    titlesFromGroupPaginationParameters,\r\n    setTitlesFromGroupPaginationParameters,\r\n  ] = useState({});\r\n  const [selectedTitlesFromGroup, setSelectedTitlesFromGroup] = useState([]);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [showPrompt, confirmNavigation, hidePrompt] = useCallbackPrompt(\r\n    isDirty\r\n  );\r\n  const [showConfirmLeaveModal, setShowConfirmLeaveModal] = useState(false);\r\n  const [nextFilter, setNextFilter] = useState({});\r\n  const [selectedTitle, setSelectedTitle] = useState();\r\n  const [selectedTitleFromGroup, setSelectedTitleFromGroup] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [titleSource, setTitleSource] = useState(1);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const handleGetUser = () => {\r\n    const { userId } = AuthService.getUserIdentity();\r\n\r\n    ProfileService.getUser(userId).then((response) => {\r\n      setTitleSource(response.data.organisationTitleSource);\r\n    });\r\n  };\r\n\r\n  const handleGetTitleById = () => {\r\n    TitleGroupService.getTitle(selectedTitle).then((response) => {\r\n      setTitle(response.data);\r\n      setTableMinimize(true);\r\n      tableRef.current.scrollToProgram();\r\n    });\r\n  };\r\n\r\n  const handleGetTitleByIdFromGroup = () => {\r\n    TitleGroupService.getTitle(selectedTitleFromGroup).then((response) => {\r\n      setTitle(response.data);\r\n      setTableMinimize(true);\r\n      selectedTitleTableRef.current.scrollToProgram();\r\n    });\r\n  };\r\n\r\n  const onClickSelectTitle = (titleId) => {\r\n    setSelectedTitleFromGroup();\r\n    if (titleId === selectedTitle) {\r\n      setSelectedTitle();\r\n      setTableMinimize(false);\r\n    } else {\r\n      setSelectedTitle(titleId);\r\n    }\r\n  };\r\n\r\n  const onClickSelectTitleFromGroup = (titleId) => {\r\n    setSelectedTitle();\r\n    if (titleId === selectedTitleFromGroup) {\r\n      setSelectedTitleFromGroup();\r\n      setTableMinimize(false);\r\n    } else {\r\n      setSelectedTitleFromGroup(titleId);\r\n    }\r\n  };\r\n\r\n  const constructQueryString = (parameters) => {\r\n    const paginationParameters = `?page=${parameters.page}&size=${parameters.size}`;\r\n    const titleIdsParameter = parameters.titleIds\r\n      ? `&titleIds=${parameters.titleIds\r\n          .map((value) => value.titleId)\r\n          .join(',')}`\r\n      : '';\r\n    const groupIdParameter = parameters.groupId\r\n      ? `&groupId=${parameters.groupId}`\r\n      : '';\r\n    const titleNameParameters =\r\n      parameters.titleFilter && parameters.titleFilterValue\r\n        ? `&titleNameFilter=${parameters.titleFilter}&titleNameFilterValue=${parameters.titleFilterValue}`\r\n        : '';\r\n    const gradeParameters =\r\n      parameters.gradeFilter && parameters.gradeFilterValue\r\n        ? `&gradeFilter=${parameters.gradeFilter}&gradeFilterValue=${parameters.gradeFilterValue}`\r\n        : '';\r\n    const genreParameters =\r\n      parameters.genreFilter && parameters.genreFilterValue\r\n        ? `&genreFilter=${parameters.genreFilter}&genreFilterValue=${parameters.genreFilterValue}`\r\n        : '';\r\n    const durationParameters =\r\n      parameters.durationFilter && parameters.durationFilterValue\r\n        ? `&durationFilter=${parameters.durationFilter}&durationFilterValue=${parameters.durationFilterValue}`\r\n        : '';\r\n    const yearParameters =\r\n      parameters.yearFilter && parameters.yearFilterValue\r\n        ? `&yearFilter=${parameters.yearFilter}&yearFilterValue=${parameters.yearFilterValue}`\r\n        : '';\r\n    const certificateParameters =\r\n      parameters.certificatreFilter && parameters.certificatreFilterValue\r\n        ? `&certificatreFilter=${parameters.certificatreFilter}\r\n        &certificatreFilterValue=${parameters.certificatreFilterValue}`\r\n        : '';\r\n    const sortParameters =\r\n      parameters.titleGroupSort && parameters.sortBy\r\n        ? `&titleSort=${parameters.titleGroupSort}&sortBy=${parameters.sortBy}`\r\n        : `&titleSort=${1}&sortBy=${1}`;\r\n    const certificate =\r\n      filterModel.certificateFilter && filterModel.certificateFilterValue\r\n        ? `&certificateFilter=${filterModel.certificateFilter}&certificateFilterValue=${filterModel.certificateFilterValue}`\r\n        : '';\r\n\r\n    let queryString =\r\n      paginationParameters +\r\n      titleIdsParameter +\r\n      groupIdParameter +\r\n      titleNameParameters +\r\n      gradeParameters +\r\n      genreParameters +\r\n      durationParameters +\r\n      yearParameters +\r\n      certificateParameters +\r\n      sortParameters +\r\n      certificate;\r\n\r\n    if (queryString.includes('+')) {\r\n      queryString = queryString.replace('+', '%2B');\r\n    }\r\n\r\n    return queryString;\r\n  };\r\n\r\n  const constructTitles = (data) => {\r\n    const mappedData = data.map((item) => ({\r\n      ...item,\r\n      id: item.id,\r\n      title: item.title,\r\n      genre: item.overrodeValues.genre || item.genre,\r\n      duration: item.overrodeValues.duration || item.duration,\r\n      grade: item.overrodeValues.grade || item.grade,\r\n      certificate: item.overrodeValues.certificate || item.certificate,\r\n      year: item.overrodeValues.year || item.year,\r\n    }));\r\n\r\n    return mappedData;\r\n  };\r\n\r\n  const handleGetTitles = (parameters) => {\r\n    setIsTableLoading(true);\r\n\r\n    TitleGroupService.getTitles(constructQueryString(parameters))\r\n      .then((response) => {\r\n        const constructedTitles = constructTitles(response.data.data);\r\n        setTitles(constructedTitles);\r\n\r\n        setTitlesPaginationParameters({\r\n          totalCount: response.data.totalData,\r\n          pageSize: response.data.size,\r\n          currentPage: response.data.page,\r\n          totalPages: response.data.totalPages,\r\n        });\r\n        setRenderTimes(renderTimes + 1);\r\n      })\r\n      .finally(() => setIsTableLoading(false));\r\n  };\r\n\r\n  const handleOnPaginate = (page, size) => {\r\n    setSelectedTitles([]);\r\n    setHasSelectedPrograms(false);\r\n    setFilterModel({\r\n      ...filterModel,\r\n      page,\r\n      size,\r\n    });\r\n  };\r\n\r\n  const getTitlesFromGroup = (items, shouldGoToPageOne) => {\r\n    setIsLoadingSelectedTitlesTable(true);\r\n\r\n    const pageNumber =\r\n      shouldGoToPageOne ||\r\n      (items.length > 0 && titlesFromGroupParameters.page === 0)\r\n        ? 1\r\n        : titlesFromGroupParameters.page;\r\n    const { size } = titlesFromGroupParameters;\r\n    const toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * size;\r\n    const selectedItems = items.slice(toSkip, toSkip + size);\r\n    setTitlesFromGroup(selectedItems);\r\n    setTitlesFromGroupParameters({\r\n      page: shouldGoToPageOne ? 1 : pageNumber,\r\n      size,\r\n    });\r\n\r\n    setTitlesFromGroupPaginationParameters({\r\n      totalCount: items.length,\r\n      pageSize: size,\r\n      currentPage: shouldGoToPageOne ? 1 : pageNumber,\r\n      totalPages: Math.ceil(items.length / size),\r\n    });\r\n\r\n    setIsLoadingSelectedTitlesTable(false);\r\n  };\r\n\r\n  const handleGetTitlesFromGroup = (parameters) => {\r\n    TitleGroupService.getTitlesFromGroup(parameters).then((response) => {\r\n      setAllTitlesFromGroup(response.data);\r\n      getTitlesFromGroup(response.data, true);\r\n      setFilterModel({\r\n        ...filterModel,\r\n        titleIds: response.data,\r\n        page: 1,\r\n        groupId: parameters.groupId,\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleGetTitleGroupLookup = (shouldSelectFirstItem, fromAddForm) => {\r\n    TitleGroupService.getTitleGroupLookup().then((response) => {\r\n      setTitleGroupLookup(response.data);\r\n\r\n      if (response.data.length > 0) {\r\n        if ((shouldSelectFirstItem || hasNoSession) && !fromAddForm) {\r\n          setSelectedTitleGroupText(response.data[0].name);\r\n          setSelectedTitleGroupId(response.data[0].id);\r\n        }\r\n\r\n        if (formType === 'Create') {\r\n          const titleGroup = response.data.find(\r\n            (o) => o.name === savedCreateTitleGroupNameText\r\n          );\r\n\r\n          if(titleGroup){\r\n            setSelectedTitleGroupId(titleGroup.id);\r\n          }\r\n        }\r\n      } else {\r\n        setSelectedTitleGroupText('No available title group');\r\n        setSelectedTitleGroupId();\r\n      }\r\n\r\n      setRenderTimes(renderTimes + 1);\r\n    });\r\n  };\r\n\r\n  const handleSaveTitleGroup = (data) => {\r\n    setIsSaving(true);\r\n    TitleGroupService.addTitleGroup(data)\r\n      .then(() => {\r\n        setSelectedTitleGroupText(data.titleGroupName);\r\n        setShowTitleGroupFormModal(false);\r\n        if (titleGroupFormRef.current)\r\n          titleGroupFormRef.current.clearTitleGroupName();\r\n        handleGetTitleGroupLookup(false, true);\r\n      }).catch((error) => {\r\n        if (titleGroupFormRef.current) {\r\n          titleGroupFormRef.current.setErrorMessage(\r\n            error.response.data.message\r\n          );\r\n        }\r\n      }).finally(() => setIsSaving(false));\r\n  };\r\n\r\n  const handleUpdateTitleGroup = (data) => {\r\n    const parameters = {\r\n      id: selectedTitleGroupId,\r\n      name: data.titleGroupName,\r\n    };\r\n\r\n    setIsSaving(true);\r\n    TitleGroupService.editTitleGroup(parameters)\r\n      .then(() => {\r\n        setSelectedTitleGroupText(data.titleGroupName);\r\n        setShowTitleGroupFormModal(false);\r\n        handleGetTitleGroupLookup();\r\n      }).catch((error) => {\r\n        titleGroupFormRef.current.setErrorMessage(error.response.data.message);\r\n      }).finally(() => setIsSaving(false));\r\n  };\r\n\r\n  const handleDeleteTitleGroup = () => {\r\n    setIsSaving(true);\r\n    TitleGroupService.deleteTitleGroup(selectedTitleGroupId).then(() => {\r\n      setShowDeleteTitleGroupFormModal(false);\r\n      handleGetTitleGroupLookup(true);\r\n      setIsDirty(false);\r\n    }).finally(() => setIsSaving(false));\r\n  };\r\n\r\n  const onSelectSetSelectedTitleGroupText = (data) => {\r\n    setRenderTimes(1);\r\n    if (isDirty) {\r\n      setNextFilter({ action: 'Select title group', data });\r\n      setShowConfirmLeaveModal(true);\r\n    } else {\r\n      setSelectedTitleGroupText(data.name);\r\n      setSelectedTitleGroupId(data.id);\r\n      setHasSelectedTitlesFromGroup(false);\r\n      setSelectedTitlesFromGroup([]);\r\n      setHasSelectedPrograms(false);\r\n      setSelectedTitles([]);\r\n      setSaveButtonIsDisabled(true);\r\n    }\r\n  };\r\n\r\n  const onClickShowTitleGroupFormModal = (form, shouldProceed) => {\r\n    setFormType(form);\r\n\r\n    if (isDirty && !shouldProceed) {\r\n      setNextFilter({ action: 'Open group form modal', data: form });\r\n      setShowConfirmLeaveModal(true);\r\n      return false;\r\n    }\r\n\r\n    if (titleGroupLookup.length > 0 || form === 'Create') {\r\n      setShowTitleGroupFormModal(true);\r\n    }\r\n\r\n    if (form === 'Edit') handleGetTitleGroupLookup(false);\r\n\r\n    return true;\r\n  };\r\n\r\n  const hideTitleGroupFormModal = () => {\r\n    setShowTitleGroupFormModal(false);\r\n    titleGroupFormRef.current.setErrorMessage('');\r\n  };\r\n\r\n  const onClickShowDeleteTitleGroupModal = () => {\r\n    if (titleGroupLookup.length > 0) setShowDeleteTitleGroupFormModal(true);\r\n  };\r\n\r\n  const hideDeleteTitleGroupModal = () => {\r\n    setShowDeleteTitleGroupFormModal(false);\r\n  };\r\n\r\n  const onFilter = (model) => {\r\n    setFilterModel({ ...model, page: 1 });\r\n  };\r\n\r\n  const onClearFilter = () => {\r\n    setFilterModel({\r\n      page: 1,\r\n      size: 50,\r\n      titleGroupSort: filterModel.titleGroupSort,\r\n      sortBy: filterModel.sortBy\r\n    });\r\n  };\r\n\r\n  const onSort = (id) => {\r\n    const newArr = sortBy;\r\n\r\n    if (newArr[id].state === true) {\r\n      newArr[id].state = false;\r\n    } else {\r\n      newArr[id].state = true;\r\n    }\r\n\r\n    setSortBy(newArr);\r\n    setFilterModel({\r\n      ...filterModel,\r\n      titleGroupSort: id,\r\n      sortBy: newArr[id].state ? 1 : 2,\r\n      page: 1,\r\n    });\r\n  };\r\n\r\n  const handleAddProgram = () => {\r\n    if (\r\n      selectedTitles === undefined ||\r\n      selectedTitles === null ||\r\n      selectedTitles.length === 0\r\n    ) {\r\n      danger('No selected Title');\r\n    } else {\r\n      const transferedTitles = JSON.parse(JSON.stringify(allTitlesFromGroup));\r\n\r\n      const programsAdded = JSON.parse(JSON.stringify(addedPrograms));\r\n      let programsRemoved = JSON.parse(JSON.stringify(removedPrograms));\r\n      selectedTitles.map((value) => {\r\n        const selectedProgram = titles.filter(\r\n          (program) => program.titleId === value\r\n        );\r\n        const [firstProgram] = selectedProgram;\r\n        if (firstProgram) {\r\n          transferedTitles[transferedTitles.length] = firstProgram;\r\n        }\r\n\r\n        if (programsRemoved.includes(value)) {\r\n          const removeIndex = programsRemoved.indexOf(value);\r\n          if (programsRemoved.length === 1) {\r\n            programsRemoved = [];\r\n          } else {\r\n            programsRemoved = programsRemoved.splice(removeIndex - 1, 1);\r\n          }\r\n        } else {\r\n          programsAdded[programsAdded.length] = value;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n\r\n      setAllTitlesFromGroup(transferedTitles);\r\n      setSelectedTitles([]);\r\n      setAddedPrograms(programsAdded);\r\n      setHasSelectedPrograms(false);\r\n      setRemovedPrograms(programsRemoved);\r\n      setIsDirty(true);\r\n      setSaveButtonIsDisabled(false);\r\n      getTitlesFromGroup(transferedTitles);\r\n      setFilterModel({\r\n        ...filterModel,\r\n        groupId: selectedTitleGroupId,\r\n        titleIds: transferedTitles,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemoveProgram = () => {\r\n    if (\r\n      selectedTitlesFromGroup === undefined ||\r\n      selectedTitlesFromGroup === null ||\r\n      selectedTitlesFromGroup.length === 0\r\n    ) {\r\n      danger('No selected Title');\r\n    } else {\r\n      let transferedTitles = JSON.parse(JSON.stringify(allTitlesFromGroup));\r\n\r\n      let programsAdded = JSON.parse(JSON.stringify(addedPrograms));\r\n      const programsRemoved = JSON.parse(JSON.stringify(removedPrograms));\r\n      selectedTitlesFromGroup.map((value) => {\r\n        transferedTitles = transferedTitles.filter(\r\n          (program) => program.titleId !== value\r\n        );\r\n\r\n        if (programsAdded.includes(value)) {\r\n          const removeIndex = programsAdded.indexOf(value);\r\n          if (programsAdded.length === 1) {\r\n            programsAdded = [];\r\n          } else {\r\n            programsAdded = programsAdded.splice(removeIndex - 1, 1);\r\n          }\r\n        } else {\r\n          programsRemoved[programsRemoved.length] = value;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n\r\n      setAllTitlesFromGroup(transferedTitles);\r\n      setSelectedTitlesFromGroup([]);\r\n      setHasSelectedTitlesFromGroup(false);\r\n      setIsDirty(true);\r\n      setSaveButtonIsDisabled(false);\r\n      getTitlesFromGroup(transferedTitles);\r\n      setFilterModel({\r\n        ...filterModel,\r\n        titleIds: transferedTitles,\r\n      });\r\n\r\n      setAddedPrograms(programsAdded);\r\n      setRemovedPrograms(programsRemoved);\r\n    }\r\n  };\r\n\r\n  const handleRemoveAll = () => {\r\n    const emptyArray = [];\r\n\r\n    setAllTitlesFromGroup(emptyArray);\r\n    getTitlesFromGroup(emptyArray);\r\n    setIsDirty(true);\r\n    setFilterModel({\r\n      ...filterModel,\r\n      titleIds: emptyArray,\r\n    });\r\n    setSaveButtonIsDisabled(false);\r\n  };\r\n\r\n  const onPaginateGroup = (pageNumber, size) => {\r\n    setSelectedTitlesFromGroup([]);\r\n    setHasSelectedTitlesFromGroup(false);\r\n    let page = pageNumber;\r\n    setIsLoadingSelectedTitlesTable(true);\r\n    let toSkip = page === 1 ? 0 : (page - 1) * size;\r\n    const titlesFromGroupList = JSON.parse(JSON.stringify(allTitlesFromGroup));\r\n    while (toSkip >= titlesFromGroupList.length) {\r\n      page -= 1;\r\n      toSkip = page === 1 ? 0 : (page - 1) * size;\r\n    }\r\n\r\n    const itemsFromGroup = titlesFromGroupList.slice(toSkip, toSkip + size);\r\n    setTitlesFromGroup(itemsFromGroup);\r\n    setTitlesFromGroupParameters({ page, size });\r\n\r\n    setTitlesFromGroupPaginationParameters({\r\n      totalCount: titlesFromGroupList.length,\r\n      pageSize: size,\r\n      currentPage: page,\r\n      totalPages: Math.ceil(titlesFromGroupList.length / size),\r\n    });\r\n    setIsLoadingSelectedTitlesTable(false);\r\n  };\r\n\r\n  const callbackSelectPrograms = (items) => {\r\n    setSelectedTitles(items);\r\n    setHasSelectedPrograms(items.length > 0);\r\n  };\r\n\r\n  const callbackSelectProgramsFromGroup = (items) => {\r\n    setSelectedTitlesFromGroup(items);\r\n    setHasSelectedTitlesFromGroup(items.length > 0);\r\n  };\r\n\r\n  const onHideProgramDetails = () => {\r\n    setSelectedTitle();\r\n    setSelectedTitleFromGroup();\r\n    setTableMinimize(false);\r\n  };\r\n\r\n  const onSaveTitlesToGroup = (shouldPreventHandleGetTitlesFromGroup) => {\r\n    setIsSavingTitlesToGroup(true);\r\n    const parameters = {\r\n      groupId: selectedTitleGroupId,\r\n      titleIds: allTitlesFromGroup.map((value) => value.titleId),\r\n    };\r\n\r\n    TitleGroupService.saveTitlesToGroup(parameters)\r\n      .then(() => {\r\n        success('Group updated successfully.');\r\n        setIsDirty(false);\r\n        handleGetTitles(filterModel);\r\n        if (!shouldPreventHandleGetTitlesFromGroup) {\r\n          handleGetTitlesFromGroup({\r\n            groupId: selectedTitleGroupId,\r\n          });\r\n        }\r\n        setHasSelectedPrograms(false);\r\n        setSelectedTitles([]);\r\n        setHasSelectedTitlesFromGroup(false);\r\n        setSelectedTitlesFromGroup([]);\r\n        setSaveButtonIsDisabled(true);\r\n        confirmNavigation();\r\n      })\r\n      .catch((error) => {\r\n        danger(error.response.data.message);\r\n      })\r\n      .finally(() => {\r\n        hidePrompt();\r\n        setIsSavingTitlesToGroup(false);\r\n      });\r\n  };\r\n\r\n  const getFromIndex = () => {\r\n    const item = selectedTitlesFromGroup[0];\r\n    const fromIndex = allTitlesFromGroup.findIndex((o) => o.titleId === item);\r\n\r\n    return fromIndex;\r\n  };\r\n\r\n  const moveItemFromArray = (toIndex) => {\r\n    const fromIndex = getFromIndex();\r\n    const item = allTitlesFromGroup[fromIndex];\r\n    const newAllTitlesFromGroup = [...allTitlesFromGroup];\r\n    newAllTitlesFromGroup.splice(fromIndex, 1);\r\n    newAllTitlesFromGroup.splice(toIndex, 0, item);\r\n    setSaveButtonIsDisabled(false);\r\n\r\n    return newAllTitlesFromGroup;\r\n  };\r\n\r\n  const findPageAfterDragging = (direction) => {\r\n    let itemIndex = 0;\r\n    switch (direction) {\r\n      case 'first':\r\n        itemIndex = 0;\r\n        break;\r\n      case 'up':\r\n        itemIndex = getFromIndex() - 1;\r\n        break;\r\n      case 'down':\r\n        itemIndex = getFromIndex() + 1;\r\n        break;\r\n      case 'last':\r\n        itemIndex = allTitlesFromGroup.length - 1;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    const pageSize = titlesFromGroupParameters.size\r\n      ? 50\r\n      : titlesFromGroupParameters.size;\r\n\r\n    return Math.ceil(++itemIndex / pageSize);\r\n  };\r\n\r\n  const paginateList = (list, direction) => {\r\n    setAllTitlesFromGroup(list);\r\n    const pageNumberAfterDragging = findPageAfterDragging(direction);\r\n    const pageNumber = pageNumberAfterDragging;\r\n    const { size } = titlesFromGroupParameters;\r\n    const toSkip = pageNumber === 1 ? 0 : (pageNumber - 1) * size;\r\n    const selectedItems = list.slice(toSkip, toSkip + size);\r\n    setTitlesFromGroup(selectedItems);\r\n    setTitlesFromGroupParameters({ page: pageNumber, size });\r\n\r\n    setTitlesFromGroupPaginationParameters({\r\n      totalCount: selectedItems.length,\r\n      pageSize: size,\r\n      currentPage: pageNumber,\r\n      totalPages: Math.ceil(list.length / size),\r\n    });\r\n    setIsLoadingSelectedTitlesTable(false);\r\n  };\r\n\r\n  const scrollIntoViewPerDrag = () => {\r\n    selectedTitleTableRef.current.scrollToSelectedRowPerDrag();\r\n  };\r\n\r\n  const dragToTop = () => {\r\n    const newAllTitlesFromGroup = moveItemFromArray(0);\r\n    paginateList(newAllTitlesFromGroup, 'first');\r\n    setTimeout(() => {\r\n      scrollIntoViewPerDrag();\r\n    }, 100);\r\n    setIsDirty(true);\r\n  };\r\n\r\n  const dragUp = () => {\r\n    if (getFromIndex() - 1 >= 0) {\r\n      const newAllTitlesFromGroup = moveItemFromArray(getFromIndex() - 1);\r\n      paginateList(newAllTitlesFromGroup, 'up');\r\n      setTimeout(() => {\r\n        scrollIntoViewPerDrag();\r\n      }, 100);\r\n      setIsDirty(true);\r\n    }\r\n  };\r\n\r\n  const dragDown = () => {\r\n    const newAllTitlesFromGroup = moveItemFromArray(getFromIndex() + 1);\r\n    paginateList(newAllTitlesFromGroup, 'down');\r\n    setTimeout(() => {\r\n      scrollIntoViewPerDrag();\r\n    }, 100);\r\n    setIsDirty(true);\r\n  };\r\n\r\n  const dragToBottom = () => {\r\n    const newAllTitlesFromGroup = moveItemFromArray(allTitlesFromGroup.length);\r\n    paginateList(newAllTitlesFromGroup, 'last');\r\n    setTimeout(() => {\r\n      scrollIntoViewPerDrag();\r\n    }, 100);\r\n    setIsDirty(true);\r\n  };\r\n\r\n  function sortSelectedTitles(model) {\r\n    let tableTwoData = JSON.parse(JSON.stringify(titlesFromGroup));\r\n    if (model.sortBy === 1) {\r\n      tableTwoData = tableTwoData.sort((a, b) => {\r\n        if (a.titleName.toLowerCase() > b.titleName.toLowerCase()) return 1;\r\n        return -1;\r\n      });\r\n    } else {\r\n      tableTwoData = tableTwoData.sort((a, b) => {\r\n        if (a.titleName.toLowerCase() > b.titleName.toLowerCase()) return -1;\r\n        return 1;\r\n      });\r\n    }\r\n    setTitlesFromGroup(tableTwoData);\r\n  }\r\n  \r\n  const handleDiscardChanges = (fromSaveAndProceed) => {\r\n    setIsDirty(false);\r\n    setShowConfirmLeaveModal(false);\r\n    setSaveButtonIsDisabled(true);\r\n\r\n    switch (nextFilter.action) {\r\n      case 'Select title group':\r\n        setSelectedTitleGroupText(nextFilter.data.name);\r\n        setSelectedTitleGroupId(nextFilter.data.id);\r\n        break;\r\n      case 'Open group form modal':\r\n        onClickShowTitleGroupFormModal(nextFilter.data, true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    handleGetTitles(filterModel);\r\n    if (!fromSaveAndProceed)\r\n      handleGetTitlesFromGroup({ groupId: selectedTitleGroupId });\r\n    setHasSelectedTitlesFromGroup(false);\r\n    setSelectedTitlesFromGroup([]);\r\n    setHasSelectedPrograms(false);\r\n    setSelectedTitles([]);\r\n  };\r\n\r\n  const handleGetTitleGroupSession = () => {\r\n    TitleGroupService.getTitleGroupSession().then((response) => {\r\n      if (response.data.titleGroupId && response.data.titleGroupName) {\r\n        setSelectedTitleGroupId(response.data.titleGroupId);\r\n        setSelectedTitleGroupText(response.data.titleGroupName);\r\n      } else {\r\n        setHasNoSession(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSaveTitleGroupSession = (titleGroupId) => {\r\n    TitleGroupService.saveTitleGroupSession({ titleGroupId });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    handleGetTitleGroupSession();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleGetTitleGroupLookup();\r\n    handleGetUser();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedTitleGroupId) {\r\n      handleGetTitlesFromGroup({ groupId: selectedTitleGroupId });\r\n      handleSaveTitleGroupSession(selectedTitleGroupId);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedTitleGroupId]);\r\n\r\n  useEffect(() => {\r\n    if (renderTimes > 0) handleGetTitles(filterModel);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filterModel]);\r\n\r\n  useEffect(() => {\r\n    if (selectedTitle) handleGetTitleById();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedTitle]);\r\n\r\n  useEffect(() => {\r\n    if (selectedTitleFromGroup) handleGetTitleByIdFromGroup();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedTitleFromGroup]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      titlesFromGroupPaginationParameters.currentPage >\r\n      titlesFromGroupPaginationParameters.totalPages\r\n    ) {\r\n      setTitlesFromGroupPaginationParameters((prevState) => ({\r\n        ...prevState,\r\n        currentPage: titlesFromGroupPaginationParameters.totalPages,\r\n      }));\r\n      setTitlesFromGroupParameters((prevState) => ({\r\n        ...prevState,\r\n        page: titlesFromGroupPaginationParameters.totalPages,\r\n      }));\r\n\r\n      const { size } = titlesFromGroupParameters;\r\n      const toSkip =\r\n        titlesFromGroupPaginationParameters.totalPages === 1\r\n          ? 0\r\n          : (titlesFromGroupPaginationParameters.totalPages - 1) * size;\r\n      const selectedItems = allTitlesFromGroup.slice(toSkip, toSkip + size);\r\n      setTitlesFromGroup(selectedItems);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [titlesFromGroupPaginationParameters]);\r\n\r\n  return (\r\n    <div>\r\n      <BannerComponent\r\n        componentName=\"Title Groups\"\r\n        isAddButtonHidden\r\n        isSearchHidden\r\n      />\r\n      <hr className={styles.divider} />\r\n\r\n      <div className=\"d-flex\">\r\n        <div className={styles.titleGroupSelect}>\r\n          <label>Title Group:</label>\r\n          <SelectComponent\r\n            text={selectedTitleGroupText}\r\n            list={titleGroupLookup}\r\n            width=\"373px\"\r\n            onSelect={onSelectSetSelectedTitleGroupText}\r\n            disabled={titleGroupLookup.length === 0}\r\n            withSearch\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.actionButtons}>\r\n          <img\r\n            src={AddButton}\r\n            className={styles.addIcon}\r\n            alt=\"\"\r\n            title=\"New title group\"\r\n            onClick={() => onClickShowTitleGroupFormModal('Create')}\r\n          />\r\n          <img\r\n            className={\r\n              titleGroupLookup.length === 0 && styles.disabledActionButton\r\n            }\r\n            src={pencilIcon}\r\n            alt=\"\"\r\n            title=\"Edit title group\"\r\n            onClick={() => onClickShowTitleGroupFormModal('Edit')}\r\n          />\r\n          <img\r\n            className={\r\n              titleGroupLookup.length === 0 && styles.disabledActionButton\r\n            }\r\n            src={trashCanIcon}\r\n            alt=\"\"\r\n            title=\"Delete title group\"\r\n            onClick={onClickShowDeleteTitleGroupModal}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex mt-2\">\r\n        <div className={styles.programmeTitlesTableWrapper}>\r\n          {selectedTitleGroupText === 'No available title group' ? (\r\n            <div\r\n              className={`${styles.divNoAvailableChannelSelected}\r\n              ${tableMinimize && styles.divNoAvailableChannelSelectedSmall}`}\r\n            >\r\n              <div className={styles.verbiage}>\r\n                <div>\r\n                  Please select a title group to list its available programme\r\n                  titles.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <label className={styles.tableLabel}>Programme titles:</label>\r\n\r\n              <div className=\"w-100\">\r\n                <TableComponent\r\n                  ref={tableRef}\r\n                  list={titles}\r\n                  filterModel={filterModel}\r\n                  sortBy={sortBy}\r\n                  selectedTitles={selectedTitles}\r\n                  paginationParameters={titlesPaginationParameters}\r\n                  isTableLoading={isTableLoading}\r\n                  tableMinimize={tableMinimize}\r\n                  onFilter={onFilter}\r\n                  onClearFilter={onClearFilter}\r\n                  onSort={onSort}\r\n                  paginate={handleOnPaginate}\r\n                  callbackSelectPrograms={callbackSelectPrograms}\r\n                  onEyeSelect={onClickSelectTitle}\r\n                  viewedProgram={selectedTitle}\r\n                  titleSource={titleSource}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.divButtons}>\r\n          <button\r\n            onClick={handleAddProgram}\r\n            disabled={!hasSelectedPrograms}\r\n            type=\"button\"\r\n          >\r\n            Add Selected\r\n            <img className={styles.arrowIcon} src={arrowLeftIcon} alt=\"\" />\r\n          </button>\r\n          <button\r\n            onClick={handleRemoveAll}\r\n            className={styles.removeAllButton}\r\n            disabled={allTitlesFromGroup.length === 0}\r\n            type=\"button\"\r\n          >\r\n            <img src={arrowRightIcon} alt=\"\" />\r\n            <span>Remove All</span>\r\n          </button>\r\n          <button\r\n            onClick={handleRemoveProgram}\r\n            disabled={\r\n              !hasSelectedTitlesFromGroup || allTitlesFromGroup.length === 0\r\n            }\r\n            type=\"button\"\r\n          >\r\n            <img className={styles.arrowIcon} src={arrowRightIcon} alt=\"\" />\r\n            Remove Selected\r\n          </button>\r\n        </div>\r\n\r\n        <div className={styles.selectedTableWrapper}>\r\n          {selectedTitleGroupText === 'No available title group' ||\r\n          allTitlesFromGroup.length === 0 ? (\r\n            <div\r\n              className={`${\r\n                tableMinimize\r\n                  ? styles.divNoAvailableChannelSelectedSmall\r\n                  : styles.divNoAvailableChannelSelected\r\n              }`}\r\n            >\r\n              <div className={styles.verbiage}>\r\n                <div>Please select and add programme titles to group</div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className={styles.tableLabel}>Group:</div>\r\n              <SelectedTitleTable\r\n                ref={selectedTitleTableRef}\r\n                list={titlesFromGroup}\r\n                isTableLoading={\r\n                  (isTableLoading && renderTimes === 1) ||\r\n                  isLoadingSelectedTitlesTable\r\n                }\r\n                tableMinimize={tableMinimize}\r\n                handleSortSelectedTitles={sortSelectedTitles}\r\n                filterModel={titlesFromGroupParameters}\r\n                selectedTitles={selectedTitlesFromGroup}\r\n                paginationParameters={titlesFromGroupPaginationParameters}\r\n                paginate={onPaginateGroup}\r\n                callbackSelectPrograms={callbackSelectProgramsFromGroup}\r\n                onEyeSelect={onClickSelectTitleFromGroup}\r\n                viewedProgram={selectedTitleFromGroup}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <button\r\n            className={styles.chevLastUp}\r\n            disabled={\r\n              allTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length > 1\r\n            }\r\n            onClick={dragToTop}\r\n            aria-label=\"dragToTop\"\r\n          />\r\n          <button\r\n            className={styles.chevUp}\r\n            disabled={\r\n              allTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length > 1\r\n            }\r\n            onClick={dragUp}\r\n            aria-label=\"dragUp\"\r\n          />\r\n          <button\r\n            className={styles.chevLastDown}\r\n            disabled={\r\n              allTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length > 1\r\n            }\r\n            onClick={dragDown}\r\n            aria-label=\"dragDown\"\r\n          />\r\n          <button\r\n            className={styles.chevDown}\r\n            disabled={\r\n              allTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length === 0 ||\r\n              selectedTitlesFromGroup.length > 1\r\n            }\r\n            onClick={dragToBottom}\r\n            aria-label=\"dragToBottom\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {tableMinimize && (\r\n        <div className={styles.programDetailsWrapper}>\r\n          {titleSource === 1 ? (\r\n            <ProgramDetailsComponent\r\n              component=\"Title Group\"\r\n              program={title}\r\n              callbackCloseDetails={onHideProgramDetails}\r\n            />\r\n          ) : (\r\n            <ImportProgramDetailsComponent\r\n              component=\"Title Group\"\r\n              program={title}\r\n              callbackCloseDetails={onHideProgramDetails}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className={styles.buttons}>\r\n        <Button\r\n          text=\"Save\"\r\n          isLoading={isSavingTitlesToGroup}\r\n          onClick={onSaveTitlesToGroup}\r\n          disabled={titleGroupLookup.length === 0 || saveButtonIsDisabled}\r\n        />\r\n      </div>\r\n\r\n      <TitleGroupFormModalComponent\r\n        ref={titleGroupFormRef}\r\n        predefinedName={selectedTitleGroupText}\r\n        show={showTitleGroupFormModal}\r\n        formType={formType}\r\n        isTableLoading={isLoadingSelectedTitlesTable}\r\n        isSaving={isSaving}\r\n        onHide={hideTitleGroupFormModal}\r\n        onSave={handleSaveTitleGroup}\r\n        onUpdate={handleUpdateTitleGroup}\r\n        setSavedCreateTitleGroupNameText={setSavedCreateTitleGroupNameText}\r\n      />\r\n\r\n      <DeleteTitleGroupModalComponent\r\n        show={showDeleteTitleGroupFormModal}\r\n        isSaving={isSaving}\r\n        onDelete={handleDeleteTitleGroup}\r\n        onHide={hideDeleteTitleGroupModal}\r\n      />\r\n\r\n      <ConfirmLeavePageModalComponent\r\n        show={showPrompt}\r\n        onHide={hidePrompt}\r\n        onSave={onSaveTitlesToGroup}\r\n        onDiscard={confirmNavigation}\r\n      />\r\n\r\n      <ConfirmLeavePageModalComponent\r\n        show={showConfirmLeaveModal}\r\n        onHide={() => setShowConfirmLeaveModal(false)}\r\n        onSave={() => {\r\n          onSaveTitlesToGroup(true);\r\n          handleDiscardChanges(true);\r\n        }}\r\n        onDiscard={() => handleDiscardChanges(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleGroupComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"bootstrapSpinner\":\"styles_bootstrapSpinner__Rq0Tl\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction BootstrapSpinner({ size }) {\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            <div className={styles.bootstrapSpinner} style={{ width: size, height: size }}>\r\n                <i\r\n                    className=\"fas fa-circle-notch fa-spin\"\r\n                    style={{ fontSize: size, color: '#008662' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBootstrapSpinner.propTypes = {\r\n    size: PropTypes.string,\r\n};\r\n  \r\nBootstrapSpinner.defaultProps = {\r\n    size: '40px',\r\n};\r\n\r\nexport default BootstrapSpinner;","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"styles_input__wLU5u\",\"label\":\"styles_label__46S-k\",\"errorInput\":\"styles_errorInput__8Ly1J\",\"errorMessage\":\"styles_errorMessage__O6AC0\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction InputComponent({\r\n  label,\r\n  name,\r\n  type,\r\n  placeHolder,\r\n  value,\r\n  showErrorMessage,\r\n  errorMessage,\r\n  maxLength,\r\n  isRequired,\r\n  width,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <>\r\n      {label && (\r\n        <div className={styles.label}>\r\n          {label}\r\n          {' '}\r\n          {isRequired && <span style={{ color: '#FF7878' }}>*</span>}\r\n        </div>\r\n      )}\r\n\r\n      <input\r\n        className={`${styles.input} ${showErrorMessage && styles.errorInput}`}\r\n        style={{ width }}\r\n        name={name && name}\r\n        type={type && type}\r\n        placeholder={placeHolder && placeHolder}\r\n        value={value && value}\r\n        maxLength={maxLength && maxLength}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n      />\r\n\r\n      {showErrorMessage && (\r\n        <small className={styles.errorMessage}>{errorMessage}</small>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nInputComponent.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  placeHolder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  showErrorMessage: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  maxLength: PropTypes.string,\r\n  isRequired: PropTypes.bool,\r\n  width: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nInputComponent.defaultProps = {\r\n  label: '',\r\n  name: '',\r\n  type: 'text',\r\n  placeHolder: '',\r\n  value: '',\r\n  showErrorMessage: false,\r\n  errorMessage: '',\r\n  maxLength: '',\r\n  isRequired: false,\r\n  width: '',\r\n  onChange: null,\r\n};\r\n\r\nexport default InputComponent;\r\n"],"names":["getTitleGroupLookup","url","process","axios","getTitleGroup","titleGroupId","addTitleGroup","json","editTitleGroup","deleteTitleGroup","getTitles","parameters","getTitle","titleId","saveTitlesToGroup","getTitlesFromGroup","titleIdsParameter","titleIds","map","value","join","groupId","getTitleGroupSession","saveTitleGroupSession","TitleGroupFormModalComponent","forwardRef","ref","show","onHide","isSaving","onSave","onUpdate","formType","predefinedName","setSavedCreateTitleGroupNameText","useState","titleGroupName","setTitleGroupName","errorMessage","setErrorMessage","useImperativeHandle","clearTitleGroupName","message","useEffect","onSubmit","Modal","centered","className","styles","label","placeHolder","showErrorMessage","maxLength","isRequired","onChange","e","target","Button","text","defaultBtn","onClick","isLoading","defaultProps","displayName","DeleteTitleGroupModalComponent","onDelete","TitleGroupForms","tableHeaders","selectedTitleTableHeaders","React","StartsWithFilterComponent","props","options","optionId","optionText","selectedOption","setSelectedOption","showOptions","setShowOptions","startsWithInput","setStartsWithInput","disableFilterButton","setDisableFilterButton","startsWithFilterRef","useRef","backdropClicked","current","contains","component","selectOption","option","changeToDefaultForm","setTemporaryFilterModel","action","model","JSON","parse","stringify","filterModel","titleFilter","titleFilterValue","useCache","genreFilter","genreFilterValue","durationFilter","durationFilterValue","gradeFilter","gradeFilterValue","yearFilter","yearFilterValue","certificateFilter","certificateFilterValue","undefined","onClickedButtonClearFilter","onClickedButtonFilter","toggleDropdown","clearFilterModel","document","addEventListener","removeEventListener","type","style","display","marginBottom","length","height","onKeyDown","role","id","placeholder","backgroundColor","disabled","sortBy","handleSetSortBy","onClickedButtonClearAllFilters","titleSource","showTitleNameFilter","setShowTitleNameFilter","showGenreFilter","setShowGenreFilter","showDurationFilter","setShowDurationFilter","showGradeFilter","setShowGradeFilter","showYearFilter","setShowYearFilter","showCertificateFilter","setShowCertificateFilter","showClearFilterIcon","setShowClearAllFilterIcon","titleNameFilterRef","genreFilterRef","durationFilterRef","gradeFilterRef","yearFilterRef","certificateFilterRef","header","onClickedButtonFilterClick","handleSort","titleGroupSort","state","onClickedButtonClearAllFiltersTitle","src","filteredIcon","filterIcon","alt","arrowUpIcon","transform","hidden","clearFilterIcon","width","TableData","programs","callbackSelectPrograms","selectedPrograms","tableMinimize","viewedProgram","onEyeSelect","eyeRef","scrollToProgram","setTimeout","scrollIntoView","behavior","block","selectRow","data","filteredArray","includes","filter","push","viewRow","name","getEyeIcon","parseInt","eyeOffIcon","eyeIconSelected","eyeIcon","filterBrightness","BootstrapSpinner","colSpan","fontSize","fontWeight","color","textAlign","overrode","textIndent","title","titleName","genre","duration","grade","certificate","year","cursor","marginLeft","TitleTableComponent","list","selectedTitles","paginationParameters","isTableLoading","onFilter","onClearFilter","onSort","paginate","dataComponentRef","TableComponent","stylesTable","tableHeader","isTableBodyLoading","SelectedTableData","selectedRowRef","scrollToSelectedRowPerDrag","getFilterBrightness","Styles","userSort","SelectedTitleTable","handleSortSelectedTitles","setSortBy","newArr","titleGroupFormRef","selectedTitleTableRef","tableRef","saveButtonIsDisabled","setSaveButtonIsDisabled","hasNoSession","setHasNoSession","renderTimes","setRenderTimes","titles","setTitles","titleGroupLookup","setTitleGroupLookup","isSavingTitlesToGroup","setIsSavingTitlesToGroup","savedCreateTitleGroupNameText","selectedTitleGroupText","setSelectedTitleGroupText","selectedTitleGroupId","setSelectedTitleGroupId","showTitleGroupFormModal","setShowTitleGroupFormModal","showDeleteTitleGroupFormModal","setShowDeleteTitleGroupFormModal","setFormType","page","size","titleSort","setFilterModel","setSelectedTitles","titlesPaginationParameters","setTitlesPaginationParameters","setIsTableLoading","setTableMinimize","addedPrograms","setAddedPrograms","removedPrograms","setRemovedPrograms","isLoadingSelectedTitlesTable","setIsLoadingSelectedTitlesTable","hasSelectedPrograms","setHasSelectedPrograms","hasSelectedTitlesFromGroup","setHasSelectedTitlesFromGroup","allTitlesFromGroup","setAllTitlesFromGroup","titlesFromGroup","setTitlesFromGroup","titlesFromGroupParameters","setTitlesFromGroupParameters","titlesFromGroupPaginationParameters","setTitlesFromGroupPaginationParameters","selectedTitlesFromGroup","setSelectedTitlesFromGroup","isDirty","setIsDirty","useCallbackPrompt","showPrompt","confirmNavigation","hidePrompt","showConfirmLeaveModal","setShowConfirmLeaveModal","nextFilter","setNextFilter","selectedTitle","setSelectedTitle","selectedTitleFromGroup","setSelectedTitleFromGroup","setTitle","setTitleSource","setIsSaving","handleGetTitles","TitleGroupService","queryString","certificatreFilter","certificatreFilterValue","replace","constructQueryString","then","response","constructedTitles","item","overrodeValues","totalCount","totalData","pageSize","currentPage","totalPages","finally","items","shouldGoToPageOne","pageNumber","toSkip","selectedItems","slice","Math","ceil","handleGetTitlesFromGroup","handleGetTitleGroupLookup","shouldSelectFirstItem","fromAddForm","titleGroup","find","o","onClickShowTitleGroupFormModal","form","shouldProceed","onHideProgramDetails","onSaveTitlesToGroup","shouldPreventHandleGetTitlesFromGroup","success","catch","error","danger","getFromIndex","findIndex","moveItemFromArray","toIndex","fromIndex","newAllTitlesFromGroup","splice","paginateList","direction","pageNumberAfterDragging","itemIndex","findPageAfterDragging","scrollIntoViewPerDrag","handleDiscardChanges","fromSaveAndProceed","userId","AuthService","ProfileService","organisationTitleSource","handleGetUser","prevState","BannerComponent","componentName","isAddButtonHidden","isSearchHidden","onSelect","withSearch","AddButton","pencilIcon","trashCanIcon","transferedTitles","programsAdded","programsRemoved","selectedProgram","program","firstProgram","removeIndex","indexOf","arrowLeftIcon","emptyArray","arrowRightIcon","tableTwoData","sort","a","b","toLowerCase","titlesFromGroupList","itemsFromGroup","callbackCloseDetails","ImportProgramDetailsComponent","ConfirmLeavePageModalComponent","onDiscard","position","InputComponent","autoComplete"],"sourceRoot":""}